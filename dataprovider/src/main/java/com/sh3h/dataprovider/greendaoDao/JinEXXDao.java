package com.sh3h.dataprovider.greendaoDao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.sh3h.dataprovider.greendaoEntity.JinEXX;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table ZW_JinEMX.
*/
public class JinEXXDao extends AbstractDao<JinEXX, Void> {

    public static final String TABLENAME = "ZW_JinEMX";

    /**
     * Properties of entity JinEXX.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property I_CHAOBIAOID = new Property(0, Integer.class, "I_CHAOBIAOID", false, "I_CHAOBIAOID");
        public final static Property S_CID = new Property(1, String.class, "S_CID", false, "S_CID");
        public final static Property S_JIANHAO = new Property(2, String.class, "S_JIANHAO", false, "S_JIANHAO");
        public final static Property I_JIETIJB = new Property(3, Integer.class, "I_JIETIJB", false, "I_JIETIJB");
        public final static Property I_FEIYONGID = new Property(4, Integer.class, "I_FEIYONGID", false, "I_FEIYONGID");
        public final static Property I_FEIYONGDLID = new Property(5, Integer.class, "I_FEIYONGDLID", false, "I_FEIYONGDLID");
        public final static Property I_QISHIY = new Property(6, Integer.class, "I_QISHIY", false, "I_QISHIY");
        public final static Property I_JIESHUY = new Property(7, Integer.class, "I_JIESHUY", false, "I_JIESHUY");
        public final static Property N_JIAGE = new Property(8, Double.class, "N_JIAGE", false, "N_JIAGE");
        public final static Property N_XISHU = new Property(9, Double.class, "N_XISHU", false, "N_XISHU");
        public final static Property I_JIETISL = new Property(10, Integer.class, "I_JIETISL", false, "I_JIETISL");
        public final static Property I_CHAOJIANSL = new Property(11, Integer.class, "I_CHAOJIANSL", false, "I_CHAOJIANSL");
        public final static Property N_JIETIJE = new Property(12, Double.class, "N_JIETIJE", false, "N_JIETIJE");
    };


    public JinEXXDao(DaoConfig config) {
        super(config);
    }
    
    public JinEXXDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'ZW_JinEMX' (" + //
                "'I_CHAOBIAOID' INTEGER," + // 0: I_CHAOBIAOID
                "'S_CID' TEXT," + // 1: S_CID
                "'S_JIANHAO' TEXT," + // 2: S_JIANHAO
                "'I_JIETIJB' INTEGER," + // 3: I_JIETIJB
                "'I_FEIYONGID' INTEGER," + // 4: I_FEIYONGID
                "'I_FEIYONGDLID' INTEGER," + // 5: I_FEIYONGDLID
                "'I_QISHIY' INTEGER," + // 6: I_QISHIY
                "'I_JIESHUY' INTEGER," + // 7: I_JIESHUY
                "'N_JIAGE' REAL," + // 8: N_JIAGE
                "'N_XISHU' REAL," + // 9: N_XISHU
                "'I_JIETISL' INTEGER," + // 10: I_JIETISL
                "'I_CHAOJIANSL' INTEGER," + // 11: I_CHAOJIANSL
                "'N_JIETIJE' REAL);"); // 12: N_JIETIJE
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'ZW_JinEMX'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, JinEXX entity) {
        stmt.clearBindings();
 
        Integer I_CHAOBIAOID = entity.getI_CHAOBIAOID();
        if (I_CHAOBIAOID != null) {
            stmt.bindLong(1, I_CHAOBIAOID);
        }
 
        String S_CID = entity.getS_CID();
        if (S_CID != null) {
            stmt.bindString(2, S_CID);
        }
 
        String S_JIANHAO = entity.getS_JIANHAO();
        if (S_JIANHAO != null) {
            stmt.bindString(3, S_JIANHAO);
        }
 
        Integer I_JIETIJB = entity.getI_JIETIJB();
        if (I_JIETIJB != null) {
            stmt.bindLong(4, I_JIETIJB);
        }
 
        Integer I_FEIYONGID = entity.getI_FEIYONGID();
        if (I_FEIYONGID != null) {
            stmt.bindLong(5, I_FEIYONGID);
        }
 
        Integer I_FEIYONGDLID = entity.getI_FEIYONGDLID();
        if (I_FEIYONGDLID != null) {
            stmt.bindLong(6, I_FEIYONGDLID);
        }
 
        Integer I_QISHIY = entity.getI_QISHIY();
        if (I_QISHIY != null) {
            stmt.bindLong(7, I_QISHIY);
        }
 
        Integer I_JIESHUY = entity.getI_JIESHUY();
        if (I_JIESHUY != null) {
            stmt.bindLong(8, I_JIESHUY);
        }
 
        Double N_JIAGE = entity.getN_JIAGE();
        if (N_JIAGE != null) {
            stmt.bindDouble(9, N_JIAGE);
        }
 
        Double N_XISHU = entity.getN_XISHU();
        if (N_XISHU != null) {
            stmt.bindDouble(10, N_XISHU);
        }
 
        Integer I_JIETISL = entity.getI_JIETISL();
        if (I_JIETISL != null) {
            stmt.bindLong(11, I_JIETISL);
        }
 
        Integer I_CHAOJIANSL = entity.getI_CHAOJIANSL();
        if (I_CHAOJIANSL != null) {
            stmt.bindLong(12, I_CHAOJIANSL);
        }
 
        Double N_JIETIJE = entity.getN_JIETIJE();
        if (N_JIETIJE != null) {
            stmt.bindDouble(13, N_JIETIJE);
        }
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    /** @inheritdoc */
    @Override
    public JinEXX readEntity(Cursor cursor, int offset) {
        JinEXX entity = new JinEXX( //
            cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0), // I_CHAOBIAOID
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // S_CID
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // S_JIANHAO
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // I_JIETIJB
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // I_FEIYONGID
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5), // I_FEIYONGDLID
            cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6), // I_QISHIY
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // I_JIESHUY
            cursor.isNull(offset + 8) ? null : cursor.getDouble(offset + 8), // N_JIAGE
            cursor.isNull(offset + 9) ? null : cursor.getDouble(offset + 9), // N_XISHU
            cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10), // I_JIETISL
            cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11), // I_CHAOJIANSL
            cursor.isNull(offset + 12) ? null : cursor.getDouble(offset + 12) // N_JIETIJE
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, JinEXX entity, int offset) {
        entity.setI_CHAOBIAOID(cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0));
        entity.setS_CID(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setS_JIANHAO(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setI_JIETIJB(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setI_FEIYONGID(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setI_FEIYONGDLID(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
        entity.setI_QISHIY(cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6));
        entity.setI_JIESHUY(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setN_JIAGE(cursor.isNull(offset + 8) ? null : cursor.getDouble(offset + 8));
        entity.setN_XISHU(cursor.isNull(offset + 9) ? null : cursor.getDouble(offset + 9));
        entity.setI_JIETISL(cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10));
        entity.setI_CHAOJIANSL(cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11));
        entity.setN_JIETIJE(cursor.isNull(offset + 12) ? null : cursor.getDouble(offset + 12));
     }
    
    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(JinEXX entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    /** @inheritdoc */
    @Override
    public Void getKey(JinEXX entity) {
        return null;
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}

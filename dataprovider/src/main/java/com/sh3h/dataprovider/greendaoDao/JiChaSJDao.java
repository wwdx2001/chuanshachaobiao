package com.sh3h.dataprovider.greendaoDao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import com.sh3h.dataprovider.greendaoEntity.JiChaSJ;

import java.util.ArrayList;
import java.util.List;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;
import de.greenrobot.dao.query.DeleteQuery;
import de.greenrobot.dao.query.QueryBuilder;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table CB_JiChaSJ.
 */
public class JiChaSJDao extends AbstractDao<JiChaSJ, Long> {

    public static final String TABLENAME = "CB_JiChaSJ";
    public static final int ALLWORK = 6;
    /**
     * 查找未完成任务
     */
    public static final int NOWORK = 0;
    /**
     * 查找已抄任务
     */
    public static final int FINISHWORK = 1;
    /**
     * 开账
     */
    public static final int NORMALWORK = 2;
    /**
     * 3延迟
     */
    public static final int YANCHILX_YC = 3;
    /**
     * 4外复延迟
     */
    public static final int YANCHILX_WF = 4;

    /**
     * 异常抄表数据
     */
    public static final int UNNORMALWORK = 3;

    /**
     * 抄表量低抄表数据
     */
    public static final int CB_LIANGDI_SJ = 2;

    /**
     * 抄表数据
     */
    public static final String CB_CHAOBIAOSJ = "CB_CHAOBIAOSJ";

    /**
     * 抄表状态
     */
    public static final String CB_ChaoBiaoZT = "CB_ChaoBiaoZT";

    private final String WEICHAO = "未抄";
    //正常
    private static final String NORMAL = "正常";
    private SQLiteDatabase _db = null;

    /**
     * Properties of entity JiChaSJ.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property ID = new Property(0, long.class, "ID", true, "ID");
        public final static Property I_RenWuBH = new Property(1, int.class, "I_RenWuBH", false, "I_RENWUBH");
        public final static Property S_CH = new Property(2, String.class, "S_CH", false, "S_CH");
        public final static Property I_CENEIXH = new Property(3, int.class, "I_CENEIXH", false, "I_CENEIXH");
        public final static Property S_CID = new Property(4, String.class, "S_CID", false, "S_CID");
        public final static Property S_ST = new Property(5, String.class, "S_ST", false, "S_ST");
        public final static Property I_CHAOBIAON = new Property(6, int.class, "I_CHAOBIAON", false, "I_CHAOBIAON");
        public final static Property I_CHAOBIAOY = new Property(7, int.class, "I_CHAOBIAOY", false, "I_CHAOBIAOY");
        public final static Property I_CC = new Property(8, int.class, "I_CC", false, "I_CC");
        public final static Property D_CHAOBIAORQ = new Property(9, long.class, "D_CHAOBIAORQ", false, "D_CHAOBIAORQ");
        public final static Property I_SHANGCICM = new Property(10, int.class, "I_SHANGCICM", false, "I_SHANGCICM");
        public final static Property I_BENCICM = new Property(11, int.class, "I_BENCICM", false, "I_BENCICM");
        public final static Property I_CHAOJIANSL = new Property(12, int.class, "I_CHAOJIANSL", false, "I_CHAOJIANSL");
        public final static Property I_ZHUANGTAIBM = new Property(13, int.class, "I_ZHUANGTAIBM", false, "I_ZHUANGTAIBM");
        public final static Property S_ZHUANGTAIMC = new Property(14, String.class, "S_ZHUANGTAIMC", false, "S_ZHUANGTAIMC");
        public final static Property D_SHANGCICBRQ = new Property(15, long.class, "D_SHANGCICBRQ", false, "D_SHANGCICBRQ");
        public final static Property I_SHANGCIZTBM = new Property(16, int.class, "I_SHANGCIZTBM", false, "I_SHANGCIZTBM");
        public final static Property S_ShangCiZTMC = new Property(17, String.class, "S_ShangCiZTMC", false, "S_SHANGCIZTMC");
        public final static Property I_ShangCiCJSL = new Property(18, int.class, "I_ShangCiCJSL", false, "I_SHANGCICJSL");
        public final static Property I_SHANGCIZTLXS = new Property(19, int.class, "I_SHANGCIZTLXS", false, "I_SHANGCIZTLXS");
        public final static Property I_PINGJUNL1 = new Property(20, int.class, "I_PINGJUNL1", false, "I_PINGJUNL1");
        public final static Property I_PINGJUNL2 = new Property(21, int.class, "I_PINGJUNL2", false, "I_PINGJUNL2");
        public final static Property I_PINGJUNL3 = new Property(22, int.class, "I_PINGJUNL3", false, "I_PINGJUNL3");
        public final static Property N_JE = new Property(23, Double.class, "N_JE", false, "N_JE");
        public final static Property S_ZONGBIAOCID = new Property(24, String.class, "S_ZONGBIAOCID", false, "S_ZONGBIAOCID");
        public final static Property S_CHAOBIAOY = new Property(25, String.class, "S_CHAOBIAOY", false, "S_CHAOBIAOY");
        public final static Property I_CHAOBIAOBZ = new Property(26, int.class, "I_CHAOBIAOBZ", false, "I_CHAOBIAOBZ");
        public final static Property I_JIUBIAOCM = new Property(27, int.class, "I_JIUBIAOCM", false, "I_JIUBIAOCM");
        public final static Property I_XINBIAODM = new Property(28, int.class, "I_XINBIAODM", false, "I_XINBIAODM");
        public final static Property D_HUANBIAORQ = new Property(29, long.class, "D_HUANBIAORQ", false, "D_HUANBIAORQ");
        public final static Property I_FANGSHIBM = new Property(30, int.class, "I_FANGSHIBM", false, "I_FANGSHIBM");
        public final static Property I_LIANGGAOLDYYBM = new Property(31, int.class, "I_LIANGGAOLDYYBM", false, "I_LIANGGAOLDYYBM");
        public final static Property I_CHAOBIAOID = new Property(32, int.class, "I_CHAOBIAOID", false, "I_CHAOBIAOID");
        public final static Property I_ZHUANGTAILXS = new Property(33, int.class, "I_ZHUANGTAILXS", false, "I_ZHUANGTAILXS");
        public final static Property I_SHUIBIAOBL = new Property(34, int.class, "I_SHUIBIAOBL", false, "I_SHUIBIAOBL");
        public final static Property N_YONGSHUIZKL = new Property(35, Double.class, "N_YONGSHUIZKL", false, "N_YONGSHUIZKL");
        public final static Property N_PAISHUIZKL = new Property(36, Double.class, "N_PAISHUIZKL", false, "N_PAISHUIZKL");
        public final static Property I_TIAOJIAH = new Property(37, int.class, "I_TIAOJIAH", false, "I_TIAOJIAH");
        public final static Property S_JianHao = new Property(38, String.class, "S_JianHao", false, "S_JIANHAO");
        public final static Property D_XIAZAISJ = new Property(39, long.class, "D_XIAZAISJ", false, "D_XIAZAISJ");
        public final static Property I_LINGYONGSLSM = new Property(40, int.class, "I_LINGYONGSLSM", false, "I_LINGYONGSLSM");
        public final static Property I_LIANGGAOSL = new Property(41, int.class, "I_LIANGGAOSL", false, "I_LIANGGAOSL");
        public final static Property I_LIANGDISL = new Property(42, int.class, "I_LIANGDISL", false, "I_LIANGDISL");
        public final static Property S_X1 = new Property(43, String.class, "S_X1", false, "S_X1");
        public final static Property S_Y1 = new Property(44, String.class, "S_Y1", false, "S_Y1");
        public final static Property S_X = new Property(45, String.class, "S_X", false, "S_X");
        public final static Property S_Y = new Property(46, String.class, "S_Y", false, "S_Y");
        public final static Property S_CHAOBIAOBZ = new Property(47, String.class, "S_CHAOBIAOBZ", false, "S_CHAOBIAOBZ");
        public final static Property I_CeNeiPX = new Property(48, int.class, "I_CeNeiPX", false, "I_CENEIPX");
        public final static Property I_XiaZaiCS = new Property(49, int.class, "I_XiaZaiCS", false, "I_XIAZAICS");
        public final static Property D_ZuiHouYCXZSJ = new Property(50, long.class, "D_ZuiHouYCXZSJ", false, "D_ZUIHOUYCXZSJ");
        public final static Property D_ZuiHouYCSCSJ = new Property(51, long.class, "D_ZuiHouYCSCSJ", false, "D_ZUIHOUYCSCSJ");
        public final static Property I_ShangChuanBZ = new Property(52, int.class, "I_ShangChuanBZ", false, "I_SHANGCHUANBZ");
        public final static Property I_ShenHeBZ = new Property(53, int.class, "I_ShenHeBZ", false, "I_SHENHEBZ");
        public final static Property I_KaiZhangBZ = new Property(54, int.class, "I_KaiZhangBZ", false, "I_KAIZHANGBZ");
        public final static Property I_DiaoDongBZ = new Property(55, int.class, "I_DiaoDongBZ", false, "I_DIAODONGBZ");
        public final static Property I_WaiFuYYBH = new Property(56, int.class, "I_WaiFuYYBH", false, "I_WAIFUYYBH");
        public final static Property S_JIETITS = new Property(57, String.class, "S_JIETITS", false, "S_JIETITS");
        public final static Property S_YANCIYY = new Property(58, String.class, "S_YANCIYY", false, "S_YANCIYY");
        public final static Property I_LASTREADINGCHILD = new Property(59, int.class, "I_LASTREADINGCHILD", false, "I_LASTREADINGCHILD");
        public final static Property I_READINGCHILD = new Property(60, int.class, "I_READINGCHILD", false, "I_READINGCHILD");
        public final static Property I_JiChaSL = new Property(61, int.class, "I_JiChaSL", false, "I_JICHASL");
        public final static Property I_JiChaCM = new Property(62, int.class, "I_JiChaCM", false, "I_JICHACM");
        public final static Property D_JiChaCBRQ = new Property(63, long.class, "D_JiChaCBRQ", false, "D_JICHACBRQ");
        public final static Property I_JiChaZTBM = new Property(64, int.class, "I_JiChaZTBM", false, "I_JICHAZTBM");
        public final static Property S_JiChaZTMC = new Property(65, String.class, "S_JiChaZTMC", false, "S_JICHAZTMC");
    }

    ;


    public JiChaSJDao(DaoConfig config) {
        super(config);
    }

    public JiChaSJDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /**
     * Creates the underlying database table.
     */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists ? "IF NOT EXISTS " : "";
        db.execSQL("CREATE TABLE " + constraint + "'CB_JiChaSJ' (" + //
                "'ID' INTEGER PRIMARY KEY NOT NULL ," + // 0: ID
                "'I_RENWUBH' INTEGER," + // 1: I_RenWuBH
                "'S_CH' TEXT," + // 2: S_CH
                "'I_CENEIXH' INTEGER," + // 3: I_CENEIXH
                "'S_CID' TEXT," + // 4: S_CID
                "'S_ST' TEXT," + // 5: S_ST
                "'I_CHAOBIAON' INTEGER," + // 6: I_CHAOBIAON
                "'I_CHAOBIAOY' INTEGER," + // 7: I_CHAOBIAOY
                "'I_CC' INTEGER," + // 8: I_CC
                "'D_CHAOBIAORQ' INTEGER," + // 9: D_CHAOBIAORQ
                "'I_SHANGCICM' INTEGER," + // 10: I_SHANGCICM
                "'I_BENCICM' INTEGER," + // 11: I_BENCICM
                "'I_CHAOJIANSL' INTEGER," + // 12: I_CHAOJIANSL
                "'I_ZHUANGTAIBM' INTEGER," + // 13: I_ZHUANGTAIBM
                "'S_ZHUANGTAIMC' TEXT," + // 14: S_ZHUANGTAIMC
                "'D_SHANGCICBRQ' INTEGER," + // 15: D_SHANGCICBRQ
                "'I_SHANGCIZTBM' INTEGER," + // 16: I_SHANGCIZTBM
                "'S_SHANGCIZTMC' TEXT," + // 17: S_ShangCiZTMC
                "'I_SHANGCICJSL' INTEGER," + // 18: I_ShangCiCJSL
                "'I_SHANGCIZTLXS' INTEGER," + // 19: I_SHANGCIZTLXS
                "'I_PINGJUNL1' INTEGER," + // 20: I_PINGJUNL1
                "'I_PINGJUNL2' INTEGER," + // 21: I_PINGJUNL2
                "'I_PINGJUNL3' INTEGER," + // 22: I_PINGJUNL3
                "'N_JE' REAL," + // 23: N_JE
                "'S_ZONGBIAOCID' TEXT," + // 24: S_ZONGBIAOCID
                "'S_CHAOBIAOY' TEXT," + // 25: S_CHAOBIAOY
                "'I_CHAOBIAOBZ' INTEGER," + // 26: I_CHAOBIAOBZ
                "'I_JIUBIAOCM' INTEGER," + // 27: I_JIUBIAOCM
                "'I_XINBIAODM' INTEGER," + // 28: I_XINBIAODM
                "'D_HUANBIAORQ' INTEGER," + // 29: D_HUANBIAORQ
                "'I_FANGSHIBM' INTEGER," + // 30: I_FANGSHIBM
                "'I_LIANGGAOLDYYBM' INTEGER," + // 31: I_LIANGGAOLDYYBM
                "'I_CHAOBIAOID' INTEGER," + // 32: I_CHAOBIAOID
                "'I_ZHUANGTAILXS' INTEGER," + // 33: I_ZHUANGTAILXS
                "'I_SHUIBIAOBL' INTEGER," + // 34: I_SHUIBIAOBL
                "'N_YONGSHUIZKL' REAL," + // 35: N_YONGSHUIZKL
                "'N_PAISHUIZKL' REAL," + // 36: N_PAISHUIZKL
                "'I_TIAOJIAH' INTEGER," + // 37: I_TIAOJIAH
                "'S_JIAN_HAO' TEXT," + // 38: S_JianHao
                "'D_XIAZAISJ' INTEGER," + // 39: D_XIAZAISJ
                "'I_LINGYONGSLSM' INTEGER," + // 40: I_LINGYONGSLSM
                "'I_LIANGGAOSL' INTEGER," + // 41: I_LIANGGAOSL
                "'I_LIANGDISL' INTEGER," + // 42: I_LIANGDISL
                "'S_X1' TEXT," + // 43: S_X1
                "'S_Y1' TEXT," + // 44: S_Y1
                "'S_X' TEXT," + // 45: S_X
                "'S_Y' TEXT," + // 46: S_Y
                "'S_CHAOBIAOBZ' TEXT," + // 47: S_CHAOBIAOBZ
                "'I_CENEIPX' INTEGER," + // 48: I_CeNeiPX
                "'I_XIAZAICS' INTEGER," + // 49: I_XiaZaiCS
                "'D_ZUIHOUYCXZSJ' INTEGER," + // 50: D_ZuiHouYCXZSJ
                "'D_ZUIHOUYCSCSJ' INTEGER," + // 51: D_ZuiHouYCSCSJ
                "'I_SHANGCHUANBZ' INTEGER," + // 52: I_ShangChuanBZ
                "'I_SHENHEBZ' INTEGER," + // 53: I_ShenHeBZ
                "'I_KAIZHANGBZ' INTEGER," + // 54: I_KaiZhangBZ
                "'I_DIAODONGBZ' INTEGER," + // 55: I_DiaoDongBZ
                "'I_WAIFUYYBH' INTEGER," + // 56: I_WaiFuYYBH
                "'S_JIETITS' TEXT," + // 57: S_JIETITS
                "'S_YANCIYY' TEXT," + // 58: S_YANCIYY
                "'I_LASTREADINGCHILD' INTEGER," + // 59: I_LASTREADINGCHILD
                "'I_READINGCHILD' INTEGER," + // 60: I_READINGCHILD
                "'I_JICHASL' INTEGER," + // 61: I_JiChaSL
                "'I_JICHACM' INTEGER," + // 62: I_JiChaCM
                "'D_JICHACBRQ' INTEGER," + // 63: D_JiChaCBRQ
                "'I_JICHAZTBM' INTEGER," + // 64: I_JiChaZTBM
                "'S_JICHAZTMC' TEXT);"); // 65: S_JiChaZTMC
    }

    /**
     * Drops the underlying database table.
     */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'CB_JiChaSJ'";
        db.execSQL(sql);
    }

    /**
     * @inheritdoc
     */
    @Override
    protected void bindValues(SQLiteStatement stmt, JiChaSJ entity) {
        stmt.clearBindings();

        if (entity.getID() != -1) {
            stmt.bindLong(1, entity.getID());
        }

        int I_RenWuBH = entity.getI_RenWuBH();
        stmt.bindLong(2, I_RenWuBH);

        String S_CH = entity.getS_CH();
        if (S_CH != null) {
            stmt.bindString(3, S_CH);
        }

        int I_CENEIXH = entity.getI_CENEIXH();
        stmt.bindLong(4, I_CENEIXH);

        String S_CID = entity.getS_CID();
        if (S_CID != null) {
            stmt.bindString(5, S_CID);
        }

        String S_ST = entity.getS_ST();
        if (S_ST != null) {
            stmt.bindString(6, S_ST);
        }

        int I_CHAOBIAON = entity.getI_CHAOBIAON();
        stmt.bindLong(7, I_CHAOBIAON);

        int I_CHAOBIAOY = entity.getI_CHAOBIAOY();
        stmt.bindLong(8, I_CHAOBIAOY);

        int I_CC = entity.getI_CC();
        stmt.bindLong(9, I_CC);

        long D_CHAOBIAORQ = entity.getD_CHAOBIAORQ();
        stmt.bindLong(10, D_CHAOBIAORQ);

        int I_SHANGCICM = entity.getI_SHANGCICM();
        stmt.bindLong(11, I_SHANGCICM);

        int I_BENCICM = entity.getI_BENCICM();
        stmt.bindLong(12, I_BENCICM);

        int I_CHAOJIANSL = entity.getI_CHAOJIANSL();
        stmt.bindLong(13, I_CHAOJIANSL);

        int I_ZHUANGTAIBM = entity.getI_ZHUANGTAIBM();
        stmt.bindLong(14, I_ZHUANGTAIBM);

        String S_ZHUANGTAIMC = entity.getS_ZHUANGTAIMC();
        if (S_ZHUANGTAIMC != null) {
            stmt.bindString(15, S_ZHUANGTAIMC);
        }

        long D_SHANGCICBRQ = entity.getD_SHANGCICBRQ();
        stmt.bindLong(16, D_SHANGCICBRQ);

        int I_SHANGCIZTBM = entity.getI_SHANGCIZTBM();
        stmt.bindLong(17, I_SHANGCIZTBM);

        String S_ShangCiZTMC = entity.getS_ShangCiZTMC();
        if (S_ShangCiZTMC != null) {
            stmt.bindString(18, S_ShangCiZTMC);
        }

        int I_ShangCiCJSL = entity.getI_ShangCiCJSL();
        stmt.bindLong(19, I_ShangCiCJSL);

        int I_SHANGCIZTLXS = entity.getI_SHANGCIZTLXS();
        stmt.bindLong(20, I_SHANGCIZTLXS);

        int I_PINGJUNL1 = entity.getI_PINGJUNL1();
        stmt.bindLong(21, I_PINGJUNL1);

        int I_PINGJUNL2 = entity.getI_PINGJUNL2();
        stmt.bindLong(22, I_PINGJUNL2);

        int I_PINGJUNL3 = entity.getI_PINGJUNL3();
        stmt.bindLong(23, I_PINGJUNL3);

        Double N_JE = entity.getN_JE();
        if (N_JE != null) {
            stmt.bindDouble(24, N_JE);
        }

        String S_ZONGBIAOCID = entity.getS_ZONGBIAOCID();
        if (S_ZONGBIAOCID != null) {
            stmt.bindString(25, S_ZONGBIAOCID);
        }

        String S_CHAOBIAOY = entity.getS_CHAOBIAOY();
        if (S_CHAOBIAOY != null) {
            stmt.bindString(26, S_CHAOBIAOY);
        }

        int I_CHAOBIAOBZ = entity.getI_CHAOBIAOBZ();
        stmt.bindLong(27, I_CHAOBIAOBZ);

        int I_JIUBIAOCM = entity.getI_JIUBIAOCM();
        stmt.bindLong(28, I_JIUBIAOCM);

        int I_XINBIAODM = entity.getI_XINBIAODM();
        stmt.bindLong(29, I_XINBIAODM);

        long D_HUANBIAORQ = entity.getD_HUANBIAORQ();
        stmt.bindLong(30, D_HUANBIAORQ);

        int I_FANGSHIBM = entity.getI_FANGSHIBM();
        stmt.bindLong(31, I_FANGSHIBM);

        int I_LIANGGAOLDYYBM = entity.getI_LIANGGAOLDYYBM();
        stmt.bindLong(32, I_LIANGGAOLDYYBM);

        int I_CHAOBIAOID = entity.getI_CHAOBIAOID();
        stmt.bindLong(33, I_CHAOBIAOID);

        int I_ZHUANGTAILXS = entity.getI_ZHUANGTAILXS();
        stmt.bindLong(34, I_ZHUANGTAILXS);

        int I_SHUIBIAOBL = entity.getI_SHUIBIAOBL();
        stmt.bindLong(35, I_SHUIBIAOBL);

        Double N_YONGSHUIZKL = entity.getN_YONGSHUIZKL();
        if (N_YONGSHUIZKL != null) {
            stmt.bindDouble(36, N_YONGSHUIZKL);
        }

        Double N_PAISHUIZKL = entity.getN_PAISHUIZKL();
        if (N_PAISHUIZKL != null) {
            stmt.bindDouble(37, N_PAISHUIZKL);
        }

        int I_TIAOJIAH = entity.getI_TIAOJIAH();
        stmt.bindLong(38, I_TIAOJIAH);

        String S_JianHao = entity.getS_JianHao();
        if (S_JianHao != null) {
            stmt.bindString(39, S_JianHao);
        }

        long D_XIAZAISJ = entity.getD_XIAZAISJ();
        stmt.bindLong(40, D_XIAZAISJ);

        int I_LINGYONGSLSM = entity.getI_LINGYONGSLSM();
        stmt.bindLong(41, I_LINGYONGSLSM);

        int I_LIANGGAOSL = entity.getI_LIANGGAOSL();
        stmt.bindLong(42, I_LIANGGAOSL);

        int I_LIANGDISL = entity.getI_LIANGDISL();
        stmt.bindLong(43, I_LIANGDISL);

        String S_X1 = entity.getS_X1();
        if (S_X1 != null) {
            stmt.bindString(44, S_X1);
        }

        String S_Y1 = entity.getS_Y1();
        if (S_Y1 != null) {
            stmt.bindString(45, S_Y1);
        }

        String S_X = entity.getS_X();
        if (S_X != null) {
            stmt.bindString(46, S_X);
        }

        String S_Y = entity.getS_Y();
        if (S_Y != null) {
            stmt.bindString(47, S_Y);
        }

        String S_CHAOBIAOBZ = entity.getS_CHAOBIAOBZ();
        if (S_CHAOBIAOBZ != null) {
            stmt.bindString(48, S_CHAOBIAOBZ);
        }

        int I_CeNeiPX = entity.getI_CeNeiPX();
        stmt.bindLong(49, I_CeNeiPX);

        int I_XiaZaiCS = entity.getI_XiaZaiCS();
        stmt.bindLong(50, I_XiaZaiCS);

        long D_ZuiHouYCXZSJ = entity.getD_ZuiHouYCXZSJ();
        stmt.bindLong(51, D_ZuiHouYCXZSJ);

        long D_ZuiHouYCSCSJ = entity.getD_ZuiHouYCSCSJ();
        stmt.bindLong(52, D_ZuiHouYCSCSJ);

        int I_ShangChuanBZ = entity.getI_ShangChuanBZ();
        stmt.bindLong(53, I_ShangChuanBZ);

        int I_ShenHeBZ = entity.getI_ShenHeBZ();
        stmt.bindLong(54, I_ShenHeBZ);

        int I_KaiZhangBZ = entity.getI_KaiZhangBZ();
        stmt.bindLong(55, I_KaiZhangBZ);

        int I_DiaoDongBZ = entity.getI_DiaoDongBZ();
        stmt.bindLong(56, I_DiaoDongBZ);

        int I_WaiFuYYBH = entity.getI_WaiFuYYBH();
        stmt.bindLong(57, I_WaiFuYYBH);

        String S_JIETITS = entity.getS_JIETITS();
        if (S_JIETITS != null) {
            stmt.bindString(58, S_JIETITS);
        }

        String S_YANCIYY = entity.getS_YANCIYY();
        if (S_YANCIYY != null) {
            stmt.bindString(59, S_YANCIYY);
        }

        int I_LASTREADINGCHILD = entity.getI_LASTREADINGCHILD();
        stmt.bindLong(60, I_LASTREADINGCHILD);

        int I_READINGCHILD = entity.getI_READINGCHILD();
        stmt.bindLong(61, I_READINGCHILD);

        int I_JiChaSL = entity.getI_JiChaSL();
        stmt.bindLong(62, I_JiChaSL);

        int I_JiChaCM = entity.getI_JiChaCM();
        stmt.bindLong(63, I_JiChaCM);

        long D_JiChaCBRQ = entity.getD_JiChaCBRQ();
        stmt.bindLong(64, D_JiChaCBRQ);

        int I_JiChaZTBM = entity.getI_JiChaZTBM();
        stmt.bindLong(65, I_JiChaZTBM);

        String S_JiChaZTMC = entity.getS_JiChaZTMC();
        if (S_JiChaZTMC != null) {
            stmt.bindString(66, S_JiChaZTMC);
        }
    }

    /**
     * @inheritdoc
     */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.getLong(offset + 0);
    }

    /**
     * @inheritdoc
     */
    @Override
    public JiChaSJ readEntity(Cursor cursor, int offset) {
        JiChaSJ entity = new JiChaSJ( //
                cursor.getInt(offset + 0), // ID
                cursor.isNull(offset + 1) ? 0 : cursor.getInt(offset + 1), // I_RenWuBH
                cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // S_CH
                cursor.isNull(offset + 3) ? 0 : cursor.getInt(offset + 3), // I_CENEIXH
                cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // S_CID
                cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // S_ST
                cursor.isNull(offset + 6) ? 0 : cursor.getInt(offset + 6), // I_CHAOBIAON
                cursor.isNull(offset + 7) ? 0 : cursor.getInt(offset + 7), // I_CHAOBIAOY
                cursor.isNull(offset + 8) ? 0 : cursor.getInt(offset + 8), // I_CC
                cursor.isNull(offset + 9) ? 0 : cursor.getLong(offset + 9), // D_CHAOBIAORQ
                cursor.isNull(offset + 10) ? 0 : cursor.getInt(offset + 10), // I_SHANGCICM
                cursor.isNull(offset + 11) ? 0 : cursor.getInt(offset + 11), // I_BENCICM
                cursor.isNull(offset + 12) ? 0 : cursor.getInt(offset + 12), // I_CHAOJIANSL
                cursor.isNull(offset + 13) ? 0 : cursor.getInt(offset + 13), // I_ZHUANGTAIBM
                cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // S_ZHUANGTAIMC
                cursor.isNull(offset + 15) ? 0 : cursor.getLong(offset + 15), // D_SHANGCICBRQ
                cursor.isNull(offset + 16) ? 0 : cursor.getInt(offset + 16), // I_SHANGCIZTBM
                cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // S_ShangCiZTMC
                cursor.isNull(offset + 18) ? 0 : cursor.getInt(offset + 18), // I_ShangCiCJSL
                cursor.isNull(offset + 19) ? 0 : cursor.getInt(offset + 19), // I_SHANGCIZTLXS
                cursor.isNull(offset + 20) ? 0 : cursor.getInt(offset + 20), // I_PINGJUNL1
                cursor.isNull(offset + 21) ? 0 : cursor.getInt(offset + 21), // I_PINGJUNL2
                cursor.isNull(offset + 22) ? 0 : cursor.getInt(offset + 22), // I_PINGJUNL3
                cursor.isNull(offset + 23) ? 0 : cursor.getDouble(offset + 23), // N_JE
                cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // S_ZONGBIAOCID
                cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // S_CHAOBIAOY
                cursor.isNull(offset + 26) ? 0 : cursor.getInt(offset + 26), // I_CHAOBIAOBZ
                cursor.isNull(offset + 27) ? 0 : cursor.getInt(offset + 27), // I_JIUBIAOCM
                cursor.isNull(offset + 28) ? 0 : cursor.getInt(offset + 28), // I_XINBIAODM
                cursor.isNull(offset + 29) ? 0 : cursor.getLong(offset + 29), // D_HUANBIAORQ
                cursor.isNull(offset + 30) ? 0 : cursor.getInt(offset + 30), // I_FANGSHIBM
                cursor.isNull(offset + 31) ? 0 : cursor.getInt(offset + 31), // I_LIANGGAOLDYYBM
                cursor.isNull(offset + 32) ? 0 : cursor.getInt(offset + 32), // I_CHAOBIAOID
                cursor.isNull(offset + 33) ? 0 : cursor.getInt(offset + 33), // I_ZHUANGTAILXS
                cursor.isNull(offset + 34) ? 0 : cursor.getInt(offset + 34), // I_SHUIBIAOBL
                cursor.isNull(offset + 35) ? 0 : cursor.getDouble(offset + 35), // N_YONGSHUIZKL
                cursor.isNull(offset + 36) ? 0 : cursor.getDouble(offset + 36), // N_PAISHUIZKL
                cursor.isNull(offset + 37) ? 0 : cursor.getInt(offset + 37), // I_TIAOJIAH
                cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // S_JianHao
                cursor.isNull(offset + 39) ? 0 : cursor.getLong(offset + 39), // D_XIAZAISJ
                cursor.isNull(offset + 40) ? 0 : cursor.getInt(offset + 40), // I_LINGYONGSLSM
                cursor.isNull(offset + 41) ? 0 : cursor.getInt(offset + 41), // I_LIANGGAOSL
                cursor.isNull(offset + 42) ? 0 : cursor.getInt(offset + 42), // I_LIANGDISL
                cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // S_X1
                cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // S_Y1
                cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // S_X
                cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // S_Y
                cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // S_CHAOBIAOBZ
                cursor.isNull(offset + 48) ? 0 : cursor.getInt(offset + 48), // I_CeNeiPX
                cursor.isNull(offset + 49) ? 0 : cursor.getInt(offset + 49), // I_XiaZaiCS
                cursor.isNull(offset + 50) ? 0 : cursor.getLong(offset + 50), // D_ZuiHouYCXZSJ
                cursor.isNull(offset + 51) ? 0 : cursor.getLong(offset + 51), // D_ZuiHouYCSCSJ
                cursor.isNull(offset + 52) ? 0 : cursor.getInt(offset + 52), // I_ShangChuanBZ
                cursor.isNull(offset + 53) ? 0 : cursor.getInt(offset + 53), // I_ShenHeBZ
                cursor.isNull(offset + 54) ? 0 : cursor.getInt(offset + 54), // I_KaiZhangBZ
                cursor.isNull(offset + 55) ? 0 : cursor.getInt(offset + 55), // I_DiaoDongBZ
                cursor.isNull(offset + 56) ? 0 : cursor.getInt(offset + 56), // I_WaiFuYYBH
                cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // S_JIETITS
                cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58), // S_YANCIYY
                cursor.isNull(offset + 59) ? 0 : cursor.getInt(offset + 59), // I_LASTREADINGCHILD
                cursor.isNull(offset + 60) ? 0 : cursor.getInt(offset + 60), // I_READINGCHILD
                cursor.isNull(offset + 61) ? 0 : cursor.getInt(offset + 61), // I_JiChaSL
                cursor.isNull(offset + 62) ? 0 : cursor.getInt(offset + 62), // I_JiChaCM
                cursor.isNull(offset + 63) ? 0 : cursor.getLong(offset + 63), // D_JiChaCBRQ
                cursor.isNull(offset + 64) ? 0 : cursor.getInt(offset + 64), // I_JiChaZTBM
                cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65) // S_JiChaZTMC
        );
        return entity;
    }

    /**
     * @inheritdoc
     */
    @Override
    public void readEntity(Cursor cursor, JiChaSJ entity, int offset) {
        entity.setID(cursor.getInt(offset + 0));
        entity.setI_RenWuBH(cursor.isNull(offset + 1) ? 0 : cursor.getInt(offset + 1));
        entity.setS_CH(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setI_CENEIXH(cursor.isNull(offset + 3) ? 0 : cursor.getInt(offset + 3));
        entity.setS_CID(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setS_ST(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setI_CHAOBIAON(cursor.isNull(offset + 6) ? 0 : cursor.getInt(offset + 6));
        entity.setI_CHAOBIAOY(cursor.isNull(offset + 7) ? 0 : cursor.getInt(offset + 7));
        entity.setI_CC(cursor.isNull(offset + 8) ? 0 : cursor.getInt(offset + 8));
        entity.setD_CHAOBIAORQ(cursor.isNull(offset + 9) ? 0 : cursor.getLong(offset + 9));
        entity.setI_SHANGCICM(cursor.isNull(offset + 10) ? 0 : cursor.getInt(offset + 10));
        entity.setI_BENCICM(cursor.isNull(offset + 11) ? 0 : cursor.getInt(offset + 11));
        entity.setI_CHAOJIANSL(cursor.isNull(offset + 12) ? 0 : cursor.getInt(offset + 12));
        entity.setI_ZHUANGTAIBM(cursor.isNull(offset + 13) ? 0 : cursor.getInt(offset + 13));
        entity.setS_ZHUANGTAIMC(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setD_SHANGCICBRQ(cursor.isNull(offset + 15) ? 0 : cursor.getLong(offset + 15));
        entity.setI_SHANGCIZTBM(cursor.isNull(offset + 16) ? 0 : cursor.getInt(offset + 16));
        entity.setS_ShangCiZTMC(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setI_ShangCiCJSL(cursor.isNull(offset + 18) ? 0 : cursor.getInt(offset + 18));
        entity.setI_SHANGCIZTLXS(cursor.isNull(offset + 19) ? 0 : cursor.getInt(offset + 19));
        entity.setI_PINGJUNL1(cursor.isNull(offset + 20) ? 0 : cursor.getInt(offset + 20));
        entity.setI_PINGJUNL2(cursor.isNull(offset + 21) ? 0 : cursor.getInt(offset + 21));
        entity.setI_PINGJUNL3(cursor.isNull(offset + 22) ? 0 : cursor.getInt(offset + 22));
        entity.setN_JE(cursor.isNull(offset + 23) ? 0 : cursor.getDouble(offset + 23));
        entity.setS_ZONGBIAOCID(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setS_CHAOBIAOY(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setI_CHAOBIAOBZ(cursor.isNull(offset + 26) ? 0 : cursor.getInt(offset + 26));
        entity.setI_JIUBIAOCM(cursor.isNull(offset + 27) ? 0 : cursor.getInt(offset + 27));
        entity.setI_XINBIAODM(cursor.isNull(offset + 28) ? 0 : cursor.getInt(offset + 28));
        entity.setD_HUANBIAORQ(cursor.isNull(offset + 29) ? 0 : cursor.getLong(offset + 29));
        entity.setI_FANGSHIBM(cursor.isNull(offset + 30) ? 0 : cursor.getInt(offset + 30));
        entity.setI_LIANGGAOLDYYBM(cursor.isNull(offset + 31) ? 0 : cursor.getInt(offset + 31));
        entity.setI_CHAOBIAOID(cursor.isNull(offset + 32) ? 0 : cursor.getInt(offset + 32));
        entity.setI_ZHUANGTAILXS(cursor.isNull(offset + 33) ? 0 : cursor.getInt(offset + 33));
        entity.setI_SHUIBIAOBL(cursor.isNull(offset + 34) ? 0 : cursor.getInt(offset + 34));
        entity.setN_YONGSHUIZKL(cursor.isNull(offset + 35) ? 0 : cursor.getDouble(offset + 35));
        entity.setN_PAISHUIZKL(cursor.isNull(offset + 36) ? 0 : cursor.getDouble(offset + 36));
        entity.setI_TIAOJIAH(cursor.isNull(offset + 37) ? 0 : cursor.getInt(offset + 37));
        entity.setS_JianHao(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setD_XIAZAISJ(cursor.isNull(offset + 39) ? 0 : cursor.getLong(offset + 39));
        entity.setI_LINGYONGSLSM(cursor.isNull(offset + 40) ? 0 : cursor.getInt(offset + 40));
        entity.setI_LIANGGAOSL(cursor.isNull(offset + 41) ? 0 : cursor.getInt(offset + 41));
        entity.setI_LIANGDISL(cursor.isNull(offset + 42) ? 0 : cursor.getInt(offset + 42));
        entity.setS_X1(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setS_Y1(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setS_X(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setS_Y(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setS_CHAOBIAOBZ(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setI_CeNeiPX(cursor.isNull(offset + 48) ? 0 : cursor.getInt(offset + 48));
        entity.setI_XiaZaiCS(cursor.isNull(offset + 49) ? 0 : cursor.getInt(offset + 49));
        entity.setD_ZuiHouYCXZSJ(cursor.isNull(offset + 50) ? 0 : cursor.getLong(offset + 50));
        entity.setD_ZuiHouYCSCSJ(cursor.isNull(offset + 51) ? 0 : cursor.getLong(offset + 51));
        entity.setI_ShangChuanBZ(cursor.isNull(offset + 52) ? 0 : cursor.getInt(offset + 52));
        entity.setI_ShenHeBZ(cursor.isNull(offset + 53) ? 0 : cursor.getInt(offset + 53));
        entity.setI_KaiZhangBZ(cursor.isNull(offset + 54) ? 0 : cursor.getInt(offset + 54));
        entity.setI_DiaoDongBZ(cursor.isNull(offset + 55) ? 0 : cursor.getInt(offset + 55));
        entity.setI_WaiFuYYBH(cursor.isNull(offset + 56) ? 0 : cursor.getInt(offset + 56));
        entity.setS_JIETITS(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setS_YANCIYY(cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58));
        entity.setI_LASTREADINGCHILD(cursor.isNull(offset + 59) ? 0 : cursor.getInt(offset + 59));
        entity.setI_READINGCHILD(cursor.isNull(offset + 60) ? 0 : cursor.getInt(offset + 60));
        entity.setI_JiChaSL(cursor.isNull(offset + 61) ? 0 : cursor.getInt(offset + 61));
        entity.setI_JiChaCM(cursor.isNull(offset + 62) ? 0 : cursor.getInt(offset + 62));
        entity.setD_JiChaCBRQ(cursor.isNull(offset + 63) ? 0 : cursor.getLong(offset + 63));
        entity.setI_JiChaZTBM(cursor.isNull(offset + 64) ? 0 : cursor.getInt(offset + 64));
        entity.setS_JiChaZTMC(cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65));
    }

    /**
     * @inheritdoc
     */
    @Override
    protected Long updateKeyAfterInsert(JiChaSJ entity, long rowId) {
        //entity.setID(rowId);
        return rowId;
    }

    /**
     * @inheritdoc
     */
    @Override
    public Long getKey(JiChaSJ entity) {
        if (entity != null) {
            return (long) entity.getID();
        } else {
            return null;
        }
    }

    /**
     * @inheritdoc
     */
    @Override
    protected boolean isEntityUpdateable() {
        return true;
    }

    public List<JiChaSJ> getList(int taskId, int sortType) {
//        if (cH == null) {
//            return null;
//        }

        List<JiChaSJ> list = null;
        QueryBuilder qb = this.queryBuilder();
//        String sql = String.format("S_CID in (select %s from %s where %s = \"%s\")",
//                BIAOKAXXDao.Properties.S_CID.columnName, BIAOKAXXDao.TABLENAME,
//                BIAOKAXXDao.Properties.S_CH.columnName, cH);
        switch (sortType) {
            case ALLWORK: // 全部
                qb.where(Properties.I_RenWuBH.eq(taskId)
//                        ,new WhereCondition.StringCondition(sql)
                );
                //qb.limit(number);
                qb.orderAsc(Properties.I_CENEIXH);
                list = qb.list();
                break;
            case NOWORK: // 未抄
                qb.where(Properties.I_CHAOBIAOBZ.eq(0),
                        Properties.I_RenWuBH.eq(taskId));
                qb.orderAsc(Properties.I_CENEIXH);
                list = qb.list();
                break;
            case FINISHWORK: // 已抄
                qb.where(Properties.I_CHAOBIAOBZ.gt(0),
                        Properties.I_RenWuBH.eq(taskId));
                qb.orderAsc(Properties.I_CENEIXH);
                list = qb.list();
                break;
            default:
                break;
        }

        return list;
    }

    public List<JiChaSJ> get(int taskId, List<String> cids) {
        if ((cids == null)) {
            return null;
        }
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CID.in(cids), Properties.I_RenWuBH.eq(taskId));
        qb.orderAsc(Properties.I_CENEIXH);
        List<JiChaSJ> list = qb.list();
        return list;
    }

    public List<JiChaSJ> getNextUnfinishedJiChaSJWithCeNeiXH(int renWuBH, String ch) {
        if (ch == null) {
            return null;
        }
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.I_RenWuBH.eq(renWuBH),
                Properties.S_CH.eq(ch));
        qb.orderAsc(Properties.I_CENEIXH);
        List<JiChaSJ> srcJiChaSJList = qb.list();
        if ((srcJiChaSJList == null) || (srcJiChaSJList.size() <= 0)) {
            return null;
        }
        List<JiChaSJ> destJiChaSJList = new ArrayList<>();
        for (JiChaSJ jiChaSJ : destJiChaSJList) {
            if (jiChaSJ.getI_CHAOBIAOBZ() == 0) {
                destJiChaSJList.add(jiChaSJ);
                break;
            }
        }
        if (destJiChaSJList.size() <= 0) {
            destJiChaSJList.add(srcJiChaSJList.get(0));
        }
        destJiChaSJList.add(srcJiChaSJList.get(0));
        destJiChaSJList.add(srcJiChaSJList.get(srcJiChaSJList.size() - 1));
        return destJiChaSJList;
    }

    public void updateJiChaSJList(List<JiChaSJ> jiChaSJList) {
        if (jiChaSJList == null) {
            return;
        }

        updateInTx(jiChaSJList);
    }

    /**
     * 根据条件获取所有已抄记录
     *
     * @param taskId
     * @param volume
     * @param account
     * @param chaobiaobzYichao
     * @return
     */
    public List<JiChaSJ> getAllFinishedJiChaSJ(int taskId, String volume, String account, int chaobiaobzYichao) {
        if (taskId < 0 || volume == null || account == null) {
            return null;
        }

        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.I_RenWuBH.eq(taskId),
                Properties.S_CH.eq(volume),
                Properties.S_CHAOBIAOY.eq(account),
                Properties.I_CHAOBIAOBZ.eq(chaobiaobzYichao));

        List<JiChaSJ> list = qb.list();
        if (list == null) {
            return null;
        }

        return list;
    }

    /**
     * 根据操作员编号获取本地所有的稽查数据
     *
     * @param account
     * @return
     */
    public List<JiChaSJ> getAllJiChaSJ(String account) {
        if (account == null) {
            return null;
        }
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CHAOBIAOY.eq(account));
        return qb.list() == null ? null : qb.list();
    }

    public List<JiChaSJ> getAllJiChaSJ(String account, int taskId) {
        if (account == null) {
            return null;
        }

        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CHAOBIAOY.eq(account),
                Properties.I_RenWuBH.eq(taskId))
                .orderAsc(Properties.I_CENEIXH);
        return qb.list();
    }


    /**
     * 根据抄表标志，抄表员，上传标志条件获取相对应的稽查数据
     */
    public List<JiChaSJ> getJiChaSJCBY(String chaoBiaoY,
                                       int renWuBH,
                                       String ch,
                                       int chaoBiaoBZ,
                                       int shangChuanBZ) {
        if (chaoBiaoY == null) {
            return null;
        }

        QueryBuilder qb = this.queryBuilder();
        if (renWuBH <= 0) {
            qb.where(Properties.S_CHAOBIAOY.eq(chaoBiaoY),
                    Properties.I_CHAOBIAOBZ.eq(chaoBiaoBZ),
                    Properties.I_ShangChuanBZ.eq(shangChuanBZ));
        } else if (ch != null) {
            qb.where(Properties.S_CHAOBIAOY.eq(chaoBiaoY),
                    Properties.I_RenWuBH.eq(renWuBH),
                    Properties.S_CH.eq(ch),
                    Properties.I_CHAOBIAOBZ.eq(chaoBiaoBZ),
                    Properties.I_ShangChuanBZ.eq(shangChuanBZ));
        } else {
            qb.where(Properties.S_CHAOBIAOY.eq(chaoBiaoY),
                    Properties.I_RenWuBH.eq(renWuBH),
                    Properties.I_CHAOBIAOBZ.eq(chaoBiaoBZ),
                    Properties.I_ShangChuanBZ.eq(shangChuanBZ));
        }
        qb.orderAsc(Properties.I_RenWuBH);

//        if (qb.list() == null || qb.list().size() == 0) {
//            return null;
//        }

        return qb.list();
    }

    /**
     * 更新稽查数据
     *
     * @param jiChaSJ
     */
    public void updateJiChaSJ(JiChaSJ jiChaSJ) {
        if (jiChaSJ == null) {
            return;
        }

        this.update(jiChaSJ);
    }


    /**
     * 根据CID(用户号)获取本地数据对应的单条稽查数据
     *
     * @param S_CID
     * @return ChaoBiaoSJ实体
     */
    public JiChaSJ getJiChaSJ(int taskId, String cH, String S_CID) {
        if (S_CID == null || cH == null) {
            return null;
        }
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CID.eq(S_CID), Properties.I_RenWuBH.eq(taskId), Properties.S_CH.eq(cH));
        List<JiChaSJ> jiChaSJList = qb.list();
        if ((jiChaSJList == null) || (jiChaSJList.size() <= 0)) {
            return null;
        }
        return jiChaSJList.get(0);
    }

    public JiChaSJ getPreviousJiChaSJ(int taskId, String ch, long ceneixh, boolean isNotReading) {
        if (ch == null) {
            return null;
        }

        QueryBuilder qb = this.queryBuilder();
        if (isNotReading) {
            qb.where(Properties.S_CH.eq(ch),
                    Properties.I_CENEIXH.lt(ceneixh),
                    Properties.I_RenWuBH.eq(taskId),
                    Properties.I_CHAOBIAOBZ.eq(0));
        } else {
            qb.where(Properties.S_CH.eq(ch),
                    Properties.I_CENEIXH.lt(ceneixh),
                    Properties.I_RenWuBH.eq(taskId));
        }
        qb.orderDesc(Properties.I_CENEIXH);
        List<JiChaSJ> jiChaSJList = qb.list();
        if ((jiChaSJList == null) || (jiChaSJList.size() <= 0)) {
            return null;
        }
        return jiChaSJList.get(0);
    }

    // ok
    public JiChaSJ getNextJiChaSJ(int taskId, String ch, long ceneixh, boolean isNotReading) {
        if (ch == null) {
            return null;
        }

        QueryBuilder qb = this.queryBuilder();
        if (isNotReading) {
            qb.where(Properties.S_CH.eq(ch),
                    Properties.I_CENEIXH.gt(ceneixh),
                    Properties.I_RenWuBH.eq(taskId),
                    Properties.I_CHAOBIAOBZ.eq(0));
        } else {
            qb.where(Properties.S_CH.eq(ch),
                    Properties.I_CENEIXH.gt(ceneixh),
                    Properties.I_RenWuBH.eq(taskId));
        }
        qb.orderAsc(Properties.I_CENEIXH);
        List<JiChaSJ> jiChaSJList = qb.list();
        if ((jiChaSJList == null) || (jiChaSJList.size() <= 0)) {
            return null;
        }

        return jiChaSJList.get(0);
    }


    // ok
    public JiChaSJ getNextJiChaSJNew(String account, int taskId, String S_CID, boolean isNotReading) {
        if (account == null || S_CID == null) {
            return null;
        }

        List<JiChaSJ> jiChaSJList = getAllJiChaSJ(account, taskId, false);

        if (isNotReading) {
            List<JiChaSJ> jiChaSJListNotRead = new ArrayList<>();
            int index = -1;
            for (int i = 0; i < jiChaSJList.size(); i++) {
                if (jiChaSJList.get(i).getS_CID().equals(S_CID)) {
                    index = i;
                    break;
                }
            }
            for (int i = index + 1; i < jiChaSJList.size(); i++) {
                if (jiChaSJList.get(i).getI_CHAOBIAOBZ() == 0) {
                    jiChaSJListNotRead.add(jiChaSJList.get(i));
                }
            }
            if (jiChaSJListNotRead.size() == 0) {
                return null;
            }
            return jiChaSJListNotRead.get(0);
        }

        JiChaSJ jiChaNext = null;
        for (int i = 0; i < jiChaSJList.size(); i++) {
            if (jiChaSJList.get(i).getS_CID().equals(S_CID)) {
                jiChaNext = jiChaSJList.get(i + 1);
                break;
            }
        }

        if (jiChaNext == null) {
            if (jiChaSJList.get(jiChaSJList.size() - 1).getS_CID().equals(S_CID)) {
                return null;
            }
            return jiChaSJList.get(0);

        }
        return jiChaNext;
    }


    public JiChaSJ getPreviousJiChaSJNew(String account, int taskId, String S_CID, boolean isNotReading) {
        if (account == null || S_CID == null) {
            return null;
        }

        List<JiChaSJ> jiChaSJList = getAllJiChaSJ(account, taskId, false);

        if (isNotReading) {
            List<JiChaSJ> jiChaSJListNotRead = new ArrayList<>();
            for (JiChaSJ jiChaSJ : jiChaSJList) {

                if (jiChaSJ.getS_CID().equals(S_CID)) {
                    break;
                }

                if (jiChaSJ.getI_CHAOBIAOBZ() == 0) {
                    jiChaSJListNotRead.add(jiChaSJ);
                }
            }
            if (jiChaSJListNotRead.size() == 0) {
                return null;
            }
            return jiChaSJListNotRead.get(jiChaSJListNotRead.size() - 1);
        }

        JiChaSJ jiChaSJPrevious = null;
        for (int i = 0; i < jiChaSJList.size(); i++) {
            if (jiChaSJList.get(i).getS_CID().equals(S_CID)) {
                jiChaSJPrevious = jiChaSJList.get(i - 1);
                break;
            }
        }
        if (jiChaSJPrevious == null) {
            if (jiChaSJList.get(0).getS_CID().equals(S_CID)) {
                return null;
            }
            return jiChaSJList.get(jiChaSJList.size() - 1);

        }

        return jiChaSJPrevious;
    }

    public List<JiChaSJ> getAllJiChaSJ(String account, int taskId, boolean isNotReading) {
        if (account == null) {
            return null;
        }

        QueryBuilder qb = this.queryBuilder();
        if (isNotReading) {
            qb.where(Properties.S_CHAOBIAOY.eq(account),
                    Properties.I_RenWuBH.eq(taskId),
                    Properties.I_CHAOBIAOBZ.eq(0));
        } else {
            qb.where(Properties.S_CHAOBIAOY.eq(account),
                    Properties.I_RenWuBH.eq(taskId));
        }
        qb.orderAsc(Properties.I_CENEIXH);

        return qb.list();
    }


    /**
     * 插入多条新的数据到稽查数据中
     *
     * @param jiChaSJList 稽查数据实体
     */
    public void insertJiChaSJList(List<JiChaSJ> jiChaSJList, boolean needDeletingFirstly) {
        if ((jiChaSJList == null) || (jiChaSJList.size() <= 0)) {
            return;
        }

        if (needDeletingFirstly) {
            for (JiChaSJ jiChaSJ : jiChaSJList) {
                QueryBuilder qb = this.queryBuilder();
                qb.where(Properties.S_CID.eq(jiChaSJ.getS_CID()),
                        Properties.I_CHAOBIAOBZ.eq(0));
                qb.buildDelete().executeDeleteWithoutDetachingEntities();
            }
        }

        List<String> chList = new ArrayList<>();
        boolean found;
        for (JiChaSJ jiChaSJ : jiChaSJList) {
            found = false;
            for (String ch : chList) {
                if (ch.equals(jiChaSJ.getS_CH())) {
                    found = true;
                    break;
                }
            }

            if (!found) {
                chList.add(jiChaSJ.getS_CH());
            }
        }

        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CH.in(chList));
        List<JiChaSJ> jiChaSJs = qb.list();
        List<JiChaSJ> destJiChaSJList = new ArrayList<>();
        if (jiChaSJs == null) {
            for (JiChaSJ jiChaSJ : jiChaSJList) {
                jiChaSJ.setID(-1);
                destJiChaSJList.add(jiChaSJ);
            }
        } else {
            for (JiChaSJ jiChaSJ1 : jiChaSJList) {
                found = false;
                for (JiChaSJ jichaSJ2 : jiChaSJs) {
                    if ((jiChaSJ1.getI_RenWuBH() == jichaSJ2.getI_RenWuBH())
                            && (jiChaSJ1.getS_CH().equals(jichaSJ2.getS_CH()))
                            && (jiChaSJ1.getS_CID().equals(jichaSJ2.getS_CID()))
                            && (jiChaSJ1.getI_CHAOBIAOY() == jichaSJ2.getI_CHAOBIAOY())
                            && (jiChaSJ1.getS_CHAOBIAOY().equals(jichaSJ2.getS_CHAOBIAOY()))) {
                        found = true;
                        break;
                    }
                }
                if (!found) {
                    jiChaSJ1.setID(-1);
                    destJiChaSJList.add(jiChaSJ1);
                }
            }
        }
        if (destJiChaSJList.size() > 0) {
            insertOrReplaceInTx(destJiChaSJList);
        }
    }

    public boolean deleteJiChaSJ(String account, int renWuBH) {
        if ((account == null)) {
            return false;
        }
        QueryBuilder<JiChaSJ> qb = this.queryBuilder();
        DeleteQuery<JiChaSJ> dq = qb.where(Properties.S_CHAOBIAOY.eq(account),
                Properties.I_RenWuBH.eq(renWuBH)).buildDelete();
        dq.executeDeleteWithoutDetachingEntities();
        return true;
    }

    public int weiShangchuanRecordCount(long time,String account) {
        if (time == 0) {
            return 0;
        }
        QueryBuilder qb = this.queryBuilder();
        qb.where(
                Properties.D_CHAOBIAORQ.lt(time),
                Properties.S_CHAOBIAOY.eq(account),
                Properties.I_ShangChuanBZ.eq(0),
                Properties.I_CHAOBIAOBZ.eq(FINISHWORK)

        );
        List<JiChaSJ> jiChaSJList = qb.list();
        return jiChaSJList == null ? 0 : jiChaSJList.size();
    }
}

package com.sh3h.dataprovider.greendaoDao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;
import android.util.Log;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;
import de.greenrobot.dao.query.DeleteQuery;
import de.greenrobot.dao.query.QueryBuilder;

import com.sh3h.dataprovider.greendaoEntity.BiaoWuGD;
import com.sh3h.dataprovider.schema.BiaoWuGDColumns;
import com.sh3h.dataprovider.schema.Tables;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/**
 * DAO for table PDA_BIAOWUGD.
 */
public class BiaoWuGDDao extends AbstractDao<BiaoWuGD, Void> {

    public static final String TABLENAME = "PDA_BIAOWUGD";

    /**
     * Properties of entity BiaoWuGD.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property ID = new Property(0, Integer.class, "ID", false, "ID");
        public final static Property I_RENWUBH = new Property(1, Integer.class, "I_RENWUBH", false, "I_RENWUBH");
        public final static Property S_CID = new Property(2, String.class, "S_CID", false, "S_CID");
        public final static Property S_SHUIBIAOTXM = new Property(3, String.class, "S_SHUIBIAOTXM", false, "S_SHUIBIAOTXM");
        public final static Property S_ST = new Property(4, String.class, "S_ST", false, "S_ST");
        public final static Property S_KOUJING = new Property(5, String.class, "S_KOUJING", false, "S_KOUJING");
        public final static Property S_BIAOXINGID = new Property(6, String.class, "S_BIAOXINGID", false, "S_BIAOXINGID");
        public final static Property S_SHUIBIAOCJID = new Property(7, String.class, "S_SHUIBIAOCJID", false, "S_SHUIBIAOCJID");
        public final static Property S_HM = new Property(8, String.class, "S_HM", false, "S_HM");
        public final static Property S_DZ = new Property(9, String.class, "S_DZ", false, "S_DZ");
        public final static Property I_BIAOWUGDLX = new Property(10, Integer.class, "I_BIAOWUGDLX", false, "I_BIAOWUGDLX");
        public final static Property I_ZT = new Property(11, Integer.class, "I_ZT", false, "I_ZT");
        public final static Property D_DENGJIRQ = new Property(12, Integer.class, "D_DENGJIRQ", false, "D_DENGJIRQ");
        public final static Property S_DENGJIR = new Property(13, String.class, "S_DENGJIR", false, "S_DENGJIR");
        public final static Property I_DAYINCS = new Property(14, Integer.class, "I_DAYINCS", false, "I_DAYINCS");
        public final static Property D_SHIGONGRQ = new Property(15, Integer.class, "D_SHIGONGRQ", false, "D_SHIGONGRQ");
        public final static Property S_SHIGONGR = new Property(16, String.class, "S_SHIGONGR", false, "S_SHIGONGR");
        public final static Property D_FUHERQ = new Property(17, Integer.class, "D_FUHERQ", false, "D_FUHERQ");
        public final static Property S_FUHER = new Property(18, String.class, "S_FUHER", false, "S_FUHER");
        public final static Property S_BEIZHU = new Property(19, String.class, "S_BEIZHU", false, "S_BEIZHU");
        public final static Property I_JIEGUO = new Property(20, Integer.class, "I_JIEGUO", false, "I_JIEGUO");
        public final static Property D_HUITIANRQ = new Property(21, Integer.class, "D_HUITIANRQ", false, "D_HUITIANRQ");
        public final static Property S_HUITIANR = new Property(22, String.class, "S_HUITIANR", false, "S_HUITIANR");
        public final static Property S_LIANXIR = new Property(23, String.class, "S_LIANXIR", false, "S_LIANXIR");
        public final static Property D_YUYUERQ = new Property(24, Integer.class, "D_YUYUERQ", false, "D_YUYUERQ");
        public final static Property S_LIANXIDH = new Property(25, String.class, "S_LIANXIDH", false, "S_LIANXIDH");
        public final static Property D_SHANGCIHBRQ = new Property(26, Integer.class, "D_SHANGCIHBRQ", false, "D_SHANGCIHBRQ");
        public final static Property I_KID = new Property(27, Integer.class, "I_KID", false, "I_KID");
        public final static Property S_CAOZUOR = new Property(28, String.class, "S_CAOZUOR", false, "S_CAOZUOR");
        public final static Property D_CAOZUOSJ = new Property(29, Integer.class, "D_CAOZUOSJ", false, "D_CAOZUOSJ");
        public final static Property I_JIUBIAODS = new Property(30, Integer.class, "I_JIUBIAODS", false, "I_JIUBIAODS");
        public final static Property S_XINBIAOTXM = new Property(31, String.class, "S_XINBIAOTXM", false, "S_XINBIAOTXM");
        public final static Property I_XINBIAODS = new Property(32, Integer.class, "I_XINBIAODS", false, "I_XINBIAODS");
        public final static Property I_BIAOWUSQPH = new Property(33, Integer.class, "I_BIAOWUSQPH", false, "I_BIAOWUSQPH");
        public final static Property S_CH = new Property(34, String.class, "S_CH", false, "S_CH");
        public final static Property S_PAIDANR = new Property(35, String.class, "S_PAIDANR", false, "S_PAIDANR");
        public final static Property D_PAIDANSJ = new Property(36, Integer.class, "D_PAIDANSJ", false, "D_PAIDANSJ");
        public final static Property S_JIEDANR = new Property(37, String.class, "S_JIEDANR", false, "S_JIEDANR");
        public final static Property D_ZUIHOUSGRQ = new Property(38, Integer.class, "D_ZUIHOUSGRQ", false, "D_ZUIHOUSGRQ");
        public final static Property S_X1 = new Property(39, String.class, "S_X1", false, "S_X1");
        public final static Property S_Y1 = new Property(40, String.class, "S_Y1", false, "S_Y1");
        public final static Property S_GONGDANBH = new Property(41, String.class, "S_GONGDANBH", false, "S_GONGDANBH");
        public final static Property S_KEHUQM = new Property(42, String.class, "S_KEHUQM", false, "S_KEHUQM");
        public final static Property S_ZHAOPIANMC = new Property(43, String.class, "S_ZHAOPIANMC", false, "S_ZHAOPIANMC");
        public final static Property I_SHANGCHUANBZ = new Property(44, String.class, "I_SHANGCHUANBZ", false, "I_SHANGCHUANBZ");
        public final static Property I_CHAOBIAOBZ = new Property(45, String.class, "I_CHAOBIAOBZ", false, "I_CHAOBIAOBZ");
        public final static Property S_GUZHANGYY = new Property(46, String.class, "S_GUZHANGYY", false, "S_GUZHANGYY");
        public final static Property S_HUANBIAOSM = new Property(47, String.class, "S_HUANBIAOSM", false, "S_HUANBIAOSM");
        public final static Property S_SHUIBIAOGYH = new Property(48, String.class, "S_SHUIBIAOGYH", false, "S_SHUIBIAOGYH");
        public final static Property S_XINBIAOGYH = new Property(49, String.class, "S_XINBIAOGYH", false, "S_XINBIAOGYH");
        public final static Property I_QIANFEIJE = new Property(50, Integer.class, "I_QIANFEIJE", false, "I_QIANFEIJE");
        public final static Property S_JIANCEJG = new Property(51, String.class, "S_JIANCEJG", false, "S_JIANCEJG");
        public final static Property S_CHAIBIAOYY = new Property(52, String.class, "S_CHAIBIAOYY", false, "S_CHAIBIAOYY");
        public final static Property S_HETONGH = new Property(53, String.class, "S_HETONGH", false, "S_HETONGH");
        public final static Property S_SHUIBIAOGG = new Property(54, String.class, "S_SHUIBIAOGG", false, "S_SHUIBIAOGG");
        public final static Property S_YONGSHUIXZ = new Property(55, String.class, "S_YONGSHUIXZ", false, "S_YONGSHUIXZ");
        public final static Property S_SHENHER = new Property(56, String.class, "S_SHENHER", false, "S_SHENHER");
        public final static Property D_SHENHERQ = new Property(57, Integer.class, "D_SHENHERQ", false, "D_SHENHERQ");
        public final static Property S_CHAOBIAOZT = new Property(58, String.class, "S_CHAOBIAOZT", false, "S_CHAOBIAOZT");
        public final static Property I_SHANGCICM = new Property(59, Integer.class, "I_SHANGCICM", false, "I_SHANGCICM");
    };


    public BiaoWuGDDao(DaoConfig config) {
        super(config);
    }

    public BiaoWuGDDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'PDA_BIAOWUGD' (" + //
                "'ID' INTEGER," + // 0: ID
                "'I_RENWUBH' INTEGER," + // 1: I_RENWUBH
                "'S_CID' TEXT," + // 2: S_CID
                "'S_SHUIBIAOTXM' TEXT," + // 3: S_SHUIBIAOTXM
                "'S_ST' TEXT," + // 4: S_ST
                "'S_KOUJING' TEXT," + // 5: S_KOUJING
                "'S_BIAOXINGID' TEXT," + // 6: S_BIAOXINGID
                "'S_SHUIBIAOCJID' TEXT," + // 7: S_SHUIBIAOCJID
                "'S_HM' TEXT," + // 8: S_HM
                "'S_DZ' TEXT," + // 9: S_DZ
                "'I_BIAOWUGDLX' INTEGER," + // 10: I_BIAOWUGDLX
                "'I_ZT' INTEGER," + // 11: I_ZT
                "'D_DENGJIRQ' INTEGER," + // 12: D_DENGJIRQ
                "'S_DENGJIR' TEXT," + // 13: S_DENGJIR
                "'I_DAYINCS' INTEGER," + // 14: I_DAYINCS
                "'D_SHIGONGRQ' INTEGER," + // 15: D_SHIGONGRQ
                "'S_SHIGONGR' TEXT," + // 16: S_SHIGONGR
                "'D_FUHERQ' INTEGER," + // 17: D_FUHERQ
                "'S_FUHER' TEXT," + // 18: S_FUHER
                "'S_BEIZHU' TEXT," + // 19: S_BEIZHU
                "'I_JIEGUO' INTEGER," + // 20: I_JIEGUO
                "'D_HUITIANRQ' INTEGER," + // 21: D_HUITIANRQ
                "'S_HUITIANR' TEXT," + // 22: S_HUITIANR
                "'S_LIANXIR' TEXT," + // 23: S_LIANXIR
                "'D_YUYUERQ' INTEGER," + // 24: D_YUYUERQ
                "'S_LIANXIDH' TEXT," + // 25: S_LIANXIDH
                "'D_SHANGCIHBRQ' INTEGER," + // 26: D_SHANGCIHBRQ
                "'I_KID' INTEGER," + // 27: I_KID
                "'S_CAOZUOR' TEXT," + // 28: S_CAOZUOR
                "'D_CAOZUOSJ' INTEGER," + // 29: D_CAOZUOSJ
                "'I_JIUBIAODS' INTEGER," + // 30: I_JIUBIAODS
                "'S_XINBIAOTXM' TEXT," + // 31: S_XINBIAOTXM
                "'I_XINBIAODS' INTEGER," + // 32: I_XINBIAODS
                "'I_BIAOWUSQPH' INTEGER," + // 33: I_BIAOWUSQPH
                "'S_CH' TEXT," + // 34: S_CH
                "'S_PAIDANR' TEXT," + // 35: S_PAIDANR
                "'D_PAIDANSJ' INTEGER," + // 36: D_PAIDANSJ
                "'S_JIEDANR' TEXT," + // 37: S_JIEDANR
                "'D_ZUIHOUSGRQ' INTEGER," + // 38: D_ZUIHOUSGRQ
                "'S_X1' TEXT," + // 39: S_X1
                "'S_Y1' TEXT," + // 40: S_Y1
                "'S_GONGDANBH' TEXT," + // 41: S_GONGDANBH
                "'S_KEHUQM' TEXT," + // 42: S_KEHUQM
                "'S_ZHAOPIANMC' TEXT," + // 43: S_ZHAOPIANMC
                "'I_SHANGCHUANBZ' TEXT," + // 44: I_SHANGCHUANBZ
                "'I_CHAOBIAOBZ' TEXT," + // 45: I_CHAOBIAOBZ
                "'S_GUZHANGYY' TEXT," + // 46: S_GUZHANGYY
                "'S_HUANBIAOSM' TEXT," + // 47: S_HUANBIAOSM
                "'S_SHUIBIAOGYH' TEXT," + // 48: S_SHUIBIAOGYH
                "'S_XINBIAOGYH' TEXT," + // 49: S_XINBIAOGYH
                "'I_QIANFEIJE' INTEGER," + // 50: I_QIANFEIJE
                "'S_JIANCEJG' TEXT," + // 51: S_JIANCEJG
                "'S_CHAIBIAOYY' TEXT," + // 52: S_CHAIBIAOYY
                "'S_HETONGH' TEXT," + // 53: S_HETONGH
                "'S_SHUIBIAOGG' TEXT," + // 54: S_SHUIBIAOGG
                "'S_YONGSHUIXZ' TEXT," + // 55: S_YONGSHUIXZ
                "'S_SHENHER' TEXT," + // 56: S_SHENHER
                "'D_SHENHERQ' INTEGER," + // 57: D_SHENHERQ
                "'S_CHAOBIAOZT' TEXT," + // 58: S_CHAOBIAOZT
                "'I_SHANGCICM' INTEGER);"); // 59: I_SHANGCICM
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'PDA_BIAOWUGD'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, BiaoWuGD entity) {
        stmt.clearBindings();

        Integer ID = entity.getID();
        if (ID != null) {
            stmt.bindLong(1, ID);
        }

        Integer I_RENWUBH = entity.getI_RENWUBH();
        if (I_RENWUBH != null) {
            stmt.bindLong(2, I_RENWUBH);
        }

        String S_CID = entity.getS_CID();
        if (S_CID != null) {
            stmt.bindString(3, S_CID);
        }

        String S_SHUIBIAOTXM = entity.getS_SHUIBIAOTXM();
        if (S_SHUIBIAOTXM != null) {
            stmt.bindString(4, S_SHUIBIAOTXM);
        }

        String S_ST = entity.getS_ST();
        if (S_ST != null) {
            stmt.bindString(5, S_ST);
        }

        String S_KOUJING = entity.getS_KOUJING();
        if (S_KOUJING != null) {
            stmt.bindString(6, S_KOUJING);
        }

        String S_BIAOXINGID = entity.getS_BIAOXINGID();
        if (S_BIAOXINGID != null) {
            stmt.bindString(7, S_BIAOXINGID);
        }

        String S_SHUIBIAOCJID = entity.getS_SHUIBIAOCJID();
        if (S_SHUIBIAOCJID != null) {
            stmt.bindString(8, S_SHUIBIAOCJID);
        }

        String S_HM = entity.getS_HM();
        if (S_HM != null) {
            stmt.bindString(9, S_HM);
        }

        String S_DZ = entity.getS_DZ();
        if (S_DZ != null) {
            stmt.bindString(10, S_DZ);
        }

        Integer I_BIAOWUGDLX = entity.getI_BIAOWUGDLX();
        if (I_BIAOWUGDLX != null) {
            stmt.bindLong(11, I_BIAOWUGDLX);
        }

        Integer I_ZT = entity.getI_ZT();
        if (I_ZT != null) {
            stmt.bindLong(12, I_ZT);
        }

        Integer D_DENGJIRQ = entity.getD_DENGJIRQ();
        if (D_DENGJIRQ != null) {
            stmt.bindLong(13, D_DENGJIRQ);
        }

        String S_DENGJIR = entity.getS_DENGJIR();
        if (S_DENGJIR != null) {
            stmt.bindString(14, S_DENGJIR);
        }

        Integer I_DAYINCS = entity.getI_DAYINCS();
        if (I_DAYINCS != null) {
            stmt.bindLong(15, I_DAYINCS);
        }

        Integer D_SHIGONGRQ = entity.getD_SHIGONGRQ();
        if (D_SHIGONGRQ != null) {
            stmt.bindLong(16, D_SHIGONGRQ);
        }

        String S_SHIGONGR = entity.getS_SHIGONGR();
        if (S_SHIGONGR != null) {
            stmt.bindString(17, S_SHIGONGR);
        }

        Integer D_FUHERQ = entity.getD_FUHERQ();
        if (D_FUHERQ != null) {
            stmt.bindLong(18, D_FUHERQ);
        }

        String S_FUHER = entity.getS_FUHER();
        if (S_FUHER != null) {
            stmt.bindString(19, S_FUHER);
        }

        String S_BEIZHU = entity.getS_BEIZHU();
        if (S_BEIZHU != null) {
            stmt.bindString(20, S_BEIZHU);
        }

        Integer I_JIEGUO = entity.getI_JIEGUO();
        if (I_JIEGUO != null) {
            stmt.bindLong(21, I_JIEGUO);
        }

        Integer D_HUITIANRQ = entity.getD_HUITIANRQ();
        if (D_HUITIANRQ != null) {
            stmt.bindLong(22, D_HUITIANRQ);
        }

        String S_HUITIANR = entity.getS_HUITIANR();
        if (S_HUITIANR != null) {
            stmt.bindString(23, S_HUITIANR);
        }

        String S_LIANXIR = entity.getS_LIANXIR();
        if (S_LIANXIR != null) {
            stmt.bindString(24, S_LIANXIR);
        }

        Integer D_YUYUERQ = entity.getD_YUYUERQ();
        if (D_YUYUERQ != null) {
            stmt.bindLong(25, D_YUYUERQ);
        }

        String S_LIANXIDH = entity.getS_LIANXIDH();
        if (S_LIANXIDH != null) {
            stmt.bindString(26, S_LIANXIDH);
        }

        Integer D_SHANGCIHBRQ = entity.getD_SHANGCIHBRQ();
        if (D_SHANGCIHBRQ != null) {
            stmt.bindLong(27, D_SHANGCIHBRQ);
        }

        Integer I_KID = entity.getI_KID();
        if (I_KID != null) {
            stmt.bindLong(28, I_KID);
        }

        String S_CAOZUOR = entity.getS_CAOZUOR();
        if (S_CAOZUOR != null) {
            stmt.bindString(29, S_CAOZUOR);
        }

        Integer D_CAOZUOSJ = entity.getD_CAOZUOSJ();
        if (D_CAOZUOSJ != null) {
            stmt.bindLong(30, D_CAOZUOSJ);
        }

        Integer I_JIUBIAODS = entity.getI_JIUBIAODS();
        if (I_JIUBIAODS != null) {
            stmt.bindLong(31, I_JIUBIAODS);
        }

        String S_XINBIAOTXM = entity.getS_XINBIAOTXM();
        if (S_XINBIAOTXM != null) {
            stmt.bindString(32, S_XINBIAOTXM);
        }

        Integer I_XINBIAODS = entity.getI_XINBIAODS();
        if (I_XINBIAODS != null) {
            stmt.bindLong(33, I_XINBIAODS);
        }

        Integer I_BIAOWUSQPH = entity.getI_BIAOWUSQPH();
        if (I_BIAOWUSQPH != null) {
            stmt.bindLong(34, I_BIAOWUSQPH);
        }

        String S_CH = entity.getS_CH();
        if (S_CH != null) {
            stmt.bindString(35, S_CH);
        }

        String S_PAIDANR = entity.getS_PAIDANR();
        if (S_PAIDANR != null) {
            stmt.bindString(36, S_PAIDANR);
        }

        Integer D_PAIDANSJ = entity.getD_PAIDANSJ();
        if (D_PAIDANSJ != null) {
            stmt.bindLong(37, D_PAIDANSJ);
        }

        String S_JIEDANR = entity.getS_JIEDANR();
        if (S_JIEDANR != null) {
            stmt.bindString(38, S_JIEDANR);
        }

        Integer D_ZUIHOUSGRQ = entity.getD_ZUIHOUSGRQ();
        if (D_ZUIHOUSGRQ != null) {
            stmt.bindLong(39, D_ZUIHOUSGRQ);
        }

        String S_X1 = entity.getS_X1();
        if (S_X1 != null) {
            stmt.bindString(40, S_X1);
        }

        String S_Y1 = entity.getS_Y1();
        if (S_Y1 != null) {
            stmt.bindString(41, S_Y1);
        }

        String S_GONGDANBH = entity.getS_GONGDANBH();
        if (S_GONGDANBH != null) {
            stmt.bindString(42, S_GONGDANBH);
        }

        String S_KEHUQM = entity.getS_KEHUQM();
        if (S_KEHUQM != null) {
            stmt.bindString(43, S_KEHUQM);
        }

        String S_ZHAOPIANMC = entity.getS_ZHAOPIANMC();
        if (S_ZHAOPIANMC != null) {
            stmt.bindString(44, S_ZHAOPIANMC);
        }

        String I_SHANGCHUANBZ = entity.getI_SHANGCHUANBZ();
        if (I_SHANGCHUANBZ != null) {
            stmt.bindString(45, I_SHANGCHUANBZ);
        }

        String I_CHAOBIAOBZ = entity.getI_CHAOBIAOBZ();
        if (I_CHAOBIAOBZ != null) {
            stmt.bindString(46, I_CHAOBIAOBZ);
        }

        String S_GUZHANGYY = entity.getS_GUZHANGYY();
        if (S_GUZHANGYY != null) {
            stmt.bindString(47, S_GUZHANGYY);
        }

        String S_HUANBIAOSM = entity.getS_HUANBIAOSM();
        if (S_HUANBIAOSM != null) {
            stmt.bindString(48, S_HUANBIAOSM);
        }

        String S_SHUIBIAOGYH = entity.getS_SHUIBIAOGYH();
        if (S_SHUIBIAOGYH != null) {
            stmt.bindString(49, S_SHUIBIAOGYH);
        }

        String S_XINBIAOGYH = entity.getS_XINBIAOGYH();
        if (S_XINBIAOGYH != null) {
            stmt.bindString(50, S_XINBIAOGYH);
        }

        Integer I_QIANFEIJE = entity.getI_QIANFEIJE();
        if (I_QIANFEIJE != null) {
            stmt.bindLong(51, I_QIANFEIJE);
        }

        String S_JIANCEJG = entity.getS_JIANCEJG();
        if (S_JIANCEJG != null) {
            stmt.bindString(52, S_JIANCEJG);
        }

        String S_CHAIBIAOYY = entity.getS_CHAIBIAOYY();
        if (S_CHAIBIAOYY != null) {
            stmt.bindString(53, S_CHAIBIAOYY);
        }

        String S_HETONGH = entity.getS_HETONGH();
        if (S_HETONGH != null) {
            stmt.bindString(54, S_HETONGH);
        }

        String S_SHUIBIAOGG = entity.getS_SHUIBIAOGG();
        if (S_SHUIBIAOGG != null) {
            stmt.bindString(55, S_SHUIBIAOGG);
        }

        String S_YONGSHUIXZ = entity.getS_YONGSHUIXZ();
        if (S_YONGSHUIXZ != null) {
            stmt.bindString(56, S_YONGSHUIXZ);
        }

        String S_SHENHER = entity.getS_SHENHER();
        if (S_SHENHER != null) {
            stmt.bindString(57, S_SHENHER);
        }

        Integer D_SHENHERQ = entity.getD_SHENHERQ();
        if (D_SHENHERQ != null) {
            stmt.bindLong(58, D_SHENHERQ);
        }

        String S_CHAOBIAOZT = entity.getS_CHAOBIAOZT();
        if (S_CHAOBIAOZT != null) {
            stmt.bindString(59, S_CHAOBIAOZT);
        }

        Integer I_SHANGCICM = entity.getI_SHANGCICM();
        if (I_SHANGCICM != null) {
            stmt.bindLong(60, I_SHANGCICM);
        }
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }

    /** @inheritdoc */
    @Override
    public BiaoWuGD readEntity(Cursor cursor, int offset) {
        BiaoWuGD entity = new BiaoWuGD( //
                cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0), // ID
                cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // I_RENWUBH
                cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // S_CID
                cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // S_SHUIBIAOTXM
                cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // S_ST
                cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // S_KOUJING
                cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // S_BIAOXINGID
                cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // S_SHUIBIAOCJID
                cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // S_HM
                cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // S_DZ
                cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10), // I_BIAOWUGDLX
                cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11), // I_ZT
                cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12), // D_DENGJIRQ
                cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // S_DENGJIR
                cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14), // I_DAYINCS
                cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15), // D_SHIGONGRQ
                cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // S_SHIGONGR
                cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17), // D_FUHERQ
                cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // S_FUHER
                cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // S_BEIZHU
                cursor.isNull(offset + 20) ? null : cursor.getInt(offset + 20), // I_JIEGUO
                cursor.isNull(offset + 21) ? null : cursor.getInt(offset + 21), // D_HUITIANRQ
                cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // S_HUITIANR
                cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // S_LIANXIR
                cursor.isNull(offset + 24) ? null : cursor.getInt(offset + 24), // D_YUYUERQ
                cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // S_LIANXIDH
                cursor.isNull(offset + 26) ? null : cursor.getInt(offset + 26), // D_SHANGCIHBRQ
                cursor.isNull(offset + 27) ? null : cursor.getInt(offset + 27), // I_KID
                cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // S_CAOZUOR
                cursor.isNull(offset + 29) ? null : cursor.getInt(offset + 29), // D_CAOZUOSJ
                cursor.isNull(offset + 30) ? null : cursor.getInt(offset + 30), // I_JIUBIAODS
                cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // S_XINBIAOTXM
                cursor.isNull(offset + 32) ? null : cursor.getInt(offset + 32), // I_XINBIAODS
                cursor.isNull(offset + 33) ? null : cursor.getInt(offset + 33), // I_BIAOWUSQPH
                cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // S_CH
                cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // S_PAIDANR
                cursor.isNull(offset + 36) ? null : cursor.getInt(offset + 36), // D_PAIDANSJ
                cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // S_JIEDANR
                cursor.isNull(offset + 38) ? null : cursor.getInt(offset + 38), // D_ZUIHOUSGRQ
                cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // S_X1
                cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // S_Y1
                cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // S_GONGDANBH
                cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // S_KEHUQM
                cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // S_ZHAOPIANMC
                cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // I_SHANGCHUANBZ
                cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // I_CHAOBIAOBZ
                cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // S_GUZHANGYY
                cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // S_HUANBIAOSM
                cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // S_SHUIBIAOGYH
                cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // S_XINBIAOGYH
                cursor.isNull(offset + 50) ? null : cursor.getInt(offset + 50), // I_QIANFEIJE
                cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // S_JIANCEJG
                cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // S_CHAIBIAOYY
                cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53), // S_HETONGH
                cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54), // S_SHUIBIAOGG
                cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55), // S_YONGSHUIXZ
                cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // S_SHENHER
                cursor.isNull(offset + 57) ? null : cursor.getInt(offset + 57), // D_SHENHERQ
                cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58), // S_CHAOBIAOZT
                cursor.isNull(offset + 59) ? null : cursor.getInt(offset + 59) // I_SHANGCICM
        );
        return entity;
    }

    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, BiaoWuGD entity, int offset) {
        entity.setID(cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0));
        entity.setI_RENWUBH(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setS_CID(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setS_SHUIBIAOTXM(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setS_ST(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setS_KOUJING(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setS_BIAOXINGID(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setS_SHUIBIAOCJID(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setS_HM(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setS_DZ(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setI_BIAOWUGDLX(cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10));
        entity.setI_ZT(cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11));
        entity.setD_DENGJIRQ(cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12));
        entity.setS_DENGJIR(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setI_DAYINCS(cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14));
        entity.setD_SHIGONGRQ(cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15));
        entity.setS_SHIGONGR(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setD_FUHERQ(cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17));
        entity.setS_FUHER(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setS_BEIZHU(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setI_JIEGUO(cursor.isNull(offset + 20) ? null : cursor.getInt(offset + 20));
        entity.setD_HUITIANRQ(cursor.isNull(offset + 21) ? null : cursor.getInt(offset + 21));
        entity.setS_HUITIANR(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setS_LIANXIR(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setD_YUYUERQ(cursor.isNull(offset + 24) ? null : cursor.getInt(offset + 24));
        entity.setS_LIANXIDH(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setD_SHANGCIHBRQ(cursor.isNull(offset + 26) ? null : cursor.getInt(offset + 26));
        entity.setI_KID(cursor.isNull(offset + 27) ? null : cursor.getInt(offset + 27));
        entity.setS_CAOZUOR(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setD_CAOZUOSJ(cursor.isNull(offset + 29) ? null : cursor.getInt(offset + 29));
        entity.setI_JIUBIAODS(cursor.isNull(offset + 30) ? null : cursor.getInt(offset + 30));
        entity.setS_XINBIAOTXM(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setI_XINBIAODS(cursor.isNull(offset + 32) ? null : cursor.getInt(offset + 32));
        entity.setI_BIAOWUSQPH(cursor.isNull(offset + 33) ? null : cursor.getInt(offset + 33));
        entity.setS_CH(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setS_PAIDANR(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setD_PAIDANSJ(cursor.isNull(offset + 36) ? null : cursor.getInt(offset + 36));
        entity.setS_JIEDANR(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setD_ZUIHOUSGRQ(cursor.isNull(offset + 38) ? null : cursor.getInt(offset + 38));
        entity.setS_X1(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setS_Y1(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setS_GONGDANBH(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setS_KEHUQM(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setS_ZHAOPIANMC(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setI_SHANGCHUANBZ(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setI_CHAOBIAOBZ(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setS_GUZHANGYY(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setS_HUANBIAOSM(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setS_SHUIBIAOGYH(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setS_XINBIAOGYH(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setI_QIANFEIJE(cursor.isNull(offset + 50) ? null : cursor.getInt(offset + 50));
        entity.setS_JIANCEJG(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setS_CHAIBIAOYY(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setS_HETONGH(cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53));
        entity.setS_SHUIBIAOGG(cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54));
        entity.setS_YONGSHUIXZ(cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55));
        entity.setS_SHENHER(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setD_SHENHERQ(cursor.isNull(offset + 57) ? null : cursor.getInt(offset + 57));
        entity.setS_CHAOBIAOZT(cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58));
        entity.setI_SHANGCICM(cursor.isNull(offset + 59) ? null : cursor.getInt(offset + 59));
    }

    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(BiaoWuGD entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }

    /** @inheritdoc */
    @Override
    public Void getKey(BiaoWuGD entity) {
        return null;
    }

    /** @inheritdoc */
    @Override
    protected boolean isEntityUpdateable() {
        return true;
    }

    /**
     * 插入新数据到表务工单表
     *
     * @param gd
     *            表务工单实体类
     */
    public void insertBiaoWuGD(BiaoWuGD gd) {
        if (gd == null){
            return;
        }
        this.insertOrReplace(gd);
    }

    /**
     * 删除表务工单所有任务
     */
    public void deleteBiaoWuGD() {
        this.deleteAll();
    }

    /**
     * 删除表务工单
     */
    public void deleteBiaoWuGDByBH(int renwubh) {
        QueryBuilder<BiaoWuGD> qb = this.queryBuilder();
        DeleteQuery<BiaoWuGD> bd = qb.where(Properties.I_RENWUBH.notIn(renwubh)).buildDelete();
        bd.executeDeleteWithoutDetachingEntities();
    }

    /**
     * 获取操作人对应的的所有表务工单任务
     *
     * @param account
     *            操作人
     * @return List<BiaoWuGD>
     */
    public List<BiaoWuGD> getBiaoWuGDList(String account) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CAOZUOR.eq(account));
        List<BiaoWuGD> list = qb.list();
        return list;
    }

    /**
     * 获取操作人对应的的所有未抄表务工单任务
     *
     * @param account
     *            操作人
     * @return List<BiaoWuGD>
     */
    public List<BiaoWuGD> getBiaoWuGDWeiChaoList(String account) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CAOZUOR.eq(account),Properties.I_CHAOBIAOBZ.eq(0));
        List<BiaoWuGD> list = qb.list();
        return list;
    }

    /**
     * 修改抄表标志
     *
     * @param account
     *            操作员
     * @param renWuBH
     *            任务编号
     */
    public void updateBiaoWuGDChaoBiaoBZ(String account, int renWuBH) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CAOZUOR.eq(account),Properties.I_RENWUBH.eq(renWuBH));
        if (qb.list() == null){
            return;
        }
        BiaoWuGD biaoWuGD = (BiaoWuGD) qb.list().get(0);
        biaoWuGD.setI_CHAOBIAOBZ("1");

        QueryBuilder<BiaoWuGD> qb2 = this.queryBuilder();
        DeleteQuery<BiaoWuGD> bd =  qb2.where(Properties.S_CAOZUOR.eq(account),Properties.I_RENWUBH.eq(renWuBH)).buildDelete();
        bd.executeDeleteWithoutDetachingEntities();

        this.insertOrReplace(biaoWuGD);
    }

    /**
     * 获取已抄未上传的表务工单总条数
     *
     * @param account
     *            操作员
     * @return int
     */
    public int getBiaoWuGDCount(String account) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CAOZUOR.eq(account), Properties.I_SHANGCHUANBZ.eq(0), Properties.I_CHAOBIAOBZ.eq(1));
        int count = (int) qb.count();
        return count;
    }

    /**
     * 获取未抄的表务工单总条数
     *
     * @param account
     *            操作员
     * @return int
     */
    public int getWeiWanChengBWGDCount(String account) {

        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CAOZUOR.eq(account), Properties.I_CHAOBIAOBZ.eq(1));
        int count = (int) qb.count();
        return count;
    }

    /**
     * 更改上传状态
     *
     * @param account
     *            操作员
     * @param gd
     *            工单任务
     */
    public void updateShangChuanZT(String account, BiaoWuGD gd) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CAOZUOR.eq(account), Properties.I_RENWUBH.eq(gd.getI_RENWUBH()));
        if (qb.list() == null){
            return;
        }
        BiaoWuGD biaoWuGD = (BiaoWuGD) qb.list().get(0);
        biaoWuGD.setI_SHANGCHUANBZ(String.valueOf(1));

        QueryBuilder<BiaoWuGD> qb2 = this.queryBuilder();
        DeleteQuery<BiaoWuGD> bd =  qb2.where(Properties.S_CAOZUOR.eq(account), Properties.I_RENWUBH.eq(gd.getI_RENWUBH())).buildDelete();
        bd.executeDeleteWithoutDetachingEntities();

        this.insertOrReplace(biaoWuGD);
    }

    /**
     * 插入客户签名路径
     *
     * @param renWuBH
     *            任务编号
     * @param signaturePath
     *            图片路径
     */
    public void updateSignaturePath(int renWuBH, String signaturePath) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.I_RENWUBH.eq(renWuBH));
        if (qb.list() == null){
            return;
        }
        BiaoWuGD biaoWuGD = (BiaoWuGD) qb.list().get(0);
        biaoWuGD.setS_KEHUQM(signaturePath);

        QueryBuilder<BiaoWuGD> qb2 = this.queryBuilder();
        DeleteQuery<BiaoWuGD> bd =  qb2.where(Properties.I_RENWUBH.eq(renWuBH)).buildDelete();
        bd.executeDeleteWithoutDetachingEntities();

        this.insertOrReplace(biaoWuGD);
    }

    /**
     * 保存照片名称
     *
     * @param renWuBH
     *            任务编号
     * @param imgPath
     *            图片名称
     */
    public void updateImgPath(int renWuBH, String imgPath) {
        String fileName = "";
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.I_RENWUBH.eq(renWuBH));
        if (qb.list() == null){
            return;
        }
        BiaoWuGD biaoWuGD = (BiaoWuGD) qb.list().get(0);
        fileName = biaoWuGD.getS_ZHAOPIANMC();
        StringBuilder stu = new StringBuilder();
        if (fileName != null && !fileName.equals("")) {
            stu.append(fileName);
            stu.append(",");
        }
        stu.append(imgPath);

        QueryBuilder<BiaoWuGD> qb2 = this.queryBuilder();
        DeleteQuery<BiaoWuGD> bd =  qb2.where(Properties.I_RENWUBH.eq(renWuBH)).buildDelete();
        bd.executeDeleteWithoutDetachingEntities();

        biaoWuGD.setS_ZHAOPIANMC(stu.toString());
        this.insertOrReplace(biaoWuGD);
    }

    /**
     * 获取照片名称
     *
     * @param renWuBH
     *            任务编号
     * @return String 如“path,path”；
     */
    public String getBiaoWuImgName(int renWuBH) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.I_RENWUBH.eq(renWuBH));
        String fileName = "";
        if (qb.list() == null){
            return fileName;
        }
        BiaoWuGD biaoWuGD = (BiaoWuGD) qb.list().get(0);
        fileName = biaoWuGD.getS_ZHAOPIANMC();

        return fileName;
    }

    /**
     * 更改表务工单数据
     *
     * @param gd
     *            表务工单数据
     */
    public boolean updateBiaoWuGDDate(BiaoWuGD gd) {
        boolean flag = false;
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.I_RENWUBH.eq(gd.getI_RENWUBH()));
        if (qb.list()==null){
            return flag;
        }
        BiaoWuGD biaoWuGD = (BiaoWuGD) qb.list().get(0);


        String chaiBiaoYY = gd.getS_CHAIBIAOYY();
        if (chaiBiaoYY != null && !chaiBiaoYY.equals("")) {
            biaoWuGD.setS_CHAIBIAOYY(chaiBiaoYY);
        }

        int jiuBiaoDS = gd.getI_JIUBIAODS();
        if (jiuBiaoDS > 0) {
            biaoWuGD.setI_JIUBIAODS(jiuBiaoDS);
        }

        String caoZuoR = gd.getS_CAOZUOR();
        if (caoZuoR != null && !caoZuoR.equals("")) {
            biaoWuGD.setS_CAOZUOR(caoZuoR);
        }

        Date caoZuoSj = new Date((long)gd.getD_CAOZUOSJ());
        if (caoZuoSj != null && !caoZuoSj.equals("")) {
            biaoWuGD.setD_CAOZUOSJ((int) caoZuoSj.getTime());
        }

        String huiTianR = gd.getS_HUITIANR();
        if (huiTianR != null && !huiTianR.equals("")) {
            biaoWuGD.setS_HUITIANR(huiTianR);
        }

        Date huiTianRQ =  new Date((long)gd.getD_HUITIANRQ());
        if (huiTianRQ != null && !huiTianRQ.equals("")) {
            biaoWuGD.setD_CAOZUOSJ((int) caoZuoSj.getTime());
        }

        String shiGongR = gd.getS_SHIGONGR();
        if (shiGongR != null && !shiGongR.equals("")) {
            biaoWuGD.setS_SHIGONGR(shiGongR);
        }

        Date shiGongRQ = new Date((long)gd.getD_SHIGONGRQ());
        if (shiGongRQ != null && !shiGongRQ.equals("")) {
            biaoWuGD.setD_SHIGONGRQ((int) shiGongRQ.getTime());
        }

        String xinTXM = gd.getS_XINBIAOTXM();
        if (xinTXM != null && !xinTXM.equals("")) {
            biaoWuGD.setS_XINBIAOTXM(xinTXM);
        }

        String jianCeJG = gd.getS_JIANCEJG();
        if (jianCeJG != null && !jianCeJG.equals("")) {
            biaoWuGD.setS_JIANCEJG(jianCeJG);
        }

        String cid = gd.getS_CID();
        if (cid != null && !cid.equals("")) {
            biaoWuGD.setS_CID(cid);
        }

        String xinBiaoGYH = gd.getS_XINBIAOGYH();
        if (xinBiaoGYH != null && !xinBiaoGYH.equals("")) {
            biaoWuGD.setS_XINBIAOGYH(xinBiaoGYH);
        }

        int xinBiaoDS = gd.getI_XINBIAODS();
        if (xinBiaoDS > 0) {
            biaoWuGD.setI_XINBIAODS(xinBiaoDS);
        }
        String beiZhu = gd.getS_BEIZHU();
        if (beiZhu != null && !beiZhu.equals("")) {
            biaoWuGD.setS_BEIZHU(beiZhu);
        }

        QueryBuilder<BiaoWuGD> qb2 = this.queryBuilder();
        DeleteQuery<BiaoWuGD> bd =  qb2.where(Properties.I_RENWUBH.eq(gd.getI_RENWUBH())).buildDelete();
        bd.executeDeleteWithoutDetachingEntities();

        if (this.insertOrReplace(gd) == 0){
            flag = true;
        }else {
            flag = false;
        }
        return flag;

    }

    /**
     * 获取已抄为上传表单信息
     *
     * @param account
     *            操作员
     * @return List<BiaoWuGD>
     */
    public List<BiaoWuGD> getWeiShangChuanBiaoWuGD(String account) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CAOZUOR.eq(account),Properties.I_SHANGCHUANBZ.eq(0),Properties.I_CHAOBIAOBZ.eq(1));
        List<BiaoWuGD> list = qb.list();
        return list;
    }

    /**
     * 获取任务编号对应的表务工单信息
     *
     *            操作人
     * @param renWuBH
     *            任务编号
     * @return BiaoWuGD
     */
    public BiaoWuGD getBiaoWuGD(int renWuBH) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.I_RENWUBH.eq(renWuBH));
        String selection = BiaoWuGDColumns.I_RENWUBH + " = ?";
        if (qb.list() == null){
            return null;
        }
        BiaoWuGD biaoWuGD = (BiaoWuGD) qb.list().get(0);
        return biaoWuGD;
    }

    /**
     * 更改本地表务工单数据
     *
     * @param gd
     *            表务工单实体
     */
    private void updateBiaoWuGD(BiaoWuGD gd) {

        QueryBuilder<BiaoWuGD> qb2 = this.queryBuilder();
        DeleteQuery<BiaoWuGD> bd =  qb2.where(Properties.I_RENWUBH.eq(gd.getI_RENWUBH())).buildDelete();
        bd.executeDeleteWithoutDetachingEntities();

        this.insertOrReplace(gd);
    }

    /**
     * 判断是否存在已存在的表务工单数据，不存在则插入，存在则更改
     *
     * @param gd
     *            表务工单实体类
     */
    public void insertAndUpdateBiaoWuGD(BiaoWuGD gd) {

        int renWuBH = gd.getI_RENWUBH();
        boolean flag = isExistBiaoWuGD(renWuBH);
        if (flag) {
            updateBiaoWuGD(gd);
        } else {
            insertBiaoWuGD(gd);
        }
    }

    /**
     * 判断本地是否存在对应的任务编号表务工单数据
     *
     * @param renWuBH
     *            任务编号
     * @return boolean
     */
    private boolean isExistBiaoWuGD(int renWuBH) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.I_RENWUBH.eq(renWuBH));
        boolean flag = false;
        if (qb.count() > 0)
            flag = true;
        return flag;
    }

    /**
     * 删除本地不需要的任务编号下所有的表务工单信息
     *
     * @param account
     *            操作员
     * @param renWuBHAll
     *            所有需要的任务编号
     */
    public void deleteNotExistBiaoWuGD(String account, String AllRenWuBH) {


        QueryBuilder<BiaoWuGD> qb2 = this.queryBuilder();
        DeleteQuery<BiaoWuGD> bd;
        if (AllRenWuBH == null) {
            return;
        }
        else if (AllRenWuBH.equals("")) {
            bd = qb2.where(Properties.S_CAOZUOR.eq(account)).buildDelete();
            bd.executeDeleteWithoutDetachingEntities();
            return;
        }
        bd = qb2.where(Properties.I_RENWUBH.notIn(AllRenWuBH),Properties.S_CAOZUOR.eq(account)).buildDelete();
        bd.executeDeleteWithoutDetachingEntities();
    }

    /**
     * 根据任务编号查找renWuBHAll不存在本地的任务
     *
     * @param accoount
     *            抄表员
     * @return String
     */
    public String selectNonentityBiaoWuGDBH(String accoount, String renWuBHAll) {
        if (renWuBHAll == null){
            return null;
        }
        QueryBuilder qb = this.queryBuilder();
        String[] renWuBH = renWuBHAll.split(",");
        StringBuilder nonentityRenWuBH = new StringBuilder();
        for (int i = 0; i < renWuBH.length; i++) {
            if (renWuBH[i] != "") {
                qb.where(Properties.S_CAOZUOR.eq(accoount),Properties.I_RENWUBH.eq(renWuBH[i]));
                if (qb.count() == 0) {
                    nonentityRenWuBH.append(renWuBH[i] + ",");
                }
            }
        }
        return nonentityRenWuBH.length() == 0 ? nonentityRenWuBH.toString()
                : nonentityRenWuBH.substring(0, nonentityRenWuBH.length() - 1)
                .toString();
    }




}

package com.sh3h.dataprovider.greendaoDao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;
import android.text.TextUtils;

import com.sh3h.dataprovider.entity.ConditionInfo;
import com.sh3h.dataprovider.greendaoEntity.BIAOKAXX;
import com.sh3h.dataprovider.schema.BiaoKaXXColumns;

import java.util.ArrayList;
import java.util.List;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;
import de.greenrobot.dao.query.DeleteQuery;
import de.greenrobot.dao.query.QueryBuilder;
import de.greenrobot.dao.query.WhereCondition;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table KG_BIAOKAXX.
 */
public class BIAOKAXXDao extends AbstractDao<BIAOKAXX, Long> {

    public static final String TABLENAME = "KG_BIAOKAXX";


    /**
     * Properties of entity BIAOKAXX.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property ID = new Property(0, long.class, "ID", true, "ID");
        public final static Property S_CH = new Property(1, String.class, "S_CH", false, "S_CH");
        public final static Property I_CENEIXH = new Property(2, int.class, "I_CENEIXH", false, "I_CENEIXH");
        public final static Property S_CID = new Property(3, String.class, "S_CID", false, "S_CID");
        public final static Property S_KEHUBH = new Property(4, String.class, "S_KEHUBH", false, "S_KEHUBH");
        public final static Property S_KeHuMC = new Property(5, String.class, "S_KeHuMC", false, "S_KeHuMC");
        public final static Property S_ST = new Property(6, String.class, "S_ST", false, "S_ST");
        public final static Property S_DiZhi = new Property(7, String.class, "S_DiZhi", false, "S_DiZhi");
        public final static Property S_LIANXIR = new Property(8, String.class, "S_LIANXIR", false, "S_LIANXIR");
        public final static Property S_LIANXISJ = new Property(9, String.class, "S_LIANXISJ", false, "S_LIANXISJ");
        public final static Property S_LIANXIDH = new Property(10, String.class, "S_LIANXIDH", false, "S_LIANXIDH");
        public final static Property S_ShouFeiFS = new Property(11, String.class, "S_ShouFeiFS", false, "S_ShouFeiFS");
        public final static Property S_YinHangMC = new Property(12, String.class, "S_YinHangMC", false, "S_YinHangMC");
        public final static Property S_JianHao = new Property(13, String.class, "S_JianHao", false, "S_JianHao");
        public final static Property S_JianHaoMC = new Property(14, String.class, "S_JianHaoMC", false, "S_JianHaoMC");
        public final static Property I_YongHuZT = new Property(15, int.class, "I_YongHuZT", false, "I_YongHuZT");
        public final static Property D_LIHU = new Property(16, long.class, "D_LIHU", false, "D_LIHU");
        public final static Property S_BiaoWei = new Property(17, String.class, "S_BiaoWei", false, "S_BiaoWei");
        public final static Property S_SHUIBIAOGYH = new Property(18, String.class, "S_SHUIBIAOGYH", false, "S_SHUIBIAOGYH");
        public final static Property S_SHUIBIAOTXM = new Property(19, String.class, "S_SHUIBIAOTXM", false, "S_SHUIBIAOTXM");
        public final static Property S_KOUJINGMC = new Property(20, String.class, "S_KOUJINGMC", false, "S_KOUJINGMC");
        public final static Property I_LIANGCHENG = new Property(21, int.class, "I_LIANGCHENG", false, "I_LIANGCHENG");
        public final static Property S_BIAOXING = new Property(22, String.class, "S_BIAOXING", false, "S_BIAOXING");
        public final static Property S_SHUIBIAOCJ = new Property(23, String.class, "S_SHUIBIAOCJ", false, "S_SHUIBIAOCJ");
        public final static Property I_ShuiBiaoFL = new Property(24, int.class, "I_ShuiBiaoFL", false, "I_ShuiBiaoFL");
        public final static Property S_ShuiBiaoFLMC = new Property(25, String.class, "S_ShuiBiaoFLMC", false, "S_ShuiBiaoFLMC");
        public final static Property I_SHUIBIAOBL = new Property(26, int.class, "I_SHUIBIAOBL", false, "I_SHUIBIAOBL");
        public final static Property S_KaiZhangFL = new Property(27, String.class, "S_KaiZhangFL", false, "S_KaiZhangFL");
        public final static Property I_GONGNENGFL = new Property(28, int.class, "I_GONGNENGFL", false, "I_GONGNENGFL");
        public final static Property I_ShiFouJHYS = new Property(29, int.class, "I_ShiFouJHYS", false, "I_ShiFouJHYS");
        public final static Property I_ShiFouShouLJF = new Property(30, int.class, "I_ShiFouShouLJF", false, "I_ShiFouShouLJF");
        public final static Property N_LaJiFeiXS = new Property(31, double.class, "N_LaJiFeiXS", false, "N_LaJiFeiXS");
        public final static Property I_ShiFouShouWYJ = new Property(32, int.class, "I_ShiFouShouWYJ", false, "I_ShiFouShouWYJ");
        public final static Property I_ShiFouDEJJ = new Property(33, int.class, "I_ShiFouDEJJ", false, "I_ShiFouDEJJ");
        public final static Property I_DINGESL = new Property(34, int.class, "I_DINGESL", false, "I_DINGESL");
        public final static Property S_ZONGBIAOBH = new Property(35, String.class, "S_ZONGBIAOBH", false, "S_ZONGBIAOBH");
        public final static Property D_ZHUANGBIAORQ = new Property(36, long.class, "D_ZHUANGBIAORQ", false, "D_ZHUANGBIAORQ");
        public final static Property D_HUANBIAORQ = new Property(37, long.class, "D_HUANBIAORQ", false, "D_HUANBIAORQ");
        public final static Property I_XINBIAODM = new Property(38, int.class, "I_XINBIAODM", false, "I_XINBIAODM");
        public final static Property I_JIUBIAOCM = new Property(39, int.class, "I_JIUBIAOCM", false, "I_JIUBIAOCM");
        public final static Property S_X1 = new Property(40, String.class, "S_X1", false, "S_X1");
        public final static Property S_Y1 = new Property(41, String.class, "S_Y1", false, "S_Y1");
        public final static Property S_X = new Property(42, String.class, "S_X", false, "S_X");
        public final static Property S_Y = new Property(43, String.class, "S_Y", false, "S_Y");
        public final static Property I_FENTANFS = new Property(44, int.class, "I_FENTANFS", false, "I_FENTANFS");
        public final static Property I_FENTANL = new Property(45, int.class, "I_FENTANL", false, "I_FENTANL");
        public final static Property N_YuCunKYE = new Property(46, double.class, "N_YuCunKYE", false, "N_YuCunKYE");
        public final static Property I_QianFeiZBS = new Property(47, int.class, "I_QianFeiZBS", false, "I_QianFeiZBS");
        public final static Property N_QianFeiZJE = new Property(48, double.class, "N_QianFeiZJE", false, "N_QianFeiZJE");
        public final static Property S_BEIZHU = new Property(49, String.class, "S_BEIZHU", false, "S_BEIZHU");
        public final static Property I_SHUIBIAOZT = new Property(50, int.class, "I_SHUIBIAOZT", false, "I_SHUIBIAOZT");
        public final static Property N_RENKOUS = new Property(51, double.class, "N_RENKOUS", false, "N_RENKOUS");
        public final static Property I_DIBAOYHSL = new Property(52, int.class, "I_DIBAOYHSL", false, "I_DIBAOYHSL");
        public final static Property I_GONGCEYHSL = new Property(53, int.class, "I_GONGCEYHSL", false, "I_GONGCEYHSL");
        public final static Property N_YONGSHUIZKL = new Property(54, double.class, "N_YONGSHUIZKL", false, "N_YONGSHUIZKL");
        public final static Property N_PAISHUIZKL = new Property(55, double.class, "N_PAISHUIZKL", false, "N_PAISHUIZKL");
        public final static Property N_ZHEKOUL1 = new Property(56, double.class, "N_ZHEKOUL1", false, "N_ZHEKOUL1");
        public final static Property N_ZHEKOUL2 = new Property(57, double.class, "N_ZHEKOUL2", false, "N_ZHEKOUL2");
        public final static Property N_ZHEKOUL3 = new Property(58, double.class, "N_ZHEKOUL3", false, "N_ZHEKOUL3");
        public final static Property I_ERCIGS = new Property(59, int.class, "I_ERCIGS", false, "I_ERCIGS");
        public final static Property I_DIANZIZD = new Property(60, int.class, "I_DIANZIZD", false, "I_DIANZIZD");
        public final static Property S_XINGZHENGQ = new Property(61, String.class, "S_XINGZHENGQ", false, "S_XINGZHENGQ");
        public final static Property S_BIAOKAZT = new Property(62, String.class, "S_BIAOKAZT", false, "S_BIAOKAZT");
        public final static Property S_SHESHUIID = new Property(63, String.class, "S_SHESHUIID", false, "S_SHESHUIID");
        public final static Property N_JIAGE = new Property(64, double.class, "N_JIAGE", false, "N_JIAGE");
        public final static Property S_SHUIBIAOLXBH = new Property(65, String.class, "S_SHUIBIAOLXBH", false, "S_SHUIBIAOLXBH");
        public final static Property N_ZIZHUANGBKZXS = new Property(66, double.class, "N_ZIZHUANGBKZXS", false, "N_ZIZHUANGBKZXS");
        public final static Property S_SHUIBIAOZL = new Property(67, String.class, "S_SHUIBIAOZL", false, "S_SHUIBIAOZL");
        public final static Property S_SHUIBIAOFL = new Property(68, String.class, "S_SHUIBIAOFL", false, "S_SHUIBIAOFL");
        public final static Property S_YUANCHUANID = new Property(69, String.class, "S_YUANCHUANID", false, "S_YUANCHUANID");
        public final static Property S_ZHONGDUANH = new Property(70, String.class, "S_ZHONGDUANH", false, "S_ZHONGDUANH");
        public final static Property S_YUANCHUANCJ = new Property(71, String.class, "S_YUANCHUANCJ", false, "S_YUANCHUANCJ");
        public final static Property S_DUORENKFA = new Property(72, String.class, "S_DUORENKFA", false, "S_DUORENKFA");
        public final static Property I_SHIFOUJT = new Property(73, int.class, "I_SHIFOUJT", false, "I_SHIFOUJT");
        public final static Property D_DUORENKJZ = new Property(74, long.class, "D_DUORENKJZ", false, "D_DUORENKJZ");
        public final static Property D_GONGSHUIHTNX = new Property(75, int.class, "D_GONGSHUIHTNX", false, "D_GONGSHUIHTNX");
        public final static Property S_FANGDONGDH = new Property(76, String.class, "S_FANGDONGDH", false, "S_FANGDONGDH");
        public final static Property S_FANGKEDH = new Property(77, String.class, "S_FANGKEDH", false, "S_FANGKEDH");
        public final static Property I_NIANLEIJ = new Property(78, int.class, "I_NIANLEIJ", false, "I_NIANLEIJ");
        public final static Property I_HUANBIAO = new Property(79, int.class, "I_HUANBIAO", false, "I_HUANBIAO");
        public final static Property I_QIANFEI = new Property(80, int.class, "I_QIANFEI", false, "I_QIANFEI");
    }

    public BIAOKAXXDao(DaoConfig config) {
        super(config);
    }

    public BIAOKAXXDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /**
     * Creates the underlying database table.
     */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists ? "IF NOT EXISTS " : "";
        db.execSQL("CREATE TABLE " + constraint + "'KG_BIAOKAXX' (" + //
                "'ID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT ," + // 0: ID
                "'S_CH' TEXT NOT NULL ," + // 1: S_CH
                "'I_CENEIXH' INTEGER NOT NULL ," + // 2: I_CENEIXH
                "'S_CID' TEXT NOT NULL ," + // 3: S_CID
                "'S_KEHUBH' TEXT NOT NULL ," + // 4: S_KEHUBH
                "'S_KeHuMC' TEXT NOT NULL ," + // 5: S_KeHuMC
                "'S_ST' TEXT NOT NULL ," + // 6: S_ST
                "'S_DiZhi' TEXT NOT NULL ," + // 7: S_DiZhi
                "'S_LIANXIR' TEXT," + // 8: S_LIANXIR
                "'S_LIANXISJ' TEXT," + // 9: S_LIANXISJ
                "'S_LIANXIDH' TEXT," + // 10: S_LIANXIDH
                "'S_ShouFeiFS' TEXT," + // 11: S_ShouFeiFS
                "'S_YinHangMC' TEXT," + // 12: S_YinHangMC
                "'S_JianHao' TEXT NOT NULL ," + // 13: S_JianHao
                "'S_JianHaoMC' TEXT," + // 14: S_JianHaoMC
                "'I_YongHuZT' INTEGER," + // 15: I_YongHuZT
                "'D_LIHU' INTEGER," + // 16: D_LIHU
                "'S_BiaoWei' TEXT," + // 17: S_BiaoWei
                "'S_SHUIBIAOGYH' TEXT," + // 18: S_SHUIBIAOGYH
                "'S_SHUIBIAOTXM' TEXT," + // 19: S_SHUIBIAOTXM
                "'S_KOUJINGMC' TEXT," + // 20: S_KOUJINGMC
                "'I_LIANGCHENG' INTEGER," + // 21: I_LIANGCHENG
                "'S_BIAOXING' TEXT," + // 22: S_BIAOXING
                "'S_SHUIBIAOCJ' TEXT," + // 23: S_SHUIBIAOCJ
                "'I_ShuiBiaoFL' INTEGER," + // 24: I_ShuiBiaoFL
                "'S_ShuiBiaoFLMC' TEXT," + // 25: S_ShuiBiaoFLMC
                "'I_SHUIBIAOBL' INTEGER NOT NULL ," + // 26: I_SHUIBIAOBL
                "'S_KaiZhangFL' TEXT," + // 27: S_KaiZhangFL
                "'I_GONGNENGFL' INTEGER NOT NULL ," + // 28: I_GONGNENGFL
                "'I_ShiFouJHYS' INTEGER," + // 29: I_ShiFouJHYS
                "'I_ShiFouShouLJF' INTEGER," + // 30: I_ShiFouShouLJF
                "'N_LaJiFeiXS' REAL," + // 31: N_LaJiFeiXS
                "'I_ShiFouShouWYJ' INTEGER," + // 32: I_ShiFouShouWYJ
                "'I_ShiFouDEJJ' INTEGER," + // 33: I_ShiFouDEJJ
                "'I_DINGESL' INTEGER NOT NULL ," + // 34: I_DINGESL
                "'S_ZONGBIAOBH' TEXT," + // 35: S_ZONGBIAOBH
                "'D_ZHUANGBIAORQ' INTEGER," + // 36: D_ZHUANGBIAORQ
                "'D_HUANBIAORQ' INTEGER," + // 37: D_HUANBIAORQ
                "'I_XINBIAODM' INTEGER NOT NULL ," + // 38: I_XINBIAODM
                "'I_JIUBIAOCM' INTEGER," + // 39: I_JIUBIAOCM
                "'S_X1' TEXT," + // 40: S_X1
                "'S_Y1' TEXT," + // 41: S_Y1
                "'S_X' TEXT," + // 42: S_X
                "'S_Y' TEXT," + // 43: S_Y
                "'I_FENTANFS' INTEGER," + // 44: I_FENTANFS
                "'I_FENTANL' INTEGER," + // 45: I_FENTANL
                "'N_YUCUNKYE' REAL," + // 46: N_YuCunKYE
                "'I_QIANFEIZBS' INTEGER," + // 47: I_QianFeiZBS
                "'N_QIANFEIZJE' REAL," + // 48: N_QianFeiZJE
                "'S_BEIZHU' TEXT," + // 49: S_BEIZHU
                "'I_SHUIBIAOZT' INTEGER," + // 50: I_SHUIBIAOZT
                "'N_RENKOUS' REAL," + // 51: N_RENKOUS
                "'I_DIBAOYHSL' INTEGER," + // 52: I_DIBAOYHSL
                "'I_GONGCEYHSL' INTEGER," + // 53: I_GONGCEYHSL
                "'N_YONGSHUIZKL' REAL," + // 54: N_YONGSHUIZKL
                "'N_PAISHUIZKL' REAL," + // 55: N_PAISHUIZKL
                "'N_ZHEKOUL1' REAL," + // 56: N_ZHEKOUL1
                "'N_ZHEKOUL2' REAL," + // 57: N_ZHEKOUL2
                "'N_ZHEKOUL3' REAL," + // 58: N_ZHEKOUL3
                "'I_ERCIGS' INTEGER," + // 59: I_ERCIGS
                "'I_DIANZIZD' INTEGER," + // 60: I_DIANZIZD
                "'S_XINGZHENGQ' TEXT," + // 61: S_XINGZHENGQ
                "'S_BIAOKAZT' TEXT," + // 62: S_BIAOKAZT
                "'S_SHESHUIID' TEXT," + // 63: S_SHESHUIID
                "'N_JIAGE' REAL," + // 64: N_JIAGE
                "'S_SHUIBIAOLXBH' TEXT," + // 65: S_SHUIBIAOLXBH
                "'N_ZIZHUANGBKZXS' REAL," + // 66: N_ZIZHUANGBKZXS
                "'S_SHUIBIAOZL' TEXT," + // 67: S_SHUIBIAOZL
                "'S_SHUIBIAOFL' TEXT," + // 68: S_SHUIBIAOFL
                "'S_YUANCHUANID' TEXT," + // 69: S_YUANCHUANID
                "'S_ZHONGDUANH' TEXT," + // 70: S_ZHONGDUANH
                "'S_YUANCHUANCJ' TEXT," + // 71: S_YUANCHUANCJ
                "'S_DUORENKFA' TEXT," + // 72: S_DUORENKFA
                "'I_SHIFOUJT' INTEGER," + // 73: I_SHIFOUJT
                "'D_DUORENKJZ' INTEGER," + // 74: D_DUORENKJZ
                "'D_GONGSHUIHTNX' INTEGER," + // 75: D_GONGSHUIHTNX
                "'S_FANGDONGDH' TEXT," + // 76: S_FANGDONGDH
                "'S_FANGKEDH' TEXT," + // 77: S_FANGKEDH
                "'I_NIANLEIJ' INTEGER DEFAULT (0)," + // 78: I_NIANLEIJ
                "'I_HUANBIAO' INTEGER," + // 79: I_HUANBIAO
                "'I_QIANFEI' INTEGER);");
    }

    /**
     * Drops the underlying database table.
     */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'KG_BIAOKAXX'";
        db.execSQL(sql);
    }

    /**
     * @inheritdoc
     */
    @Override
    protected void bindValues(SQLiteStatement stmt, BIAOKAXX entity) {
        stmt.clearBindings();
        int id = entity.getID();
        if (id != -1) {
            stmt.bindLong(1, id);
        }

        stmt.bindString(2, entity.getS_CH());
        stmt.bindLong(3, entity.getI_CENEIXH());
        stmt.bindString(4, entity.getS_CID());
        stmt.bindString(5, entity.getS_KEHUBH());
        stmt.bindString(6, entity.getS_KeHuMC());
        stmt.bindString(7, entity.getS_ST());
        stmt.bindString(8, entity.getS_DiZhi());

        String S_LIANXIR = entity.getS_LIANXIR();
        if (S_LIANXIR != null) {
            stmt.bindString(9, S_LIANXIR);
        }

        String S_LIANXISJ = entity.getS_LIANXISJ();
        if (S_LIANXISJ != null) {
            stmt.bindString(10, S_LIANXISJ);
        }

        String S_LIANXIDH = entity.getS_LIANXIDH();
        if (S_LIANXIDH != null) {
            stmt.bindString(11, S_LIANXIDH);
        }

        String S_ShouFeiFS = entity.getS_ShouFeiFS();
        if (S_ShouFeiFS != null) {
            stmt.bindString(12, S_ShouFeiFS);
        }

        String S_YinHangMC = entity.getS_YinHangMC();
        if (S_YinHangMC != null) {
            stmt.bindString(13, S_YinHangMC);
        }
        stmt.bindString(14, entity.getS_JianHao());

        String S_JianHaoMC = entity.getS_JianHaoMC();
        if (S_JianHaoMC != null) {
            stmt.bindString(15, S_JianHaoMC);
        }

        int I_YongHuZT = entity.getI_YongHuZT();
        //if (I_YongHuZT != null) {
        stmt.bindLong(16, I_YongHuZT);
        //}

        long D_LIHU = entity.getD_LIHU();
        //if (D_LIHU != null) {
        stmt.bindLong(17, D_LIHU);
        //}

        String S_BiaoWei = entity.getS_BiaoWei();
        if (S_BiaoWei != null) {
            stmt.bindString(18, S_BiaoWei);
        }

        String S_SHUIBIAOGYH = entity.getS_SHUIBIAOGYH();
        if (S_SHUIBIAOGYH != null) {
            stmt.bindString(19, S_SHUIBIAOGYH);
        }

        String S_SHUIBIAOTXM = entity.getS_SHUIBIAOTXM();
        if (S_SHUIBIAOTXM != null) {
            stmt.bindString(20, S_SHUIBIAOTXM);
        }

        String S_KOUJINGMC = entity.getS_KOUJINGMC();
        if (S_KOUJINGMC != null) {
            stmt.bindString(21, S_KOUJINGMC);
        }

        int I_LIANGCHENG = entity.getI_LIANGCHENG();
        //if (I_LIANGCHENG != null) {
        stmt.bindLong(22, I_LIANGCHENG);
        //}

        String S_BIAOXING = entity.getS_BIAOXING();
        if (S_BIAOXING != null) {
            stmt.bindString(23, S_BIAOXING);
        }

        String S_SHUIBIAOCJ = entity.getS_SHUIBIAOCJ();
        if (S_SHUIBIAOCJ != null) {
            stmt.bindString(24, S_SHUIBIAOCJ);
        }

        int I_ShuiBiaoFL = entity.getI_ShuiBiaoFL();
        //if (I_ShuiBiaoFL != null) {
        stmt.bindLong(25, I_ShuiBiaoFL);
        //}

        String S_ShuiBiaoFLMC = entity.getS_ShuiBiaoFLMC();
        if (S_ShuiBiaoFLMC != null) {
            stmt.bindString(26, S_ShuiBiaoFLMC);
        }
        stmt.bindLong(27, entity.getI_SHUIBIAOBL());

        String S_KaiZhangFL = entity.getS_KaiZhangFL();
        if (S_KaiZhangFL != null) {
            stmt.bindString(28, S_KaiZhangFL);
        }
        stmt.bindLong(29, entity.getI_GONGNENGFL());

        int I_ShiFouJHYS = entity.getI_ShiFouJHYS();
        //if (I_ShiFouJHYS != null) {
        stmt.bindLong(30, I_ShiFouJHYS);
        //}

        int I_ShiFouShouLJF = entity.getI_ShiFouShouLJF();
        //if (I_ShiFouShouLJF != null) {
        stmt.bindLong(31, I_ShiFouShouLJF);
        //}

        double N_LaJiFeiXS = entity.getN_LaJiFeiXS();
        //if (N_LaJiFeiXS != null) {
        stmt.bindDouble(32, N_LaJiFeiXS);
        //}

        int I_ShiFouShouWYJ = entity.getI_ShiFouShouWYJ();
        //if (I_ShiFouShouWYJ != null) {
        stmt.bindLong(33, I_ShiFouShouWYJ);
        //}

        int I_ShiFouDEJJ = entity.getI_ShiFouDEJJ();
        //if (I_ShiFouDEJJ != null) {
        stmt.bindLong(34, I_ShiFouDEJJ);
        //}
        stmt.bindLong(35, entity.getI_DINGESL());

        String S_ZONGBIAOBH = entity.getS_ZONGBIAOBH();
        if (S_ZONGBIAOBH != null) {
            stmt.bindString(36, S_ZONGBIAOBH);
        }

        long D_ZHUANGBIAORQ = entity.getD_ZHUANGBIAORQ();
        //if (D_ZHUANGBIAORQ != null) {
        stmt.bindLong(37, D_ZHUANGBIAORQ);
        //}

        long D_HUANBIAORQ = entity.getD_HUANBIAORQ();
        //if (D_HUANBIAORQ != null) {
        stmt.bindLong(38, D_HUANBIAORQ);
        //}
        stmt.bindLong(39, entity.getI_XINBIAODM());

        int I_JIUBIAOCM = entity.getI_JIUBIAOCM();
        //if (I_JIUBIAOCM != null) {
        stmt.bindLong(40, I_JIUBIAOCM);
        //}

        String S_X1 = entity.getS_X1();
        if (S_X1 != null) {
            stmt.bindString(41, S_X1);
        }

        String S_Y1 = entity.getS_Y1();
        if (S_Y1 != null) {
            stmt.bindString(42, S_Y1);
        }

        String S_X = entity.getS_X();
        if (S_X != null) {
            stmt.bindString(43, S_X);
        }

        String S_Y = entity.getS_Y();
        if (S_Y != null) {
            stmt.bindString(44, S_Y);
        }

        int I_FENTANFS = entity.getI_FENTANFS();
        //if (I_FENTANFS != null) {
        stmt.bindLong(45, I_FENTANFS);
        //}

        int I_FENTANL = entity.getI_FENTANL();
        //if (I_FENTANL != null) {
        stmt.bindLong(46, I_FENTANL);
        //}

        double N_YuCunKYE = entity.getN_YuCunKYE();
        //if (N_YuCunKYE != null) {
        stmt.bindDouble(47, N_YuCunKYE);
        //}

        int I_QianFeiZBS = entity.getI_QianFeiZBS();
        //if (I_QianFeiZBS != null) {
        stmt.bindLong(48, I_QianFeiZBS);
        //}

        double N_QianFeiZJE = entity.getN_QianFeiZJE();
        //if (N_QianFeiZJE != null) {
        stmt.bindDouble(49, N_QianFeiZJE);
        //}

        String S_BEIZHU = entity.getS_BEIZHU();
        if (S_BEIZHU != null) {
            stmt.bindString(50, S_BEIZHU);
        }

        int I_SHUIBIAOZT = entity.getI_SHUIBIAOZT();
        //if (I_SHUIBIAOZT != null) {
        stmt.bindLong(51, I_SHUIBIAOZT);
        //}

        double N_RENKOUS = entity.getN_RENKOUS();
        //if (N_RENKOUS != null) {
        stmt.bindDouble(52, N_RENKOUS);
        //}

        int I_DIBAOYHSL = entity.getI_DIBAOYHSL();
        //if (I_DIBAOYHSL != null) {
        stmt.bindLong(53, I_DIBAOYHSL);
        //}

        int I_GONGCEYHSL = entity.getI_GONGCEYHSL();
        //if (I_GONGCEYHSL != null) {
        stmt.bindLong(54, I_GONGCEYHSL);
        //}

        double N_YONGSHUIZKL = entity.getN_YONGSHUIZKL();
        //if (N_YONGSHUIZKL != null) {
        stmt.bindDouble(55, N_YONGSHUIZKL);
        //}

        double N_PAISHUIZKL = entity.getN_PAISHUIZKL();
        //if (N_PAISHUIZKL != null) {
        stmt.bindDouble(56, N_PAISHUIZKL);
        //}

        double N_ZHEKOUL1 = entity.getN_ZHEKOUL1();
        //if (N_ZHEKOUL1 != null) {
        stmt.bindDouble(57, N_ZHEKOUL1);
        //}

        double N_ZHEKOUL2 = entity.getN_ZHEKOUL2();
        //if (N_ZHEKOUL2 != null) {
        stmt.bindDouble(58, N_ZHEKOUL2);
        //}

        double N_ZHEKOUL3 = entity.getN_ZHEKOUL3();
        //if (N_ZHEKOUL3 != null) {
        stmt.bindDouble(59, N_ZHEKOUL3);
        //}

        int I_ERCIGS = entity.getI_ERCIGS();
        //if (I_ERCIGS != null) {
        stmt.bindLong(60, I_ERCIGS);
        //}

        int I_DIANZIZD = entity.getI_DIANZIZD();
        //if (I_DIANZIZD != null) {
        stmt.bindLong(61, I_DIANZIZD);
        //}

        String S_XINGZHENGQ = entity.getS_XINGZHENGQ();
        if (S_XINGZHENGQ != null) {
            stmt.bindString(62, S_XINGZHENGQ);
        }

        String S_BIAOKAZT = entity.getS_BIAOKAZT();
        if (S_BIAOKAZT != null) {
            stmt.bindString(63, S_BIAOKAZT);
        }

        String S_SHESHUIID = entity.getS_SHESHUIID();
        if (S_SHESHUIID != null) {
            stmt.bindString(64, S_SHESHUIID);
        }

        double N_JIAGE = entity.getN_JIAGE();
        //if (N_JIAGE != null) {
        stmt.bindDouble(65, N_JIAGE);
        //}

        String S_SHUIBIAOLXBH = entity.getS_SHUIBIAOLXBH();
        if (S_SHUIBIAOLXBH != null) {
            stmt.bindString(66, S_SHUIBIAOLXBH);
        }

        double N_ZIZHUANGBKZXS = entity.getN_ZIZHUANGBKZXS();
        //if (N_ZIZHUANGBKZXS != null) {
        stmt.bindDouble(67, N_ZIZHUANGBKZXS);
        //}

        String S_SHUIBIAOZL = entity.getS_SHUIBIAOZL();
        if (S_SHUIBIAOZL != null) {
            stmt.bindString(68, S_SHUIBIAOZL);
        }

        String S_SHUIBIAOFL = entity.getS_SHUIBIAOFL();
        if (S_SHUIBIAOFL != null) {
            stmt.bindString(69, S_SHUIBIAOFL);
        }

        String S_YUANCHUANID = entity.getS_YUANCHUANID();
        if (S_YUANCHUANID != null) {
            stmt.bindString(70, S_YUANCHUANID);
        }

        String S_ZHONGDUANH = entity.getS_ZHONGDUANH();
        if (S_ZHONGDUANH != null) {
            stmt.bindString(71, S_ZHONGDUANH);
        }

        String S_YUANCHUANCJ = entity.getS_YUANCHUANCJ();
        if (S_YUANCHUANCJ != null) {
            stmt.bindString(72, S_YUANCHUANCJ);
        }

        String S_DUORENKFA = entity.getS_DUORENKFA();
        if (S_DUORENKFA != null) {
            stmt.bindString(73, S_DUORENKFA);
        }

        int I_SHIFOUJT = entity.getI_SHIFOUJT();
        //if (I_SHIFOUJT != null) {
        stmt.bindLong(74, I_SHIFOUJT);
        //}

        long D_DUORENKJZ = entity.getD_DUORENKJZ();
        //if (D_DUORENKJZ != null) {
        stmt.bindLong(75, D_DUORENKJZ);
        //}

        int D_GONGSHUIHTNX = entity.getD_GONGSHUIHTNX();
        //if (D_GONGSHUIHTNX != null) {
        stmt.bindLong(76, D_GONGSHUIHTNX);
        //}

        String S_FANGDONGDH = entity.getS_FANGDONGDH();
        if (S_FANGDONGDH != null) {
            stmt.bindString(77, S_FANGDONGDH);
        }

        String S_FANGKEDH = entity.getS_FANGKEDH();
        if (S_FANGKEDH != null) {
            stmt.bindString(78, S_FANGKEDH);
        }

        int I_NIANLEIJ = entity.getI_NIANLEIJ();
        //if (I_NIANLEIJ != null) {
        stmt.bindLong(79, I_NIANLEIJ);
        //}

        int I_HUANBIAO = entity.getI_HUANBIAO();
        //if (I_HUANBIAO != null) {
        stmt.bindLong(80, I_HUANBIAO);
        //}

        int I_QIANFEI = entity.getI_QIANFEI();
        //if (I_QIANFEI != null) {
        stmt.bindLong(81, I_QIANFEI);
        //}
    }

    /**
     * @inheritdoc
     */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.getLong(offset + 0);
    }

    /**
     * @inheritdoc
     */
    @Override
    public BIAOKAXX readEntity(Cursor cursor, int offset) {
        BIAOKAXX entity = new BIAOKAXX( //
                cursor.getInt(offset + 0), // ID
                cursor.getString(offset + 1), // S_CH
                cursor.getInt(offset + 2), // I_CENEIXH
                cursor.getString(offset + 3), // S_CID
                cursor.getString(offset + 4), // S_KEHUBH
                cursor.getString(offset + 5), // S_KeHuMC
                cursor.getString(offset + 6), // S_ST
                cursor.getString(offset + 7), // S_DiZhi
                cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // S_LIANXIR
                cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // S_LIANXISJ
                cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // S_LIANXIDH
                cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // S_ShouFeiFS
                cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // S_YinHangMC
                cursor.getString(offset + 13), // S_JianHao
                cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // S_JianHaoMC
                cursor.isNull(offset + 15) ? 0 : cursor.getInt(offset + 15), // I_YongHuZT
                cursor.isNull(offset + 16) ? 0 : cursor.getLong(offset + 16), // D_LIHU
                cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // S_BiaoWei
                cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // S_SHUIBIAOGYH
                cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // S_SHUIBIAOTXM
                cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // S_KOUJINGMC
                cursor.isNull(offset + 21) ? 0 : cursor.getInt(offset + 21), // I_LIANGCHENG
                cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // S_BIAOXING
                cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // S_SHUIBIAOCJ
                cursor.isNull(offset + 24) ? 0 : cursor.getInt(offset + 24), // I_ShuiBiaoFL
                cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // S_ShuiBiaoFLMC
                cursor.getInt(offset + 26), // I_SHUIBIAOBL
                cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // S_KaiZhangFL
                cursor.getInt(offset + 28), // I_GONGNENGFL
                cursor.isNull(offset + 29) ? 0 : cursor.getInt(offset + 29), // I_ShiFouJHYS
                cursor.isNull(offset + 30) ? 0 : cursor.getInt(offset + 30), // I_ShiFouShouLJF
                cursor.isNull(offset + 31) ? 0 : cursor.getDouble(offset + 31), // N_LaJiFeiXS
                cursor.isNull(offset + 32) ? 0 : cursor.getInt(offset + 32), // I_ShiFouShouWYJ
                cursor.isNull(offset + 33) ? 0 : cursor.getInt(offset + 33), // I_ShiFouDEJJ
                cursor.getInt(offset + 34), // I_DINGESL
                cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // S_ZONGBIAOBH
                cursor.isNull(offset + 36) ? 0 : cursor.getLong(offset + 36), // D_ZHUANGBIAORQ
                cursor.isNull(offset + 37) ? 0 : cursor.getLong(offset + 37), // D_HUANBIAORQ
                cursor.getInt(offset + 38), // I_XINBIAODM
                cursor.isNull(offset + 39) ? 0 : cursor.getInt(offset + 39), // I_JIUBIAOCM
                cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // S_X1
                cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // S_Y1
                cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // S_X
                cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // S_Y
                cursor.isNull(offset + 44) ? 0 : cursor.getInt(offset + 44), // I_FENTANFS
                cursor.isNull(offset + 45) ? 0 : cursor.getInt(offset + 45), // I_FENTANL
                cursor.isNull(offset + 46) ? 0 : cursor.getDouble(offset + 46), // N_YuCunKYE
                cursor.isNull(offset + 47) ? 0 : cursor.getInt(offset + 47), // I_QianFeiZBS
                cursor.isNull(offset + 48) ? 0 : cursor.getDouble(offset + 48), // N_QianFeiZJE
                cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // S_BEIZHU
                cursor.isNull(offset + 50) ? 0 : cursor.getInt(offset + 50), // I_SHUIBIAOZT
                cursor.isNull(offset + 51) ? 0 : cursor.getDouble(offset + 51), // N_RENKOUS
                cursor.isNull(offset + 52) ? 0 : cursor.getInt(offset + 52), // I_DIBAOYHSL
                cursor.isNull(offset + 53) ? 0 : cursor.getInt(offset + 53), // I_GONGCEYHSL
                cursor.isNull(offset + 54) ? 0 : cursor.getDouble(offset + 54), // N_YONGSHUIZKL
                cursor.isNull(offset + 55) ? 0 : cursor.getDouble(offset + 55), // N_PAISHUIZKL
                cursor.isNull(offset + 56) ? 0 : cursor.getDouble(offset + 56), // N_ZHEKOUL1
                cursor.isNull(offset + 57) ? 0 : cursor.getDouble(offset + 57), // N_ZHEKOUL2
                cursor.isNull(offset + 58) ? 0 : cursor.getDouble(offset + 58), // N_ZHEKOUL3
                cursor.isNull(offset + 59) ? 0 : cursor.getInt(offset + 59), // I_ERCIGS
                cursor.isNull(offset + 60) ? 0 : cursor.getInt(offset + 60), // I_DIANZIZD
                cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // S_XINGZHENGQ
                cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // S_BIAOKAZT
                cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63), // S_SHESHUIID
                cursor.isNull(offset + 64) ? 0 : cursor.getDouble(offset + 64), // N_JIAGE
                cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65), // S_SHUIBIAOLXBH
                cursor.isNull(offset + 66) ? 0 : cursor.getDouble(offset + 66), // N_ZIZHUANGBKZXS
                cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67), // S_SHUIBIAOZL
                cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68), // S_SHUIBIAOFL
                cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69), // S_YUANCHUANID
                cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70), // S_ZHONGDUANH
                cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71), // S_YUANCHUANCJ
                cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72), // S_DUORENKFA
                cursor.isNull(offset + 73) ? 0 : cursor.getInt(offset + 73), // I_SHIFOUJT
                cursor.isNull(offset + 74) ? 0 : cursor.getLong(offset + 74), // D_DUORENKJZ
                cursor.isNull(offset + 75) ? 0 : cursor.getInt(offset + 75), // D_GONGSHUIHTNX
                cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76), // S_FANGDONGDH
                cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77), // S_FANGKEDH
                cursor.isNull(offset + 78) ? 0 : cursor.getInt(offset + 78), // I_NIANLEIJ
                cursor.isNull(offset + 79) ? 0 : cursor.getInt(offset + 79), // I_HUANBIAO
                cursor.isNull(offset + 80) ? 0 : cursor.getInt(offset + 80) // I_QIANFEI
        );
        return entity;
    }

    /**
     * @inheritdoc
     */
    @Override
    public void readEntity(Cursor cursor, BIAOKAXX entity, int offset) {
        entity.setID(cursor.getInt(offset + 0));
        entity.setS_CH(cursor.getString(offset + 1));
        entity.setI_CENEIXH(cursor.getInt(offset + 2));
        entity.setS_CID(cursor.getString(offset + 3));
        entity.setS_KEHUBH(cursor.getString(offset + 4));
        entity.setS_KeHuMC(cursor.getString(offset + 5));
        entity.setS_ST(cursor.getString(offset + 6));
        entity.setS_DiZhi(cursor.getString(offset + 7));
        entity.setS_LIANXIR(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setS_LIANXISJ(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setS_LIANXIDH(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setS_ShouFeiFS(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setS_YinHangMC(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setS_JianHao(cursor.getString(offset + 13));
        entity.setS_JianHaoMC(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setI_YongHuZT(cursor.isNull(offset + 15) ? 0 : cursor.getInt(offset + 15));
        entity.setD_LIHU(cursor.isNull(offset + 16) ? 0 : cursor.getLong(offset + 16));
        entity.setS_BiaoWei(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setS_SHUIBIAOGYH(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setS_SHUIBIAOTXM(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setS_KOUJINGMC(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setI_LIANGCHENG(cursor.isNull(offset + 21) ? 0 : cursor.getInt(offset + 21));
        entity.setS_BIAOXING(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setS_SHUIBIAOCJ(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setI_ShuiBiaoFL(cursor.isNull(offset + 24) ? 0 : cursor.getInt(offset + 24));
        entity.setS_ShuiBiaoFLMC(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setI_SHUIBIAOBL(cursor.getInt(offset + 26));
        entity.setS_KaiZhangFL(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setI_GONGNENGFL(cursor.getInt(offset + 28));
        entity.setI_ShiFouJHYS(cursor.isNull(offset + 29) ? 0 : cursor.getInt(offset + 29));
        entity.setI_ShiFouShouLJF(cursor.isNull(offset + 30) ? 0 : cursor.getInt(offset + 30));
        entity.setN_LaJiFeiXS(cursor.isNull(offset + 31) ? 0 : cursor.getDouble(offset + 31));
        entity.setI_ShiFouShouWYJ(cursor.isNull(offset + 32) ? 0 : cursor.getInt(offset + 32));
        entity.setI_ShiFouDEJJ(cursor.isNull(offset + 33) ? 0 : cursor.getInt(offset + 33));
        entity.setI_DINGESL(cursor.getInt(offset + 34));
        entity.setS_ZONGBIAOBH(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setD_ZHUANGBIAORQ(cursor.isNull(offset + 36) ? 0 : cursor.getLong(offset + 36));
        entity.setD_HUANBIAORQ(cursor.isNull(offset + 37) ? 0 : cursor.getLong(offset + 37));
        entity.setI_XINBIAODM(cursor.getInt(offset + 38));
        entity.setI_JIUBIAOCM(cursor.isNull(offset + 39) ? 0 : cursor.getInt(offset + 39));
        entity.setS_X1(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setS_Y1(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setS_X(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setS_Y(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setI_FENTANFS(cursor.isNull(offset + 44) ? 0 : cursor.getInt(offset + 44));
        entity.setI_FENTANL(cursor.isNull(offset + 45) ? 0 : cursor.getInt(offset + 45));
        entity.setN_YuCunKYE(cursor.isNull(offset + 46) ? 0 : cursor.getDouble(offset + 46));
        entity.setI_QianFeiZBS(cursor.isNull(offset + 47) ? 0 : cursor.getInt(offset + 47));
        entity.setN_QianFeiZJE(cursor.isNull(offset + 48) ? 0 : cursor.getDouble(offset + 48));
        entity.setS_BEIZHU(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setI_SHUIBIAOZT(cursor.isNull(offset + 50) ? 0 : cursor.getInt(offset + 50));
        entity.setN_RENKOUS(cursor.isNull(offset + 51) ? 0 : cursor.getDouble(offset + 51));
        entity.setI_DIBAOYHSL(cursor.isNull(offset + 52) ? 0 : cursor.getInt(offset + 52));
        entity.setI_GONGCEYHSL(cursor.isNull(offset + 53) ? 0 : cursor.getInt(offset + 53));
        entity.setN_YONGSHUIZKL(cursor.isNull(offset + 54) ? 0 : cursor.getDouble(offset + 54));
        entity.setN_PAISHUIZKL(cursor.isNull(offset + 55) ? 0 : cursor.getDouble(offset + 55));
        entity.setN_ZHEKOUL1(cursor.isNull(offset + 56) ? 0 : cursor.getDouble(offset + 56));
        entity.setN_ZHEKOUL2(cursor.isNull(offset + 57) ? 0 : cursor.getDouble(offset + 57));
        entity.setN_ZHEKOUL3(cursor.isNull(offset + 58) ? 0 : cursor.getDouble(offset + 58));
        entity.setI_ERCIGS(cursor.isNull(offset + 59) ? 0 : cursor.getInt(offset + 59));
        entity.setI_DIANZIZD(cursor.isNull(offset + 60) ? 0 : cursor.getInt(offset + 60));
        entity.setS_XINGZHENGQ(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setS_BIAOKAZT(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setS_SHESHUIID(cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63));
        entity.setN_JIAGE(cursor.isNull(offset + 64) ? 0 : cursor.getDouble(offset + 64));
        entity.setS_SHUIBIAOLXBH(cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65));
        entity.setN_ZIZHUANGBKZXS(cursor.isNull(offset + 66) ? 0 : cursor.getDouble(offset + 66));
        entity.setS_SHUIBIAOZL(cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67));
        entity.setS_SHUIBIAOFL(cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68));
        entity.setS_YUANCHUANID(cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69));
        entity.setS_ZHONGDUANH(cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70));
        entity.setS_YUANCHUANCJ(cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71));
        entity.setS_DUORENKFA(cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72));
        entity.setI_SHIFOUJT(cursor.isNull(offset + 73) ? 0 : cursor.getInt(offset + 73));
        entity.setD_DUORENKJZ(cursor.isNull(offset + 74) ? 0 : cursor.getLong(offset + 74));
        entity.setD_GONGSHUIHTNX(cursor.isNull(offset + 75) ? 0 : cursor.getInt(offset + 75));
        entity.setS_FANGDONGDH(cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76));
        entity.setS_FANGKEDH(cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77));
        entity.setI_NIANLEIJ(cursor.isNull(offset + 78) ? 0 : cursor.getInt(offset + 78));
        entity.setI_HUANBIAO(cursor.isNull(offset + 79) ? 0 : cursor.getInt(offset + 79));
        entity.setI_QIANFEI(cursor.isNull(offset + 80) ? 0 : cursor.getInt(offset + 80));
    }

    /**
     * @inheritdoc
     */
    @Override
    protected Long updateKeyAfterInsert(BIAOKAXX entity, long rowId) {
        // Unsupported or missing PK type
        return rowId;
    }

    /**
     * @inheritdoc
     */
    @Override
    public Long getKey(BIAOKAXX entity) {
        if (entity != null) {
            return (long) entity.getID();
        } else {
            return null;
        }
    }

    /**
     * @inheritdoc
     */
    @Override
    protected boolean isEntityUpdateable() {
        return true;
    }


    /**
     * 根据任务编号删除不存在renWuBHAll中的表卡信息
     */
    public void deleteBiaoKaXXs(String ch) {
        if (ch == null) {
            return;
        }

        QueryBuilder<BIAOKAXX> qb = queryBuilder();
        DeleteQuery<BIAOKAXX> bd = qb.where(Properties.S_CH.eq(ch)).buildDelete();
        bd.executeDeleteWithoutDetachingEntities();
    }

    /**
     * 根据册本号删除表卡
     */
    public void deleteBiaoKaXXs(List<String> chs) {
        if (chs == null || chs.size() == 0) {
            return;
        }

        QueryBuilder<BIAOKAXX> qb = queryBuilder();
        DeleteQuery<BIAOKAXX> bd = qb.where(Properties.S_CH.in(chs)).buildDelete();
        bd.executeDeleteWithoutDetachingEntities();
    }

    /**
     * 根据组编号删除不存在renWuBHAll中的表卡信息
     */
    public void deleteBiaoKaXXs(int groupId) {
        if (groupId <= 0) {
            return;
        }

        QueryBuilder<BIAOKAXX> qb = queryBuilder();
        DeleteQuery<BIAOKAXX> bd = qb.buildDelete();
        bd.executeDeleteWithoutDetachingEntities();
    }

    public void deleteBiaoKaXX(String cid) {
        if (cid == null) {
            return;
        }

        QueryBuilder<BIAOKAXX> qb = queryBuilder();
        DeleteQuery<BIAOKAXX> bd = qb.where(Properties.S_CID.eq(cid)).buildDelete();
        bd.executeDeleteWithoutDetachingEntities();
    }

    /**
     * 用Ch查询表卡
     */
    public int getBiaoKaCount(String s_ch) {
        int total = 0;
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CH.eq(s_ch));
        total = (int) qb.count();
        return total;
    }

    /**
     * 上报延迟，更改表号，口径，换表日期数�?
     *
     * @param cid        用户�?
     * @param kouJing    口径
     * @param biaoHao    表号
     * @param huanBiaoRQ 换表日期
     * @return boolean
     */
    public boolean updateBiaoKaXXYanChiDialog(String cid, String kouJing,
                                              String biaoHao, long huanBiaoRQ) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CH.eq(cid));
        BIAOKAXX biaokaxx = (BIAOKAXX) qb.list().get(0);
        biaokaxx.setS_KOUJINGMC(kouJing);
        biaokaxx.setS_SHUIBIAOGYH(biaoHao);
        biaokaxx.setD_HUANBIAORQ(huanBiaoRQ);

        if (this.insertOrReplace(biaokaxx) == 0) {
            return false;
        } else {
            return true;
        }
    }

    /**
     * 插入数据
     */
    public boolean insertData(BIAOKAXX biaoKaXX) {
        if (biaoKaXX == null) {
            return false;
        }

        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CH.eq(biaoKaXX.getS_CH()),
                Properties.S_CID.eq(biaoKaXX.getS_CID()));
        if ((qb.list() != null) && (qb.list().size() > 0)) {
            BIAOKAXX bkxx = (BIAOKAXX) qb.list().get(0);
            biaoKaXX.setID(bkxx.getID());
        } else {
            biaoKaXX.setID(-1);
        }

        if (this.insertOrReplace(biaoKaXX) == 0) {
            return false;
        } else {
            return true;
        }
    }

    /**
     * 修改数据
     */
    public boolean updateSingle(BIAOKAXX biaoKaXX) {
        if (biaoKaXX == null) {
            return false;
        }

        update(biaoKaXX);
        return true;
    }

    public boolean updateBiaoKaXXList(List<BIAOKAXX> biaoKaXXList) {
        if (biaoKaXXList == null) {
            return false;
        }

        updateInTx(biaoKaXXList);
        return true;
    }

    /**
     * 修改电话数据
     */
    public boolean updateBiaoKaXXPhoneNum(String CID, String phoneNum,
                                          String type) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CH.eq(CID));
        BIAOKAXX biaokaxx = (BIAOKAXX) qb.list().get(0);
        biaokaxx.setS_LIANXIDH(phoneNum);
        biaokaxx.setS_SHUIBIAOGYH(type);

        if (this.insertOrReplace(biaokaxx) == 0) {
            return false;
        } else {
            return true;
        }
    }

    public void insertOrUpdate(List<BIAOKAXX> biaoKaXXList) {
        if ((biaoKaXXList == null) || (biaoKaXXList.size() <= 0)) {
            return;
        }

        List<String> cHList = new ArrayList<>();
        boolean found = false;
        for (BIAOKAXX biaokaxx : biaoKaXXList) {
            found = false;
            for (String ch : cHList) {
                if (ch.equals(biaokaxx.getS_CH())) {
                    found = true;
                    break;
                }
            }

            if (!found) {
                cHList.add(biaokaxx.getS_CH());
            }
        }

        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CH.in(cHList));
        List<BIAOKAXX> biaokaxxes = qb.list();
        if (biaokaxxes == null) {
            for (BIAOKAXX biaokaxx : biaoKaXXList) {
                biaokaxx.setID(-1);
            }
        } else {
            for (BIAOKAXX biaokaxx1 : biaoKaXXList) {
                biaokaxx1.setID(-1);
                for (BIAOKAXX biaokaxx2 : biaokaxxes) {
                    if (biaokaxx1.getS_CH().equals(biaokaxx2.getS_CH())
                            && biaokaxx1.getS_CID().equals(biaokaxx2.getS_CID())) {
                        biaokaxx1.setID(biaokaxx2.getID());
                        break;
                    }
                }
            }
        }

        insertOrReplaceInTx(biaoKaXXList);
    }

    /**
     * 根据S_CID获取本地数据对应的单条表卡信
     *
     * @param cId 用户
     * @return BiaoKaXX实体
     */
    public BIAOKAXX get(String cId) {
        if (cId == null) {
            return null;
        }

        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CID.eq(cId));
        List<BIAOKAXX> biaokaxxList = qb.list();
        if ((biaokaxxList == null) || (biaokaxxList.size() <= 0)) {
            return null;
        }

        return biaokaxxList.get(0);
    }

    /**
     * 根据taskId获取本地数据对应的表卡数
     *
     * @param taskId 任务号
     * @return count
     */
    public long getCountByTaskId(int taskId) {
        QueryBuilder qb = this.queryBuilder();
        String sql = String.format("S_CID in (select %s from %s where %s = \"%s\")",
                JiChaSJDao.Properties.S_CID.columnName, JiChaSJDao.TABLENAME,
                JiChaSJDao.Properties.I_RenWuBH.columnName, taskId);
        qb.where(new WhereCondition.StringCondition(sql));
        return qb.count();
    }

    /**
     * 获取该表所有的表卡信息
     *
     * @return List<BiaoKaXX>
     */
    public List<BIAOKAXX> getBiaoKaXX() {
        return this.loadAll();
    }

    /**
     * 根据ch查询ch下所有的表卡信息
     *
     * @param ch 册本
     * @return List<BiaoKaXX>
     */
    public List<BIAOKAXX> getBiaoKaXXList(String ch) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CH.eq(ch)).orderAsc(Properties.I_CENEIXH);
        return qb.list();
    }

    /**
     * 根据I_GroupId查询所有的表卡信息
     *
     * @param groupId
     * @return List<BiaoKaXX>
     */
    public List<BIAOKAXX> getBiaoKaXXListByGroupId(int groupId) {
        QueryBuilder qb = this.queryBuilder();
        qb.orderAsc(Properties.I_CENEIXH);
        return qb.list();
    }

    /**
     * @return List<BiaoKaXX>
     */
    public List<BIAOKAXX> getBiaoKaXXTemporaryList(String account) {
        if (account == null) {
            return null;
        }

//        String sql = String.format("S_CID in (select %s from %s where %s = \"%s\" and %s = -1)",
//                ChaoBiaoSJDao.Properties.S_CID.columnName, ChaoBiaoSJDao.TABLENAME,
//                ChaoBiaoSJDao.Properties.S_CHAOBIAOY.columnName, account,
//                ChaoBiaoSJDao.Properties.I_RenWuBH.columnName);
        QueryBuilder qb = this.queryBuilder();
        qb.orderAsc(Properties.I_CENEIXH);
        return qb.list();
    }

    public void deleteTemporaryBiaoKaXX(String account) {
        if (account == null) {
            return;
        }

//        String sql = String.format("S_CID in (select %s from %s where %s = \"%s\" and %s = -1)",
//                ChaoBiaoSJDao.Properties.S_CID.columnName, ChaoBiaoSJDao.TABLENAME,
//                ChaoBiaoSJDao.Properties.S_CHAOBIAOY.columnName, account,
//                ChaoBiaoSJDao.Properties.I_RenWuBH.columnName);
        QueryBuilder qb = this.queryBuilder();
        //qb.where(new WhereCondition.StringCondition(sql));
        qb.where(Properties.S_CH.like("T%")); // -1: 临时册
        qb.buildDelete().executeDeleteWithoutDetachingEntities();
    }

    /**
     * 组合查询
     *
     * @param swhere
     * @param GuBiaoLXCS
     * @param LiangGaoLDLXCS
     * @return
     */
    public List<BIAOKAXX> QueryBiaoKaxxsWhere(String swhere, int GuBiaoLXCS,
                                              int LiangGaoLDLXCS) {
        // S_CH,BK.S_CID,S_KEHUMC,S_DIZHI,S_JIANHAO,S_KOUJINGMC,I_QIANFEIZBS,N_QIANFEIZJE,D_HUANBIAORQ,LGZTLXCS.LIANGGAOLDLXCS,CBZTLXCS.CHAOBIAOZTLXCS
        String sql = "SELECT BK.* "
                + "FROM KG_BIAOKAXX BK "
                + "LEFT JOIN "
                + "( "
                + "SELECT S_CID,SUM(CASE WHEN I_LIANGGAOLDYYBM=0 THEN 0 ELSE 1 END) LIANGGAOLDLXCS "
                + "FROM CB_ZhuangTaiLXCS "
                + "WHERE RANKNUM<="
                + LiangGaoLDLXCS
                + " GROUP BY S_CID "
                + ") LGZTLXCS ON trim(BK.S_CID) = LGZTLXCS.S_CID "
                + "LEFT JOIN "
                + "( "
                + "SELECT S_CID,SUM(CASE WHEN CBZT.I_ZHUANGTAIFLBM IN(3,4) THEN 1 ELSE 0 END) CHAOBIAOZTLXCS "
                + "FROM CB_ZhuangTaiLXCS ZTLXS "
                + "LEFT JOIN CB_CHAOBIAOZT CBZT ON ZTLXS.[I_CHAOBIAOZTBM] = CBZT.I_ZHUANGTAIBM "
                + "WHERE RANKNUM<=" + GuBiaoLXCS + " GROUP BY S_CID "
                + ") CBZTLXCS ON trim(BK.S_CID) = CBZTLXCS.S_CID  WHERE 1=1 ";

        if (GuBiaoLXCS > 0)
            sql = sql + " AND CBZTLXCS.CHAOBIAOZTLXCS = " + GuBiaoLXCS;
        if (LiangGaoLDLXCS > 0)
            sql = sql + " AND LGZTLXCS.LIANGGAOLDLXCS = " + LiangGaoLDLXCS;

        sql = sql + swhere;
        List<BIAOKAXX> list = new ArrayList<BIAOKAXX>();
        Cursor cursor = session.getDatabase().rawQuery(sql, null);
        BIAOKAXX biaoKaXX = new BIAOKAXX();
        if (cursor != null) {
            while (cursor.moveToNext()) {
//                list.add((BIAOKAXX)cursor);
                biaoKaXX = analyze(cursor);
                list.add(biaoKaXX);
            }
            cursor.close();
        }


        return list;
    }

    public List<BIAOKAXX> QueryBiaoKaxxsWhere(String key, String ChaoBiaoRWCHAll) {
        String[] str = ChaoBiaoRWCHAll.split(",");
        QueryBuilder qb = this.queryBuilder();
        if (ChaoBiaoRWCHAll != null && !ChaoBiaoRWCHAll.equals("")) {
            qb.where(Properties.S_CID.in((Object[]) str));
            qb.or(Properties.S_KeHuMC.like(key), Properties.S_DiZhi.like(key));
        } else {
            qb.whereOr(Properties.S_KeHuMC.like(key), Properties.S_DiZhi.like(key));
        }
        List<BIAOKAXX> list = qb.list();

        return list;
    }


    /**
     * 组合查询
     * <p>
     * info.get_koujinmax()  = -1 口径上限未输入
     * info.get_qianfeibs() = -1  欠费笔数未输入
     * info.get_qianfeije() = -1  欠费金额未输入
     * info.get_huanbiaorq() = 0 换表日期未输入
     * info.get_koujinmin() > 999999998 口径下限未输入
     *
     * @return
     */
    public List<BIAOKAXX> getCombinedQuery(ConditionInfo info) {
        if ((info == null) || (info.getCeBenList() == null)) {
            return null;
        }

        QueryBuilder qb = this.queryBuilder();
        if (!TextUtils.isEmpty(info.get_cebenhao())) {
            qb.where(Properties.S_CH.like("%" + info.get_cebenhao() + "%"));
        }

        if (!TextUtils.isEmpty(info.get_cid())) {
            qb.where(Properties.S_CID.like("%" + info.get_cid() + "%"));
        }

        if (!TextUtils.isEmpty(info.get_huming())) {
            qb.where(Properties.S_KeHuMC.like("%" + info.get_huming() + "%"));
        }

        if (!TextUtils.isEmpty(info.get_dizhi())) {
            qb.where(Properties.S_DiZhi.like("%" + info.get_dizhi() + "%"));
        }

        if (!TextUtils.isEmpty(info.get_lianxidh())) {
            qb.where(Properties.S_LIANXIDH.like("%" + info.get_lianxidh() + "%"));
        }

        if (!TextUtils.isEmpty(info.get_jianhao())) {
            qb.where(Properties.S_JianHao.like("%" + info.get_jianhao() + "%"));
        }

        if (!TextUtils.isEmpty(info.get_biaohao())) {
            qb.where(Properties.S_SHUIBIAOGYH.like("%" + info.get_biaohao() + "%"));
        }

        if (info.get_qianfeibs() != -1) {
            qb.where(Properties.I_QianFeiZBS.eq(info.get_qianfeibs()));
        }

        if (Math.abs(info.get_qianfeije()) + 1 < 1e-10) {
            qb.where(Properties.N_QianFeiZJE.gt(info.get_qianfeije()));
        }

        if (info.get_huanbiaorq() != 0) {
            qb.where(Properties.I_QianFeiZBS.eq(info.get_huanbiaorq()));
        }

        qb.orderAsc(Properties.S_CH, Properties.I_CENEIXH);
        qb.limit(100);
        List<BIAOKAXX> list = qb.list();
        return list;
    }


    /**
     * 查询表卡中不存在的CID编号
     *
     * @param CIDS_before
     * @return
     */
    public String getBiaoKaXXCIDS(String CIDS_before) {

        String[] strs = CIDS_before.split(",");

        StringBuilder cids = new StringBuilder();

        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CID.eq(CIDS_before));
        for (String cid : strs) {
            if (qb.count() == 0) {
                cids.append(cid);
                cids.append(",");
            }
        }

        String cids_later = cids.toString();
        if (!cids_later.equals("")) {
            return cids_later.substring(0, cids.length() - 1).toString();
        }
        return cids_later;
    }

    /**
     * 查询表中的CID
     *
     * @return
     */

    public List<String> getBiaoKaXXCIDS(String str, String s_ch) {
        if ((str == null) || (s_ch == null)) {
            return null;
        }

        QueryBuilder<BIAOKAXX> qb = this.queryBuilder();
        qb.whereOr(Properties.S_DiZhi.like(str),
                Properties.S_KEHUBH.like(str),
                Properties.S_KeHuMC.like(str),
                Properties.S_LIANXIDH.like(str),
                Properties.S_LIANXISJ.like(str),
                Properties.S_CID.like(str),
                Properties.S_JianHao.like(str),
                Properties.S_SHUIBIAOGYH.like(str));
        if (!s_ch.trim().equals("")) {
            qb.where(Properties.S_CH.eq(s_ch));
        }
        qb.limit(100);
        List<BIAOKAXX> list = qb.list();
        List<String> cids = new ArrayList<>();
        if (list != null) {
            for (int i = 0; i < list.size(); i++) {
                cids.add(list.get(i).getS_CID());
            }
        }

        return cids;
    }


    /**
     * 查询表中的CID
     *
     * @return
     */

    public List<String> getBiaoKaXXCIDS(String str, int groupId) {
        if ((str == null) || (groupId <= 0)) {
            return null;
        }

        QueryBuilder qb = this.queryBuilder();
        qb.whereOr(Properties.S_DiZhi.like(str),
                Properties.S_KEHUBH.like(str),
                Properties.S_KeHuMC.like(str),
                Properties.S_LIANXIDH.like(str),
                Properties.S_LIANXISJ.like(str),
                Properties.S_CID.like(str),
                Properties.S_JianHao.like(str),
                Properties.S_SHUIBIAOGYH.like(str));
        qb.limit(100);
        List<BIAOKAXX> list = qb.list();
        List<String> cids = new ArrayList<>();
        if (list != null) {
            for (int i = 0; i < list.size(); i++) {
                cids.add(list.get(i).getS_CID());
            }
        }

        return cids;
    }

    /**
     * @return List<BiaoKaXX>
     */
    public List<BIAOKAXX> getBiaoKaXXWaiFuCBSJList(String account) {
        String sql = String.format("S_CID in (select %s from %s where %s = \"%s\")",
                WaiFuCBSJDao.Properties.S_CID.columnName, WaiFuCBSJDao.TABLENAME,
                WaiFuCBSJDao.Properties.S_CHAOBIAOY.columnName, account);

        QueryBuilder qb = this.queryBuilder();
        qb.where(new WhereCondition.StringCondition(sql)).orderAsc(Properties.I_CENEIXH);
        return qb.list();
    }

    /**
     * @return
     */

    public List<String> getBiaoKaXXByKeyWaiFu(String str) {
        if ((str == null)) {
            return null;
        }

        QueryBuilder qb = this.queryBuilder();
        qb.whereOr(Properties.S_DiZhi.like(str),
                Properties.S_KEHUBH.like(str),
                Properties.S_KeHuMC.like(str),
                Properties.S_LIANXIDH.like(str),
                Properties.S_LIANXISJ.like(str),
                Properties.S_CID.like(str),
                Properties.S_JianHao.like(str),
                Properties.S_SHUIBIAOGYH.like(str));
        qb.limit(100);
        List<BIAOKAXX> list = qb.list();
        List<String> cids = new ArrayList<>();
        if (list != null) {
            for (int i = 0; i < list.size(); i++) {
                cids.add(list.get(i).getS_CID());
            }
        }
        return cids;
    }


    /**
     * 无条件获取所有本地的表卡信息
     *
     * @return
     */
    public List<BIAOKAXX> getAllBiaoKaXXList() {
        return this.loadAll();
    }

    /**
     * 通过taskId获取表卡信息
     *
     * @return
     */
    public List<BIAOKAXX> getBiaoKaXXListByTaskId(int taskId) {
        String sql = String.format("S_CID in (select %s from %s where %s = \"%s\")",
                JiChaSJDao.Properties.S_CID.columnName, JiChaSJDao.TABLENAME,
                JiChaSJDao.Properties.I_RenWuBH.columnName, taskId);

        QueryBuilder qb = this.queryBuilder();
        qb.where(new WhereCondition.StringCondition(sql)).orderAsc(Properties.I_CENEIXH);
        return qb.list();
    }

    /**
     * 通过taskId获取表卡信息
     *
     * @return
     */
    public List<BIAOKAXX> getDelayBiaoKaXXList(String account) {
        String sql = String.format("S_CID in (select %s from %s where %s = \"%s\")",
                YanChiBiaoDao.Properties.S_CID.columnName, YanChiBiaoDao.TABLENAME,
                YanChiBiaoDao.Properties.S_CHAOBIAOY.columnName, account);

        QueryBuilder<BIAOKAXX> qb = this.queryBuilder();
        qb.where(new WhereCondition.StringCondition(sql)).orderAsc(Properties.I_CENEIXH);
        return qb.list();
    }

    private BIAOKAXX analyze(Cursor cursor) {

        BIAOKAXX biaoKaXX = new BIAOKAXX();

        biaoKaXX.setS_CH(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_CH)));
        biaoKaXX.setI_CENEIXH(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_CENEIXH)));
        biaoKaXX.setS_CID(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_CID)));
        biaoKaXX.setS_KEHUBH(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_KEHUBH)));
        biaoKaXX.setS_KeHuMC(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_KEHUMC)));
        biaoKaXX.setS_ST(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_ST)));
        biaoKaXX.setS_DiZhi(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_DIZHI)));
        biaoKaXX.setS_LIANXIR(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_LIANXIR)));
        biaoKaXX.setS_LIANXIDH(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_LIANXIDH)));
        biaoKaXX.setS_LIANXISJ(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_LIANXISJ)));
        biaoKaXX.setS_ShouFeiFS(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_SHOUFEIFS)));
        biaoKaXX.setS_YinHangMC(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_YINHANGMC)));
        biaoKaXX.setS_JianHao(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_JIANHAO)));
        biaoKaXX.setS_JianHaoMC(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_JIANHAOMC)));
        biaoKaXX.setI_YongHuZT(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_YONGHUZT)));
        biaoKaXX.setD_LIHU(cursor.getLong(cursor
                .getColumnIndex(BiaoKaXXColumns.D_LIHURQ)));
        biaoKaXX.setS_BiaoWei(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_BIAOWEI)));
        biaoKaXX.setS_SHUIBIAOGYH(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_SHUIBIAOGYH)));
        biaoKaXX.setS_SHUIBIAOTXM(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_SHUIBIAOTXM)));
        biaoKaXX.setS_KOUJINGMC(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_KOUJINGMC)));
        biaoKaXX.setI_LIANGCHENG(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_LIANGCHENG)));
        biaoKaXX.setS_BIAOXING(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_BIAOXING)));
        biaoKaXX.setS_SHUIBIAOCJ(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_SHUIBIAOCJ)));
        biaoKaXX.setI_ShuiBiaoFL(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_SHUIBIAOFL)));
        biaoKaXX.setS_ShuiBiaoFLMC(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_SHUIBIAOFLMC)));
        biaoKaXX.setI_SHUIBIAOBL(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_SHUIBIAOBL)));
        biaoKaXX.setS_KaiZhangFL(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_KAIZHANGFL)));
        biaoKaXX.setI_GONGNENGFL(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_GONGNENGFL)));
        biaoKaXX.setI_ShiFouJHYS(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_SHIFOUJHYS)));
        biaoKaXX.setI_ShiFouShouLJF(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_SHIFOUSHOULJF)));
        biaoKaXX.setN_LaJiFeiXS(cursor.getDouble(cursor
                .getColumnIndex(BiaoKaXXColumns.N_LAJIFEIXS)));
        biaoKaXX.setI_ShiFouShouWYJ(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_SHIFOUSHOUWYJ)));
        biaoKaXX.setI_ShiFouDEJJ(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_SHIFOUDEJJ)));
        biaoKaXX.setI_DINGESL(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_DINGESL)));
        biaoKaXX.setS_ZONGBIAOBH(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_ZONGBIAOBH)));
        biaoKaXX.setD_ZHUANGBIAORQ(cursor.getLong(cursor
                .getColumnIndex(BiaoKaXXColumns.D_ZHUANGBIAORQ)));
        biaoKaXX.setD_HUANBIAORQ(cursor.getLong(cursor
                .getColumnIndex(BiaoKaXXColumns.D_HUANBIAORQ)));
        biaoKaXX.setI_XINBIAODM(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_XINBIAODM)));
        biaoKaXX.setI_JIUBIAOCM(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_JIUBIAOCM)));
        biaoKaXX.setS_X1(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_X1)));
        biaoKaXX.setS_Y1(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_Y1)));
        biaoKaXX.setS_X(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_X)));
        biaoKaXX.setS_Y(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_Y)));
        biaoKaXX.setI_FENTANFS(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_FENTANFS)));
        biaoKaXX.setI_FENTANL(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_FENTANL)));
        biaoKaXX.setN_YuCunKYE(cursor.getDouble(cursor
                .getColumnIndex(BiaoKaXXColumns.N_YUCUNKYE)));
        biaoKaXX.setI_QianFeiZBS(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_QIANFEIZBS)));
        biaoKaXX.setN_QianFeiZJE(cursor.getDouble(cursor
                .getColumnIndex(BiaoKaXXColumns.N_QIANFEIZJE)));
        biaoKaXX.setS_BEIZHU(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_BEIZHU)));
        biaoKaXX.setI_SHUIBIAOZT(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_SHUIBIAOZT)));

        biaoKaXX.setN_RENKOUS(cursor.getDouble(cursor
                .getColumnIndex(BiaoKaXXColumns.N_RENKOUS)));
        biaoKaXX.setI_DIBAOYHSL(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_DIBAOYHSL)));
        biaoKaXX.setI_GONGCEYHSL(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_GONGCEYHSL)));

        biaoKaXX.setN_YONGSHUIZKL(cursor.getDouble(cursor
                .getColumnIndex(BiaoKaXXColumns.N_YONGSHUIZKL)));
        biaoKaXX.setN_PAISHUIZKL(cursor.getDouble(cursor
                .getColumnIndex(BiaoKaXXColumns.N_PAISHUIZKL)));
        biaoKaXX.setN_ZHEKOUL1(cursor.getDouble(cursor
                .getColumnIndex(BiaoKaXXColumns.N_ZHEKOUL1)));
        biaoKaXX.setN_ZHEKOUL2(cursor.getDouble(cursor
                .getColumnIndex(BiaoKaXXColumns.N_ZHEKOUL2)));
        biaoKaXX.setN_ZHEKOUL3(cursor.getDouble(cursor
                .getColumnIndex(BiaoKaXXColumns.N_ZHEKOUL3)));

        biaoKaXX.setI_ERCIGS(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_ERCIGS)));
        biaoKaXX.setI_DIANZIZD(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_DIANZIZD)));
        biaoKaXX.setS_XINGZHENGQ(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_XINGZHENGQ)));
        biaoKaXX.setS_BIAOKAZT(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_BIAOKAZT)));
        biaoKaXX.setS_SHESHUIID(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_SHESHUIID)));
        biaoKaXX.setN_JIAGE(cursor.getDouble(cursor
                .getColumnIndex(BiaoKaXXColumns.N_JIAGE)));
        biaoKaXX.setS_SHUIBIAOLXBH(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_SHUIBIAOLXBH)));
        biaoKaXX.setN_ZIZHUANGBKZXS(cursor.getDouble(cursor
                .getColumnIndex(BiaoKaXXColumns.N_ZIZHUANGBKZXS)));
        biaoKaXX.setS_SHUIBIAOZL(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_SHUIBIAOZL)));
        biaoKaXX.setS_SHUIBIAOFL(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_SHUIBIAOFL)));
        biaoKaXX.setS_YUANCHUANID(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_YUANCHUANID)));
        biaoKaXX.setS_ZHONGDUANH(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_ZHONGDUANH)));
        biaoKaXX.setS_YUANCHUANCJ(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_YUANCHUANCJ)));
        biaoKaXX.setS_DUORENKFA(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_DUORENKFA)));
        biaoKaXX.setI_SHIFOUJT(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_SHIFOUJT)));
        biaoKaXX.setD_DUORENKJZ(cursor.getLong(cursor
                .getColumnIndex(BiaoKaXXColumns.D_DUORENKDQ)));
        biaoKaXX.setD_GONGSHUIHTNX(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.D_GONGSHUIHTNX)));
        biaoKaXX.setS_FANGDONGDH(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_FANGDONGDH)));
        biaoKaXX.setS_FANGKEDH(cursor.getString(cursor
                .getColumnIndex(BiaoKaXXColumns.S_FANGKEDH)));
        biaoKaXX.setI_NIANLEIJ(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_NIANLEIJ)));
        biaoKaXX.setI_HUANBIAO(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_HUANBIAO)));
        biaoKaXX.setI_QIANFEI(cursor.getInt(cursor
                .getColumnIndex(BiaoKaXXColumns.I_QIANFEI)));
        return biaoKaXX;
    }
}
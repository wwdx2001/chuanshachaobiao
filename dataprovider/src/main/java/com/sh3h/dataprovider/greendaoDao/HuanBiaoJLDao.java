package com.sh3h.dataprovider.greendaoDao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import com.sh3h.dataprovider.greendaoEntity.HuanBiaoJL;

import java.util.List;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;
import de.greenrobot.dao.query.QueryBuilder;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table BW_HuanBiaoJL.
 */
public class HuanBiaoJLDao extends AbstractDao<HuanBiaoJL, Void> {

    public static final String TABLENAME = "BW_HuanBiaoJL";

    /**
     * Properties of entity HuanBiaoJL.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property S_CID = new Property(0, String.class, "S_CID", false, "S_CID");
        public final static Property S_BiaoWeiXX = new Property(1, String.class, "S_BiaoWeiXX", false, "S_BIAOWEIXX");
        public final static Property S_DengJiR = new Property(2, String.class, "S_DengJiR", false, "S_DENGJIR");
        public final static Property D_DengJiRQ = new Property(3, long.class, "D_DengJiRQ", false, "D_DENGJIRQ");
        public final static Property S_HuanBiaoLX = new Property(4, String.class, "S_HuanBiaoLX", false, "S_HUANBIAOLX");
        public final static Property S_HuanBiaoYY = new Property(5, String.class, "S_HuanBiaoYY", false, "S_HUANBIAOYY");
        public final static Property S_JiubiaoBH = new Property(6, String.class, "S_JiubiaoBH", false, "S_JIUBIAOBH");
        public final static Property S_JiuBiaoGYH = new Property(7, String.class, "S_JiuBiaoGYH", false, "S_JIUBIAOGYH");
        public final static Property S_JiuBiaoCJ = new Property(8, String.class, "S_JiuBiaoCJ", false, "S_JIUBIAOCJ");
        public final static Property S_XinBiaoBH = new Property(9, String.class, "S_XinBiaoBH", false, "S_XINBIAOBH");
        public final static Property S_XinBiaoGYH = new Property(10, String.class, "S_XinBiaoGYH", false, "S_XINBIAOGYH");
        public final static Property S_XinBiaoCJ = new Property(11, String.class, "S_XinBiaoCJ", false, "S_XINBIAOCJ");
        public final static Property S_JiuBiaoXH = new Property(12, String.class, "S_JiuBiaoXH", false, "S_JIUBIAOXH");
        public final static Property S_XinBiaoXH = new Property(13, String.class, "S_XinBiaoXH", false, "S_XINBIAOXH");
        public final static Property S_JiuBiaoKJ = new Property(14, String.class, "S_JiuBiaoKJ", false, "S_JIUBIAOKJ");
        public final static Property S_XinBiaoKJ = new Property(15, String.class, "S_XinBiaoKJ", false, "S_XINBIAOKJ");
        public final static Property I_XinBiaoLC = new Property(16, int.class, "I_XinBiaoLC", false, "I_XINBIAOLC");
        public final static Property I_ShangCiCM = new Property(17, int.class, "I_ShangCiCM", false, "I_SHANGCICM");
        public final static Property I_JiuBiaoCM = new Property(18, int.class, "I_JiuBiaoCM", false, "I_JIUBIAOCM");
        public final static Property I_XinBiaoDM = new Property(19, int.class, "I_XinBiaoDM", false, "I_XINBIAODM");
        public final static Property D_ShiGongRQ = new Property(20, long.class, "D_ShiGongRQ", false, "D_SHIGONGRQ");
        public final static Property S_HuiTianR = new Property(21, String.class, "S_HuiTianR", false, "S_HUITIANR");
        public final static Property D_HuanBiaoHTRQ = new Property(22, long.class, "D_HuanBiaoHTRQ", false, "D_HUANBIAOHTRQ");
        public final static Property S_HuanBiaoZT = new Property(23, String.class, "S_HuanBiaoZT", false, "S_HUANBIAOZT");
        public final static Property S_BeiZhu = new Property(24, String.class, "S_BeiZhu", false, "S_BEIZHU");
    }

    ;


    public HuanBiaoJLDao(DaoConfig config) {
        super(config);
    }

    public HuanBiaoJLDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /**
     * Creates the underlying database table.
     */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists ? "IF NOT EXISTS " : "";
        db.execSQL("CREATE TABLE " + constraint + "'BW_HuanBiaoJL' (" + //
                "'S_CID' TEXT," + // 0: S_CID
                "'S_BIAOWEIXX' TEXT," + // 1: S_BiaoWeiXX
                "'S_DENGJIR' TEXT," + // 2: S_DengJiR
                "'D_DENGJIRQ' INTEGER," + // 3: D_DengJiRQ
                "'S_HUANBIAOLX' TEXT," + // 4: S_HuanBiaoLX
                "'S_HUANBIAOYY' TEXT," + // 5: S_HuanBiaoYY
                "'S_JIUBIAOBH' TEXT," + // 6: S_JiubiaoBH
                "'S_JIUBIAOGYH' TEXT," + // 7: S_JiuBiaoGYH
                "'S_JIUBIAOCJ' TEXT," + // 8: S_JiuBiaoCJ
                "'S_XINBIAOBH' TEXT," + // 9: S_XinBiaoBH
                "'S_XINBIAOGYH' TEXT," + // 10: S_XinBiaoGYH
                "'S_XINBIAOCJ' TEXT," + // 11: S_XinBiaoCJ
                "'S_JIUBIAOXH' TEXT," + // 12: S_JiuBiaoXH
                "'S_XINBIAOXH' TEXT," + // 13: S_XinBiaoXH
                "'S_JIUBIAOKJ' TEXT," + // 14: S_JiuBiaoKJ
                "'S_XINBIAOKJ' TEXT," + // 15: S_XinBiaoKJ
                "'I_XINBIAOLC' INTEGER," + // 16: I_XinBiaoLC
                "'I_SHANGCICM' INTEGER," + // 17: I_ShangCiCM
                "'I_JIUBIAOCM' INTEGER," + // 18: I_JiuBiaoCM
                "'I_XINBIAODM' INTEGER," + // 19: I_XinBiaoDM
                "'D_SHIGONGRQ' INTEGER," + // 20: D_ShiGongRQ
                "'S_HUITIANR' TEXT," + // 21: S_HuiTianR
                "'D_HUANBIAOHTRQ' INTEGER," + // 22: D_HuanBiaoHTRQ
                "'S_HUANBIAOZT' TEXT," + // 23: S_HuanBiaoZT
                "'S_BEIZHU' TEXT);"); // 24: S_BeiZhu
    }

    /**
     * Drops the underlying database table.
     */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'BW_HuanBiaoJL'";
        db.execSQL(sql);
    }

    /**
     * @inheritdoc
     */
    @Override
    protected void bindValues(SQLiteStatement stmt, HuanBiaoJL entity) {
        stmt.clearBindings();

        String S_CID = entity.getS_CID();
        if (S_CID != null) {
            stmt.bindString(1, S_CID);
        }

        String S_BiaoWeiXX = entity.getS_BiaoWeiXX();
        if (S_BiaoWeiXX != null) {
            stmt.bindString(2, S_BiaoWeiXX);
        }

        String S_DengJiR = entity.getS_DengJiR();
        if (S_DengJiR != null) {
            stmt.bindString(3, S_DengJiR);
        }

        long D_DengJiRQ = entity.getD_DengJiRQ();
        //if (D_DengJiRQ != null) {
        stmt.bindLong(4, D_DengJiRQ);
        //}

        String S_HuanBiaoLX = entity.getS_HuanBiaoLX();
        if (S_HuanBiaoLX != null) {
            stmt.bindString(5, S_HuanBiaoLX);
        }

        String S_HuanBiaoYY = entity.getS_HuanBiaoYY();
        if (S_HuanBiaoYY != null) {
            stmt.bindString(6, S_HuanBiaoYY);
        }

        String S_JiubiaoBH = entity.getS_JiubiaoBH();
        if (S_JiubiaoBH != null) {
            stmt.bindString(7, S_JiubiaoBH);
        }

        String S_JiuBiaoGYH = entity.getS_JiuBiaoGYH();
        if (S_JiuBiaoGYH != null) {
            stmt.bindString(8, S_JiuBiaoGYH);
        }

        String S_JiuBiaoCJ = entity.getS_JiuBiaoCJ();
        if (S_JiuBiaoCJ != null) {
            stmt.bindString(9, S_JiuBiaoCJ);
        }

        String S_XinBiaoBH = entity.getS_XinBiaoBH();
        if (S_XinBiaoBH != null) {
            stmt.bindString(10, S_XinBiaoBH);
        }

        String S_XinBiaoGYH = entity.getS_XinBiaoGYH();
        if (S_XinBiaoGYH != null) {
            stmt.bindString(11, S_XinBiaoGYH);
        }

        String S_XinBiaoCJ = entity.getS_XinBiaoCJ();
        if (S_XinBiaoCJ != null) {
            stmt.bindString(12, S_XinBiaoCJ);
        }

        String S_JiuBiaoXH = entity.getS_JiuBiaoXH();
        if (S_JiuBiaoXH != null) {
            stmt.bindString(13, S_JiuBiaoXH);
        }

        String S_XinBiaoXH = entity.getS_XinBiaoXH();
        if (S_XinBiaoXH != null) {
            stmt.bindString(14, S_XinBiaoXH);
        }

        String S_JiuBiaoKJ = entity.getS_JiuBiaoKJ();
        if (S_JiuBiaoKJ != null) {
            stmt.bindString(15, S_JiuBiaoKJ);
        }

        String S_XinBiaoKJ = entity.getS_XinBiaoKJ();
        if (S_XinBiaoKJ != null) {
            stmt.bindString(16, S_XinBiaoKJ);
        }

        int I_XinBiaoLC = entity.getI_XinBiaoLC();
        //if (I_XinBiaoLC != null) {
        stmt.bindLong(17, I_XinBiaoLC);
        //}

        int I_ShangCiCM = entity.getI_ShangCiCM();
        //if (I_ShangCiCM != null) {
        stmt.bindLong(18, I_ShangCiCM);
        //}

        int I_JiuBiaoCM = entity.getI_JiuBiaoCM();
        //if (I_JiuBiaoCM != null) {
        stmt.bindLong(19, I_JiuBiaoCM);
        //}

        int I_XinBiaoDM = entity.getI_XinBiaoDM();
        //if (I_XinBiaoDM != null) {
        stmt.bindLong(20, I_XinBiaoDM);
        //}

        long D_ShiGongRQ = entity.getD_ShiGongRQ();
        //if (D_ShiGongRQ != null) {
        stmt.bindLong(21, D_ShiGongRQ);
        //}

        String S_HuiTianR = entity.getS_HuiTianR();
        if (S_HuiTianR != null) {
            stmt.bindString(22, S_HuiTianR);
        }

        long D_HuanBiaoHTRQ = entity.getD_HuanBiaoHTRQ();
        //if (D_HuanBiaoHTRQ != null) {
        stmt.bindLong(23, D_HuanBiaoHTRQ);
        //}

        String S_HuanBiaoZT = entity.getS_HuanBiaoZT();
        if (S_HuanBiaoZT != null) {
            stmt.bindString(24, S_HuanBiaoZT);
        }

        String S_BeiZhu = entity.getS_BeiZhu();
        if (S_BeiZhu != null) {
            stmt.bindString(25, S_BeiZhu);
        }
    }

    /**
     * @inheritdoc
     */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }

    /**
     * @inheritdoc
     */
    @Override
    public HuanBiaoJL readEntity(Cursor cursor, int offset) {
        HuanBiaoJL entity = new HuanBiaoJL( //
                cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // S_CID
                cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // S_BiaoWeiXX
                cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // S_DengJiR
                cursor.isNull(offset + 3) ? null : cursor.getLong(offset + 3), // D_DengJiRQ
                cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // S_HuanBiaoLX
                cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // S_HuanBiaoYY
                cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // S_JiubiaoBH
                cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // S_JiuBiaoGYH
                cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // S_JiuBiaoCJ
                cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // S_XinBiaoBH
                cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // S_XinBiaoGYH
                cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // S_XinBiaoCJ
                cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // S_JiuBiaoXH
                cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // S_XinBiaoXH
                cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // S_JiuBiaoKJ
                cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // S_XinBiaoKJ
                cursor.isNull(offset + 16) ? null : cursor.getInt(offset + 16), // I_XinBiaoLC
                cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17), // I_ShangCiCM
                cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18), // I_JiuBiaoCM
                cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19), // I_XinBiaoDM
                cursor.isNull(offset + 20) ? null : cursor.getLong(offset + 20), // D_ShiGongRQ
                cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // S_HuiTianR
                cursor.isNull(offset + 22) ? null : cursor.getLong(offset + 22), // D_HuanBiaoHTRQ
                cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // S_HuanBiaoZT
                cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24) // S_BeiZhu
        );
        return entity;
    }

    /**
     * @inheritdoc
     */
    @Override
    public void readEntity(Cursor cursor, HuanBiaoJL entity, int offset) {
        entity.setS_CID(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setS_BiaoWeiXX(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setS_DengJiR(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setD_DengJiRQ(cursor.isNull(offset + 3) ? 0 : cursor.getLong(offset + 3));
        entity.setS_HuanBiaoLX(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setS_HuanBiaoYY(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setS_JiubiaoBH(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setS_JiuBiaoGYH(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setS_JiuBiaoCJ(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setS_XinBiaoBH(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setS_XinBiaoGYH(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setS_XinBiaoCJ(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setS_JiuBiaoXH(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setS_XinBiaoXH(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setS_JiuBiaoKJ(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setS_XinBiaoKJ(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setI_XinBiaoLC(cursor.isNull(offset + 16) ? 0 : cursor.getInt(offset + 16));
        entity.setI_ShangCiCM(cursor.isNull(offset + 17) ? 0 : cursor.getInt(offset + 17));
        entity.setI_JiuBiaoCM(cursor.isNull(offset + 18) ? 0 : cursor.getInt(offset + 18));
        entity.setI_XinBiaoDM(cursor.isNull(offset + 19) ? 0 : cursor.getInt(offset + 19));
        entity.setD_ShiGongRQ(cursor.isNull(offset + 20) ? 0 : cursor.getLong(offset + 20));
        entity.setS_HuiTianR(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setD_HuanBiaoHTRQ(cursor.isNull(offset + 22) ? 0 : cursor.getLong(offset + 22));
        entity.setS_HuanBiaoZT(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setS_BeiZhu(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
    }

    /**
     * @inheritdoc
     */
    @Override
    protected Void updateKeyAfterInsert(HuanBiaoJL entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }

    /**
     * @inheritdoc
     */
    @Override
    public Void getKey(HuanBiaoJL entity) {
        return null;
    }

    /**
     * @inheritdoc
     */
    @Override
    protected boolean isEntityUpdateable() {
        return true;
    }


    /**
     * 根据任务编号删除不存在renWuBHAll中的换表记录
     */
    public void deleteChaoBiaoJL(List<String> list) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CID.in(list)).buildDelete().executeDeleteWithoutDetachingEntities();

    }


    /**
     * 删除本地换表记录表数据
     */
    public boolean clear(String cId) {
        if (cId == null) {
            return false;
        }

        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CID.eq(cId)).buildDelete().executeDeleteWithoutDetachingEntities();
        return true;
    }

    /**
     * 插入数据
     */
    public boolean insertData(HuanBiaoJL huanBiaoJL) {
        if (huanBiaoJL == null) {
            return false;
        }

        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CID.eq(huanBiaoJL.getS_CID()),
                Properties.D_DengJiRQ.eq(huanBiaoJL.getD_DengJiRQ()));
        List<HuanBiaoJL> huanBiaoJLList = qb.list();
        if ((huanBiaoJLList != null) && (huanBiaoJLList.size() > 0)) {
            return true;
        }

        return insertOrReplace(huanBiaoJL) > 0;
    }

    public boolean insertHuanBiaoJLs(List<HuanBiaoJL> huanBiaoJLList) {
        if (huanBiaoJLList == null) {
            return false;
        }

        insertOrReplaceInTx(huanBiaoJLList);
        return true;
    }

    /**
     * 查询huanbiaojl表中任务，根据传入的cId决定读取所需要的换表信息
     *
     * @param cId
     * @return List<HuanBiaoJL> 集合
     */
    public List<HuanBiaoJL> getList(String cId) {
        if (cId == null) {
            return null;
        }

        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CID.eq(cId.trim()));
        qb.orderDesc(Properties.D_DengJiRQ);
        List<HuanBiaoJL> huanBiaoJLs = qb.list();

        if (huanBiaoJLs == null || huanBiaoJLs.size() < 0) {
            return null;
        }

        return huanBiaoJLs;
    }


}

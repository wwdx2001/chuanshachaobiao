package com.sh3h.dataprovider.greendaoDao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.sh3h.dataprovider.greendaoEntity.ReXianGD;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table GD_ReXianGD.
 */
public class ReXianGDDao extends AbstractDao<ReXianGD, Void> {

    public static final String TABLENAME = "GD_ReXianGD";

    /**
     * Properties of entity ReXianGD.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property S_GongDanBH = new Property(0, String.class, "S_GongDanBH", false, "S_GONGDANBH");
        public final static Property S_CID = new Property(1, String.class, "S_CID", false, "S_CID");
        public final static Property S_KaiDanRBH = new Property(2, String.class, "S_KaiDanRBH", false, "S_KAIDANRBH");
        public final static Property S_FanYinGR = new Property(3, String.class, "S_FanYinGR", false, "S_FANYINGR");
        public final static Property S_DianHua = new Property(4, String.class, "S_DianHua", false, "S_DIANHUA");
        public final static Property D_FaShengSJ = new Property(5, Integer.class, "D_FaShengSJ", false, "D_FASHENGSJ");
        public final static Property S_FaShengDZ = new Property(6, String.class, "S_FaShengDZ", false, "S_FASHENGDZ");
        public final static Property S_FanYingLB = new Property(7, String.class, "S_FanYingLB", false, "S_FANYINGLB");
        public final static Property S_FanYingNR = new Property(8, String.class, "S_FanYingNR", false, "S_FANYINGNR");
        public final static Property S_JinJiCD = new Property(9, String.class, "S_JinJiCD", false, "S_JINJICD");
        public final static Property S_ShouLiBZ = new Property(10, String.class, "S_ShouLiBZ", false, "S_SHOULIBZ");
    }

    ;


    public ReXianGDDao(DaoConfig config) {
        super(config);
    }

    public ReXianGDDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /**
     * Creates the underlying database table.
     */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists ? "IF NOT EXISTS " : "";
        db.execSQL("CREATE TABLE " + constraint + "'GD_ReXianGD' (" + //
                "'S_GONGDANBH' TEXT," + // 0: S_GongDanBH
                "'S_CID' TEXT," + // 1: S_CID
                "'S_KAIDANRBH' TEXT," + // 2: S_KaiDanRBH
                "'S_FANYINGR' TEXT," + // 3: S_FanYinGR
                "'S_DIANHUA' TEXT," + // 4: S_DianHua
                "'D_FASHENGSJ' INTEGER," + // 5: D_FaShengSJ
                "'S_FASHENGDZ' TEXT," + // 6: S_FaShengDZ
                "'S_FANYINGLB' TEXT," + // 7: S_FanYingLB
                "'S_FANYINGNR' TEXT," + // 8: S_FanYingNR
                "'S_JINJICD' TEXT," + // 9: S_JinJiCD
                "'S_SHOULIBZ' TEXT);"); // 10: S_ShouLiBZ
    }

    /**
     * Drops the underlying database table.
     */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'GD_ReXianGD'";
        db.execSQL(sql);
    }

    /**
     * @inheritdoc
     */
    @Override
    protected void bindValues(SQLiteStatement stmt, ReXianGD entity) {
        stmt.clearBindings();

        String S_GongDanBH = entity.getS_GongDanBH();
        if (S_GongDanBH != null) {
            stmt.bindString(1, S_GongDanBH);
        }

        String S_CID = entity.getS_CID();
        if (S_CID != null) {
            stmt.bindString(2, S_CID);
        }

        String S_KaiDanRBH = entity.getS_KaiDanRBH();
        if (S_KaiDanRBH != null) {
            stmt.bindString(3, S_KaiDanRBH);
        }

        String S_FanYinGR = entity.getS_FanYinGR();
        if (S_FanYinGR != null) {
            stmt.bindString(4, S_FanYinGR);
        }

        String S_DianHua = entity.getS_DianHua();
        if (S_DianHua != null) {
            stmt.bindString(5, S_DianHua);
        }

        Integer D_FaShengSJ = entity.getD_FaShengSJ();
        if (D_FaShengSJ != null) {
            stmt.bindLong(6, D_FaShengSJ);
        }

        String S_FaShengDZ = entity.getS_FaShengDZ();
        if (S_FaShengDZ != null) {
            stmt.bindString(7, S_FaShengDZ);
        }

        String S_FanYingLB = entity.getS_FanYingLB();
        if (S_FanYingLB != null) {
            stmt.bindString(8, S_FanYingLB);
        }

        String S_FanYingNR = entity.getS_FanYingNR();
        if (S_FanYingNR != null) {
            stmt.bindString(9, S_FanYingNR);
        }

        String S_JinJiCD = entity.getS_JinJiCD();
        if (S_JinJiCD != null) {
            stmt.bindString(10, S_JinJiCD);
        }

        String S_ShouLiBZ = entity.getS_ShouLiBZ();
        if (S_ShouLiBZ != null) {
            stmt.bindString(11, S_ShouLiBZ);
        }
    }

    /**
     * @inheritdoc
     */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }

    /**
     * @inheritdoc
     */
    @Override
    public ReXianGD readEntity(Cursor cursor, int offset) {
        ReXianGD entity = new ReXianGD( //
                cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // S_GongDanBH
                cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // S_CID
                cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // S_KaiDanRBH
                cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // S_FanYinGR
                cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // S_DianHua
                cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5), // D_FaShengSJ
                cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // S_FaShengDZ
                cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // S_FanYingLB
                cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // S_FanYingNR
                cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // S_JinJiCD
                cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10) // S_ShouLiBZ
        );
        return entity;
    }

    /**
     * @inheritdoc
     */
    @Override
    public void readEntity(Cursor cursor, ReXianGD entity, int offset) {
        entity.setS_GongDanBH(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setS_CID(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setS_KaiDanRBH(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setS_FanYinGR(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setS_DianHua(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setD_FaShengSJ(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
        entity.setS_FaShengDZ(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setS_FanYingLB(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setS_FanYingNR(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setS_JinJiCD(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setS_ShouLiBZ(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
    }

    /**
     * @inheritdoc
     */
    @Override
    protected Void updateKeyAfterInsert(ReXianGD entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }

    /**
     * @inheritdoc
     */
    @Override
    public Void getKey(ReXianGD entity) {
        return null;
    }

    /**
     * @inheritdoc
     */
    @Override
    protected boolean isEntityUpdateable() {
        return true;
    }

    /**
     * 调用热线开单apiservices
     *
     * @param ReXianGD
     * @return
     */
    public String ReXianKDServices(ReXianGD ReXianGD) {
        return "112233445566";
    }

    /**
     * 保存一条热线开单记录
     *
     * @param ReXianGD
     * @return
     */
    public boolean AddReXianGD(ReXianGD ReXianGD) {
        if (ReXianGD == null) {
            return false;
        }
        if (this.insertOrReplace(ReXianGD) > 0) {
            return true;
        } else {
            return false;
        }

    }


}

package com.sh3h.dataprovider.greendaoDao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import com.sh3h.dataprovider.greendaoEntity.BIAOKAXX;
import com.sh3h.dataprovider.greendaoEntity.YanChiBiao;
import com.sh3h.dataprovider.schema.ChaoBiaoSJColumns;
import com.sh3h.dataprovider.schema.Tables;
import com.sh3h.dataprovider.schema.YanChiBiaoColumns;
import com.sh3h.mobileutil.util.TextUtil;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;
import de.greenrobot.dao.query.DeleteQuery;
import de.greenrobot.dao.query.QueryBuilder;
import de.greenrobot.dao.query.WhereCondition;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/**
 * DAO for table PDA_YANCHI.
 */
public class YanChiBiaoDao extends AbstractDao<YanChiBiao, Long> {
    /*所有抄表数据*/
    public static final int ALLWORK = 6;
    /*查找量高抄表数据*/
    public static final int HIGHAMOUNT = 7;
    /*查找量低抄表数据*/
    public static final int LOWAMOUNT = 8;
    /*查找未完成任务*/
    public static final int UNFINISHING = 0;
    /**查找已抄任务*/
    public static final int FINISHWORK = 1;
    /*查找已抄未上传*/
    public static final int FLAG_NOT_UPLOADED = 2;
    /*查找上传成功*/
    public static final int FLAG_UPLOADED = 3;
    /**已抄*/
    public static final int FLAG_FINISH = 1;
    /**未抄*/
    public static final int FLAG_UN_FINISH = 0;


    public static final String TABLENAME = "PDA_YANCHI";

    /**
     * Properties of entity YanChiBiao.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property ID = new Property(0, long.class, "ID", true, "ID");
        public final static Property I_RENWUBH = new Property(1, Integer.class, "I_RENWUBH", false, "I_RENWUBH");
        public final static Property I_CHAOBIAOID = new Property(2, Integer.class, "I_CHAOBIAOID", false, "I_CHAOBIAOID");
        public final static Property S_CID = new Property(3, String.class, "S_CID", false, "S_CID");
        public final static Property I_CHAOJIANSL = new Property(4, long.class, "I_CHAOJIANSL", false, "I_CHAOJIANSL");
        public final static Property I_SHANGCICM = new Property(5, Integer.class, "I_SHANGCICM", false, "I_SHANGCICM");
        public final static Property I_CHAOHUICM = new Property(6, Integer.class, "I_CHAOHUICM", false, "I_CHAOHUICM");
        public final static Property I_ZHUANGTAIBM = new Property(7, Integer.class, "I_ZHUANGTAIBM", false, "I_ZHUANGTAIBM");
        public final static Property S_ZHUANGTAIMC = new Property(8, String.class, "S_ZHUANGTAIMC", false, "S_ZHUANGTAIMC");
        public final static Property I_LIANGGAOLDBM = new Property(9, Integer.class, "I_LIANGGAOLDBM", false, "I_LIANGGAOLDBM");
        public final static Property D_CHAOBIAORQ = new Property(10, long.class, "D_CHAOBIAORQ", false, "D_CHAOBIAORQ");
        public final static Property I_CHAOBIAON = new Property(11, Integer.class, "I_CHAOBIAON", false, "I_CHAOBIAON");
        public final static Property I_CHAOBIAOY = new Property(12, Integer.class, "I_CHAOBIAOY", false, "I_CHAOBIAOY");
        public final static Property S_CHAOBIAOY = new Property(13, String.class, "S_CHAOBIAOY", false, "S_CHAOBIAOY");
        public final static Property I_FANGSHIBM = new Property(14, Integer.class, "I_FANGSHIBM", false, "I_FANGSHIBM");
        public final static Property I_CHAOBIAOZT = new Property(15, Integer.class, "I_CHAOBIAOZT", false, "I_CHAOBIAOZT");
        public final static Property D_SHANGCICBRQ = new Property(16, long.class, "D_SHANGCICBRQ", false, "D_SHANGCICBRQ");
        public final static Property S_ST = new Property(17, String.class, "S_ST", false, "S_ST");
        public final static Property S_CH = new Property(18, String.class, "S_CH", false, "S_CH");
        public final static Property I_CENEIXH = new Property(19, Integer.class, "I_CENEIXH", false, "I_CENEIXH");
        public final static Property I_JIUBIAOCM = new Property(20, Integer.class, "I_JIUBIAOCM", false, "I_JIUBIAOCM");
        public final static Property I_XINBIAODM = new Property(21, Integer.class, "I_XINBIAODM", false, "I_XINBIAODM");
        public final static Property D_HUANBIAORQ = new Property(22, long.class, "D_HUANBIAORQ", false, "D_HUANBIAORQ");
        public final static Property D_HUANBIAOHTSJ = new Property(23, long.class, "D_HUANBIAOHTSJ", false, "D_HUANBIAOHTSJ");
        public final static Property D_DENGJISJ = new Property(24, long.class, "D_DENGJISJ", false, "D_DENGJISJ");
        public final static Property I_ZHUANGTAI = new Property(25, Integer.class, "I_ZHUANGTAI", false, "I_ZHUANGTAI");
        public final static Property S_YANCHIYBH = new Property(26, String.class, "S_YANCHIYBH", false, "S_YANCHIYBH");
        public final static Property S_HUITIANYBH = new Property(27, String.class, "S_HUITIANYBH", false, "S_HUITIANYBH");
        public final static Property D_HUITIANSJ = new Property(28, long.class, "D_HUITIANSJ", false, "D_HUITIANSJ");
        public final static Property S_CHULIQK = new Property(29, String.class, "S_CHULIQK", false, "S_CHULIQK");
        public final static Property S_CAOZUOR = new Property(30, String.class, "S_CAOZUOR", false, "S_CAOZUOR");
        public final static Property D_CAOZUOSJ = new Property(31, long.class, "D_CAOZUOSJ", false, "D_CAOZUOSJ");
        public final static Property I_HUANBIAOFS = new Property(32, Integer.class, "I_HUANBIAOFS", false, "I_HUANBIAOFS");
        public final static Property S_CHAOBIAOBZ = new Property(33, String.class, "S_CHAOBIAOBZ", false, "S_CHAOBIAOBZ");
        public final static Property S_SHUIBIAOTXM = new Property(34, String.class, "S_SHUIBIAOTXM", false, "S_SHUIBIAOTXM");
        public final static Property S_YANCHIYY = new Property(35, String.class, "S_YANCHIYY", false, "S_YANCHIYY");
        public final static Property I_ZHENSHICM = new Property(36, Integer.class, "I_ZHENSHICM", false, "I_ZHENSHICM");
        public final static Property I_LINYONGSLSM = new Property(37, Integer.class, "I_LINYONGSLSM", false, "I_LINYONGSLSM");
        public final static Property S_X = new Property(38, String.class, "S_X", false, "S_X");
        public final static Property S_Y = new Property(39, String.class, "S_Y", false, "S_Y");
        public final static Property I_YANCHILX = new Property(40, Integer.class, "I_YANCHILX", false, "I_YANCHILX");
        public final static Property S_YANCHIBH = new Property(41, String.class, "S_YANCHIBH", false, "S_YANCHIBH");
        public final static Property I_CHAOBIAOBZ = new Property(42, Integer.class, "I_CHAOBIAOBZ", false, "I_CHAOBIAOBZ");
        public final static Property I_ShangChuanBZ = new Property(43, Integer.class, "I_ShangChuanBZ", false, "I_ShangChuanBZ");
        public final static Property I_KaiZhangBZ = new Property(44, Integer.class, "I_KaiZhangBZ", false, "I_KaiZhangBZ");
        public final static Property S_JH = new Property(45, String.class, "S_JH", false, "S_JH");
        public final static Property I_LIANGGAOSL = new Property(46, Integer.class, "I_LIANGGAOSL", false, "I_LIANGGAOSL");
        public final static Property I_LIANGDISL = new Property(47, Integer.class, "I_LIANGDISL", false, "I_LIANGDISL");
        public final static Property I_PINGJUNL1 = new Property(48, Integer.class, "I_PINGJUNL1", false, "I_PINGJUNL1");
        public final static Property I_SHANGCISL = new Property(49, Integer.class, "I_SHANGCISL", false, "I_SHANGCISL");
        public final static Property N_JE = new Property(50, Integer.class, "N_JE", false, "N_JE");
        public final static Property S_JIETITS = new Property(51, String.class, "S_JIETITS", false, "S_JIETITS");
        public final static Property S_ShangCiZTBM = new Property(52, String.class, "S_ShangCiZTBM", false, "S_ShangCiZTBM");
        public final static Property I_SHANGGEDBZQTS = new Property(53, Integer.class, " I_SHANGGEDBZQTS", false, " I_SHANGGEDBZQTS");
        public final static Property D_SHANGSHANGGYCBRQ = new Property(54, long.class, "D_SHANGSHANGGYCBRQ", false, "D_SHANGSHANGGYCBRQ");
    };


    public YanChiBiaoDao(DaoConfig config) {
        super(config);
    }

    public YanChiBiaoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'PDA_YANCHI' (" + //
                "'ID' INTEGER," + // 0: ID
                "'I_RENWUBH' INTEGER," + // 1: I_RENWUBH
                "'I_CHAOBIAOID' INTEGER," + // 2: I_CHAOBIAOID
                "'S_CID' TEXT," + // 3: S_CID
                "'I_CHAOJIANSL' INTEGER," + // 4: I_CHAOJIANSL
                "'I_SHANGCICM' INTEGER," + // 5: I_SHANGCICM
                "'I_CHAOHUICM' INTEGER," + // 6: I_CHAOHUICM
                "'I_ZHUANGTAIBM' INTEGER," + // 7: I_ZHUANGTAIBM
                "'S_ZHUANGTAIMC' TEXT," + // 8: S_ZHUANGTAIMC
                "'I_LIANGGAOLDBM' INTEGER," + // 9: I_LIANGGAOLDBM
                "'D_CHAOBIAORQ' INTEGER," + // 10: D_CHAOBIAORQ
                "'I_CHAOBIAON' INTEGER," + // 11: I_CHAOBIAON
                "'I_CHAOBIAOY' INTEGER," + // 12: I_CHAOBIAOY
                "'S_CHAOBIAOY' TEXT," + // 13: S_CHAOBIAOY
                "'I_FANGSHIBM' INTEGER," + // 14: I_FANGSHIBM
                "'I_CHAOBIAOZT' INTEGER," + // 15: I_CHAOBIAOZT
                "'D_SHANGCICBRQ' INTEGER," + // 16: D_SHANGCICBRQ
                "'S_ST' TEXT," + // 17: S_ST
                "'S_CH' TEXT," + // 18: S_CH
                "'I_CENEIXH' INTEGER," + // 19: I_CENEIXH
                "'I_JIUBIAOCM' INTEGER," + // 20: I_JIUBIAOCM
                "'I_XINBIAODM' INTEGER," + // 21: I_XINBIAODM
                "'D_HUANBIAORQ' INTEGER," + // 22: D_HUANBIAORQ
                "'D_HUANBIAOHTSJ' INTEGER," + // 23: D_HUANBIAOHTSJ
                "'D_DENGJISJ' INTEGER," + // 24: D_DENGJISJ
                "'I_ZHUANGTAI' INTEGER," + // 25: I_ZHUANGTAI
                "'S_YANCHIYBH' TEXT," + // 26: S_YANCHIYBH
                "'S_HUITIANYBH' TEXT," + // 27: S_HUITIANYBH
                "'D_HUITIANSJ' INTEGER," + // 28: D_HUITIANSJ
                "'S_CHULIQK' TEXT," + // 29: S_CHULIQK
                "'S_CAOZUOR' TEXT," + // 30: S_CAOZUOR
                "'D_CAOZUOSJ' INTEGER," + // 31: D_CAOZUOSJ
                "'I_HUANBIAOFS' INTEGER," + // 32: I_HUANBIAOFS
                "'S_CHAOBIAOBZ' TEXT," + // 33: S_CHAOBIAOBZ
                "'S_SHUIBIAOTXM' TEXT," + // 34: S_SHUIBIAOTXM
                "'S_YANCHIYY' TEXT," + // 35: S_YANCHIYY
                "'I_ZHENSHICM' INTEGER," + // 36: I_ZHENSHICM
                "'I_LINYONGSLSM' INTEGER," + // 37: I_LINYONGSLSM
                "'S_X' TEXT," + // 38: S_X
                "'S_Y' TEXT," + // 39: S_Y
                "'I_YANCHILX' INTEGER," + // 40: I_YANCHILX
                "'S_YANCHIBH' TEXT," + // 41: S_YANCHIBH
                "'I_CHAOBIAOBZ' INTEGER," + // 42: I_CHAOBIAOBZ
                "'I_ShangChuanBZ' INTEGER," + // 43: I_ShangChuanBZ
                "'I_KaiZhangBZ' INTEGER," + // 44: I_KaiZhangBZ
                "'S_JH' TEXT," + // 45: S_JH
                "'I_LIANGGAOSL' INTEGER," + // 46: I_LIANGGAOSL
                "'I_LIANGDISL' INTEGER," + // 47: I_LIANGDISL
                "'I_PINGJUNL1' INTEGER," + // 48: I_PINGJUNL1
                "'I_SHANGCISL' INTEGER," + // 49: I_SHANGCISL
                "'N_JE' INTEGER," + // 50: N_JE
                "'S_JIETITS' TEXT," + // 51: S_JIETITS
                "'S_ShangCiZTBM' TEXT," +  // 52: S_ShangCiZTBM
                "' I_SHANGGEDBZQTS' INTEGER," +  // 53: I_SHANGGEDBZQTS
                "'D_SHANGSHANGGYCBRQ' INTEGER);"); // 54: D_SHANGSHANGGYCBRQ
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'PDA_YANCHI'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, YanChiBiao entity) {
        stmt.clearBindings();

        Long ID = entity.getID();
        if (ID != null && ID != -1) {
            stmt.bindLong(1, ID);
        }

        stmt.bindLong(2, entity.getI_RENWUBH());
        stmt.bindLong(3, entity.getI_CHAOBIAOID());

        String S_CID = entity.getS_CID();
        if (S_CID != null) {
            stmt.bindString(4, S_CID);
        }

        stmt.bindLong(5, entity.getI_CHAOJIANSL());
        stmt.bindLong(6, entity.getI_SHANGCICM());
        stmt.bindLong(7, entity.getI_CHAOHUICM());
        stmt.bindLong(8, entity.getI_ZHUANGTAIBM());

        String S_ZHUANGTAIMC = entity.getS_ZHUANGTAIMC();
        if (S_ZHUANGTAIMC != null) {
            stmt.bindString(9, S_ZHUANGTAIMC);
        }

        stmt.bindLong(10, entity.getI_LIANGGAOLDBM());
        stmt.bindLong(11, entity.getD_CHAOBIAORQ());
        stmt.bindLong(12, entity.getI_CHAOBIAON());
        stmt.bindLong(13, entity.getI_CHAOBIAOY());

        String S_CHAOBIAOY = entity.getS_CHAOBIAOY();
        if (S_CHAOBIAOY != null) {
            stmt.bindString(14, S_CHAOBIAOY);
        }

        stmt.bindLong(15, entity.getI_FANGSHIBM());
        stmt.bindLong(16, entity.getI_CHAOBIAOZT());
        stmt.bindLong(17, entity.getD_SHANGCICBRQ());

        String S_ST = entity.getS_ST();
        if (S_ST != null) {
            stmt.bindString(18, S_ST);
        }

        String S_CH = entity.getS_CH();
        if (S_CH != null) {
            stmt.bindString(19, S_CH);
        }

        stmt.bindLong(20, entity.getI_CENEIXH());
        stmt.bindLong(21, entity.getI_JIUBIAOCM());
        stmt.bindLong(22, entity.getI_XINBIAODM());
        stmt.bindLong(23, entity.getD_HUANBIAORQ());
        stmt.bindLong(24, entity.getD_HUANBIAOHTSJ());
        stmt.bindLong(25, entity.getD_DENGJISJ());
        stmt.bindLong(26, entity.getI_ZHUANGTAI());

        String S_YANCHIYBH = entity.getS_YANCHIYBH();
        if (S_YANCHIYBH != null) {
            stmt.bindString(27, S_YANCHIYBH);
        }

        String S_HUITIANYBH = entity.getS_HUITIANYBH();
        if (S_HUITIANYBH != null) {
            stmt.bindString(28, S_HUITIANYBH);
        }

        stmt.bindLong(29, entity.getD_HUITIANSJ());

        String S_CHULIQK = entity.getS_CHULIQK();
        if (S_CHULIQK != null) {
            stmt.bindString(30, S_CHULIQK);
        }

        String S_CAOZUOR = entity.getS_CAOZUOR();
        if (S_CAOZUOR != null) {
            stmt.bindString(31, S_CAOZUOR);
        }

        stmt.bindLong(32, entity.getD_CAOZUOSJ());
        stmt.bindLong(33, entity.getI_HUANBIAOFS());

        String S_CHAOBIAOBZ = entity.getS_CHAOBIAOBZ();
        if (S_CHAOBIAOBZ != null) {
            stmt.bindString(34, S_CHAOBIAOBZ);
        }

        String S_SHUIBIAOTXM = entity.getS_SHUIBIAOTXM();
        if (S_SHUIBIAOTXM != null) {
            stmt.bindString(35, S_SHUIBIAOTXM);
        }

        String S_YANCHIYY = entity.getS_YANCHIYY();
        if (S_YANCHIYY != null) {
            stmt.bindString(36, S_YANCHIYY);
        }

        stmt.bindLong(37, entity.getI_ZHENSHICM());
        stmt.bindLong(38, entity.getI_LINYONGSLSM());

        String S_X = entity.getS_X();
        if (S_X != null) {
            stmt.bindString(39, S_X);
        }

        String S_Y = entity.getS_Y();
        if (S_Y != null) {
            stmt.bindString(40, S_Y);
        }

        stmt.bindLong(41, entity.getI_YANCHILX());

        String S_YANCHIBH = entity.getS_YANCHIBH();
        if (S_YANCHIBH != null) {
            stmt.bindString(42, S_YANCHIBH);
        }

        stmt.bindLong(43, entity.getI_CHAOBIAOBZ());
        stmt.bindLong(44, entity.getI_ShangChuanBZ());
        stmt.bindLong(45, entity.getI_KaiZhangBZ());

        String S_JH = entity.getS_JH();
        if (S_JH != null) {
            stmt.bindString(46, S_JH);
        }

        stmt.bindLong(47, entity.getI_LIANGGAOSL());
        stmt.bindLong(48, entity.getI_LIANGDISL());
        stmt.bindLong(49, entity.getI_PINGJUNL1());
        stmt.bindLong(50, entity.getI_SHANGCISL());
        stmt.bindLong(51, entity.getN_JE());

        String S_JIETITS = entity.getS_JIETITS();
        if (S_JIETITS != null) {
            stmt.bindString(52, S_JIETITS);
        }

        String S_ShangCiZTBM = entity.getS_ShangCiZTBM();
        if (S_ShangCiZTBM != null) {
            stmt.bindString(53, S_ShangCiZTBM);
        }

        stmt.bindLong(54, entity.getI_SHANGGEDBZQTS());
        stmt.bindLong(55, entity.getD_SHANGSHANGGYCBRQ());
    }

    @Override
    protected Long readKey(Cursor cursor, int offset) {
        return cursor.getLong(offset + 0);
    }

    /** @inheritdoc */
    @Override
    public YanChiBiao readEntity(Cursor cursor, int offset) {
        YanChiBiao entity = new YanChiBiao( //
                cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // ID
                cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // I_RENWUBH
                cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // I_CHAOBIAOID
                cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // S_CID
                cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // I_CHAOJIANSL
                cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5), // I_SHANGCICM
                cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6), // I_CHAOHUICM
                cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // I_ZHUANGTAIBM
                cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // S_ZHUANGTAIMC
                cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // I_LIANGGAOLDBM
                cursor.isNull(offset + 10) ? null : cursor.getLong(offset + 10), // D_CHAOBIAORQ
                cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11), // I_CHAOBIAON
                cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12), // I_CHAOBIAOY
                cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // S_CHAOBIAOY
                cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14), // I_FANGSHIBM
                cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15), // I_CHAOBIAOZT
                cursor.isNull(offset + 16) ? null : cursor.getLong(offset + 16), // D_SHANGCICBRQ
                cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // S_ST
                cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // S_CH
                cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19), // I_CENEIXH
                cursor.isNull(offset + 20) ? null : cursor.getInt(offset + 20), // I_JIUBIAOCM
                cursor.isNull(offset + 21) ? null : cursor.getInt(offset + 21), // I_XINBIAODM
                cursor.isNull(offset + 22) ? null : cursor.getLong(offset + 22), // D_HUANBIAORQ
                cursor.isNull(offset + 23) ? null : cursor.getLong(offset + 23), // D_HUANBIAOHTSJ
                cursor.isNull(offset + 24) ? null : cursor.getLong(offset + 24), // D_DENGJISJ
                cursor.isNull(offset + 25) ? null : cursor.getInt(offset + 25), // I_ZHUANGTAI
                cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // S_YANCHIYBH
                cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // S_HUITIANYBH
                cursor.isNull(offset + 28) ? null : cursor.getLong(offset + 28), // D_HUITIANSJ
                cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // S_CHULIQK
                cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // S_CAOZUOR
                cursor.isNull(offset + 31) ? null : cursor.getLong(offset + 31), // D_CAOZUOSJ
                cursor.isNull(offset + 32) ? null : cursor.getInt(offset + 32), // I_HUANBIAOFS
                cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // S_CHAOBIAOBZ
                cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // S_SHUIBIAOTXM
                cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // S_YANCHIYY
                cursor.isNull(offset + 36) ? null : cursor.getInt(offset + 36), // I_ZHENSHICM
                cursor.isNull(offset + 37) ? null : cursor.getInt(offset + 37), // I_LINYONGSLSM
                cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // S_X
                cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // S_Y
                cursor.isNull(offset + 40) ? null : cursor.getInt(offset + 40), // I_YANCHILX
                cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // S_YANCHIBH
                cursor.isNull(offset + 42) ? null : cursor.getInt(offset + 42), // I_CHAOBIAOBZ
                cursor.isNull(offset + 43) ? null : cursor.getInt(offset + 43), // I_ShangChuanBZ
                cursor.isNull(offset + 44) ? null : cursor.getInt(offset + 44), // I_KaiZhangBZ
                cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // S_JH
                cursor.isNull(offset + 46) ? null : cursor.getInt(offset + 46), // I_LIANGGAOSL
                cursor.isNull(offset + 47) ? null : cursor.getInt(offset + 47), // I_LIANGDISL
                cursor.isNull(offset + 48) ? null : cursor.getInt(offset + 48), // I_PINGJUNL1
                cursor.isNull(offset + 49) ? null : cursor.getInt(offset + 49), // I_SHANGCISL
                cursor.isNull(offset + 50) ? null : cursor.getInt(offset + 50), // N_JE
                cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // S_JIETITS
                cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // S_ShangCiZTBM
                cursor.isNull(offset + 53) ? null : cursor.getInt(offset + 53), // I_SHANGGEDBZQTS
                cursor.isNull(offset + 54) ? null : cursor.getLong(offset + 54) // D_SHANGSHANGGYCBRQ
        );
        return entity;
    }

    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, YanChiBiao entity, int offset) {
        entity.setID(cursor.isNull(offset + 0) ? 0 : cursor.getLong(offset + 0));
        entity.setI_RENWUBH(cursor.isNull(offset + 1) ? 0 : cursor.getInt(offset + 1));
        entity.setI_CHAOBIAOID(cursor.isNull(offset + 2) ? 0 : cursor.getInt(offset + 2));
        entity.setS_CID(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setI_CHAOJIANSL(cursor.isNull(offset + 4) ? 0 : cursor.getInt(offset + 4));
        entity.setI_SHANGCICM(cursor.isNull(offset + 5) ? 0 : cursor.getInt(offset + 5));
        entity.setI_CHAOHUICM(cursor.isNull(offset + 6) ? 0 : cursor.getInt(offset + 6));
        entity.setI_ZHUANGTAIBM(cursor.isNull(offset + 7) ? 0 : cursor.getInt(offset + 7));
        entity.setS_ZHUANGTAIMC(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setI_LIANGGAOLDBM(cursor.isNull(offset + 9) ? 0 : cursor.getInt(offset + 9));
        entity.setD_CHAOBIAORQ(cursor.isNull(offset + 10) ? 0 : cursor.getLong(offset + 10));
        entity.setI_CHAOBIAON(cursor.isNull(offset + 11) ? 0 : cursor.getInt(offset + 11));
        entity.setI_CHAOBIAOY(cursor.isNull(offset + 12) ? 0 : cursor.getInt(offset + 12));
        entity.setS_CHAOBIAOY(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setI_FANGSHIBM(cursor.isNull(offset + 14) ? 0 : cursor.getInt(offset + 14));
        entity.setI_CHAOBIAOZT(cursor.isNull(offset + 15) ? 0 : cursor.getInt(offset + 15));
        entity.setD_SHANGCICBRQ(cursor.isNull(offset + 16) ? 0 : cursor.getLong(offset + 16));
        entity.setS_ST(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setS_CH(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setI_CENEIXH(cursor.isNull(offset + 19) ? 0 : cursor.getInt(offset + 19));
        entity.setI_JIUBIAOCM(cursor.isNull(offset + 20) ? 0 : cursor.getInt(offset + 20));
        entity.setI_XINBIAODM(cursor.isNull(offset + 21) ? 0 : cursor.getInt(offset + 21));
        entity.setD_HUANBIAORQ(cursor.isNull(offset + 22) ? 0 : cursor.getLong(offset + 22));
        entity.setD_HUANBIAOHTSJ(cursor.isNull(offset + 23) ? 0 : cursor.getLong(offset + 23));
        entity.setD_DENGJISJ(cursor.isNull(offset + 24) ? 0 : cursor.getLong(offset + 24));
        entity.setI_ZHUANGTAI(cursor.isNull(offset + 25) ? 0 : cursor.getInt(offset + 25));
        entity.setS_YANCHIYBH(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setS_HUITIANYBH(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setD_HUITIANSJ(cursor.isNull(offset + 28) ? 0 : cursor.getLong(offset + 28));
        entity.setS_CHULIQK(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setS_CAOZUOR(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setD_CAOZUOSJ(cursor.isNull(offset + 31) ? 0 : cursor.getLong(offset + 31));
        entity.setI_HUANBIAOFS(cursor.isNull(offset + 32) ? 0 : cursor.getInt(offset + 32));
        entity.setS_CHAOBIAOBZ(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setS_SHUIBIAOTXM(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setS_YANCHIYY(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setI_ZHENSHICM(cursor.isNull(offset + 36) ? 0 : cursor.getInt(offset + 36));
        entity.setI_LINYONGSLSM(cursor.isNull(offset + 37) ? 0 : cursor.getInt(offset + 37));
        entity.setS_X(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setS_Y(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setI_YANCHILX(cursor.isNull(offset + 40) ? 0 : cursor.getInt(offset + 40));
        entity.setS_YANCHIBH(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setI_CHAOBIAOBZ(cursor.isNull(offset + 42) ? 0 : cursor.getInt(offset + 42));
        entity.setI_ShangChuanBZ(cursor.isNull(offset + 43) ? 0 : cursor.getInt(offset + 43));
        entity.setI_KaiZhangBZ(cursor.isNull(offset + 44) ? 0 : cursor.getInt(offset + 44));
        entity.setS_JH(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setI_LIANGGAOSL(cursor.isNull(offset + 46) ? 0 : cursor.getInt(offset + 46));
        entity.setI_LIANGDISL(cursor.isNull(offset + 47) ? 0 : cursor.getInt(offset + 47));
        entity.setI_PINGJUNL1(cursor.isNull(offset + 48) ? 0 : cursor.getInt(offset + 48));
        entity.setI_SHANGCISL(cursor.isNull(offset + 49) ? 0 : cursor.getInt(offset + 49));
        entity.setN_JE(cursor.isNull(offset + 50) ? 0 : cursor.getInt(offset + 50));
        entity.setS_JIETITS(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setS_ShangCiZTBM(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setI_SHANGGEDBZQTS(cursor.isNull(offset + 53) ? 0 : cursor.getInt(offset + 53));
        entity.setD_SHANGSHANGGYCBRQ(cursor.isNull(offset + 54) ? 0 : cursor.getLong(offset + 54));
    }

    @Override
    protected Long updateKeyAfterInsert(YanChiBiao entity, long rowId) {
        return rowId;
    }

    @Override
    protected Long getKey(YanChiBiao entity) {
        return entity.getID();
    }

    /** @inheritdoc */
    @Override
    protected boolean isEntityUpdateable() {
        return true;
    }

    public List<YanChiBiao> getListYanChiBiao(String account, int sortType) {
        QueryBuilder<YanChiBiao> queryBuilder = queryBuilder().where(Properties.S_CHAOBIAOY.eq(account));
        switch (sortType){
            case YanChiBiaoDao.ALLWORK:
                return queryBuilder.orderAsc(Properties.I_CENEIXH).list();
            case YanChiBiaoDao.FINISHWORK:
                return queryBuilder.where(Properties.I_CHAOBIAOBZ.eq(FLAG_FINISH)).orderAsc(Properties.I_CENEIXH).list();
            case YanChiBiaoDao.UNFINISHING:
                return queryBuilder.where(Properties.I_CHAOBIAOBZ.eq(FLAG_UN_FINISH)).orderAsc(Properties.I_CENEIXH).list();
            case YanChiBiaoDao.HIGHAMOUNT:
                return queryBuilder.where(Properties.I_LIANGGAOLDBM.gt(0)).orderAsc(Properties.I_CENEIXH).list();
            case YanChiBiaoDao.LOWAMOUNT:
                return queryBuilder.where(Properties.I_LIANGGAOLDBM.lt(0)).orderAsc(Properties.I_CENEIXH).list();
            case YanChiBiaoDao.FLAG_NOT_UPLOADED:
                return queryBuilder.where(Properties.I_CHAOBIAOBZ.eq(FLAG_FINISH), Properties.I_ShangChuanBZ.eq(0)).orderAsc(Properties.I_CENEIXH).list();
            case YanChiBiaoDao.FLAG_UPLOADED:
                return queryBuilder.where(Properties.I_CHAOBIAOBZ.eq(FLAG_FINISH), Properties.I_ShangChuanBZ.eq(FLAG_FINISH)).orderAsc(Properties.I_CENEIXH).list();
            default:
                return null;
        }
    }

    public List<YanChiBiao> getListYanChiBiao(String account, String key) {
        if (TextUtil.isNullOrEmpty(key)){
            return null;
        }

        QueryBuilder<YanChiBiao> queryBuilder = queryBuilder().where(Properties.S_CHAOBIAOY.eq(account));
        queryBuilder.join(Properties.S_CID, BIAOKAXX.class, BIAOKAXXDao.Properties.S_CID)
                .whereOr(BIAOKAXXDao.Properties.S_DiZhi.like(key),
                        BIAOKAXXDao.Properties.S_KEHUBH.like(key),
                        BIAOKAXXDao.Properties.S_KeHuMC.like(key),
                        BIAOKAXXDao.Properties.S_LIANXIDH.like(key),
                        BIAOKAXXDao.Properties.S_LIANXISJ.like(key),
                        BIAOKAXXDao.Properties.S_CID.like(key),
                        BIAOKAXXDao.Properties.S_JianHao.like(key),
                        BIAOKAXXDao.Properties.S_SHUIBIAOGYH.like(key));

        return queryBuilder.list();
    }

    public List<YanChiBiao> getDeleteYanChiBiao(String account, List<String> list) {
        if (account == null || list == null){
            return null;
        }
        return queryBuilder().where(Properties.S_CHAOBIAOY.eq(account),
                Properties.I_RENWUBH.notIn(list)).orderAsc(Properties.I_CENEIXH).list();
    }

    public List<YanChiBiao> getExistYanChiBiao(String account, List<String> list) {
        if (account == null || list == null){
            return null;
        }
        return queryBuilder().where(Properties.S_CHAOBIAOY.eq(account),
                Properties.I_RENWUBH.in(list)).orderAsc(Properties.I_CENEIXH).list();
    }

    /**
     * 更新延迟数据
     */
    public boolean updateYanChiSJ(String S_CID, int I_ZhuangTaiBM,
                                  String S_ZhuangTaiMC, int I_BenCiCM, int I_ChaoJianSL, double N_JE,
                                  String S_CH, int I_LiangGaoLDYYBM, String S_ChaoBiaoBeiZhu,
                                  int chaoBiaoBiaoZhi, String jieTiTS) {

        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CID.eq(S_CID));
        if (qb.list() == null){
            return false;
        }

        YanChiBiao yanChiBiao = (YanChiBiao) qb.list().get(0);

        QueryBuilder<YanChiBiao> qb2 = this.queryBuilder();
        DeleteQuery<YanChiBiao> bd = qb2.where(Properties.S_CID.eq(S_CID)).buildDelete();
        bd.executeDeleteWithoutDetachingEntities();

        yanChiBiao.setI_CHAOBIAOBZ(chaoBiaoBiaoZhi);
        yanChiBiao.setI_ZHUANGTAIBM(I_ZhuangTaiBM);
        yanChiBiao.setS_ZHUANGTAIMC(S_ZhuangTaiMC);
        yanChiBiao.setI_CHAOHUICM(I_BenCiCM);
        yanChiBiao.setI_CHAOJIANSL(I_ChaoJianSL);
        yanChiBiao.setD_CHAOBIAORQ((int) new Date().getTime());//TODO
        yanChiBiao.setN_JE((int) N_JE);
        yanChiBiao.setI_LIANGGAOLDBM(I_LiangGaoLDYYBM);
        yanChiBiao.setS_CHAOBIAOBZ(S_ChaoBiaoBeiZhu);
        yanChiBiao.setS_JIETITS(jieTiTS);
        if (chaoBiaoBiaoZhi == ChaoBiaoSJColumns.BILLWORK) {
            yanChiBiao.setI_ShangChuanBZ(YanChiBiaoColumns.FINISHSHANGCHUAN);
        } else {
            yanChiBiao.setI_ShangChuanBZ(YanChiBiaoColumns.NOSHANGCHUAN);
        }
        if (this.insertOrReplace(yanChiBiao) == 0) {
            return false;
        } else {
            return true;
        }
    }

    /**
     * 更新延迟数据
     */
    public boolean updateYanChiSJs(String S_CID, int I_ZhuangTaiBM,
                                   String S_ZhuangTaiMC, int I_BenCiCM, int I_ChaoJianSL, double N_JE,
                                   String S_CH, int I_LiangGaoLDYYBM, String S_ChaoBiaoBeiZhu,
                                   int chaoBiaoBiaoZhi, String jieTiTS) {
        String sql = "update " + Tables.PDA_YANCHI + " set "
                + YanChiBiaoColumns.S_JIETITS + "='" + jieTiTS + "', "
                + YanChiBiaoColumns.S_ZHUANGTAIMC + "='" + S_ZhuangTaiMC
                + "', " + YanChiBiaoColumns.I_LIANGGAOLDBM + "="
                + I_LiangGaoLDYYBM + " ," + YanChiBiaoColumns.I_CHAOHUICM
                + "=" + I_BenCiCM + "," + YanChiBiaoColumns.I_ZHUANGTAIBM
                + "=" + I_ZhuangTaiBM + ", " + YanChiBiaoColumns.N_JE + "="
                + N_JE + " ," + YanChiBiaoColumns.D_CHAOBIAORQ + "="
                + new Date().getTime() + ", "
                + YanChiBiaoColumns.I_CHAOJIANSL + "=" + I_ChaoJianSL
                + " ," + YanChiBiaoColumns.I_CHAOBIAOBZ + "="
                + chaoBiaoBiaoZhi + " where " + YanChiBiaoColumns.S_CID
                + "='" + S_CID + "'";
        boolean result = false;
        QueryBuilder qb = this.queryBuilder();
        qb.where(new WhereCondition.StringCondition(sql)).build();
        if (qb.count()==0){
            result = false;
        }else {
            result = true;
        }
        return result;
    }

    /**
     * 根据册本号 册内排序号 返回延迟数据实体
     *
     * @param S_CH
     * @param I_CeNeiPX
     * @return
     */
    public YanChiBiao getYanChiByCHAndCeNeiPX(String S_CH, Integer I_CeNeiPX) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CH.eq(S_CH), Properties.I_CENEIXH.eq(I_CeNeiPX));
        if (qb.list() == null){
            return null;
        }
        YanChiBiao yanChiBiao = (YanChiBiao) qb.list().get(0);
        return yanChiBiao;
    }

    /**
     * 获取量高量低延迟数据
     *
     * @param account
     *            操作员
     * @param loadType
     *            获取类型
     * @return List<ChaoBiaoSJ>
     */
    public List<YanChiBiao> getLiangGaoLiangDiYanChiSJ(String account,
                                                       int loadType) {
        QueryBuilder qb = this.queryBuilder();
        List<YanChiBiao> dataList = new ArrayList<>();
        String selection = "";
        if (loadType == ChaoBiaoSJColumns.YC_LIANGDI_SJ) {
            qb.where(Properties.I_CHAOBIAOBZ.eq(1),Properties.I_LIANGGAOLDBM.lt(0));
        } else {
            qb.where(Properties.I_CHAOBIAOBZ.eq(1),Properties.I_LIANGGAOLDBM.gt(0));
        }
        dataList = qb.list();
        return dataList;
    }

    public YanChiBiao getNextYanChiCB(int renWuId, String ch, long ceNeiXH, boolean chaoBiaoBZ) {
        QueryBuilder<YanChiBiao> qb = this.queryBuilder();
        qb.where(Properties.I_CENEIXH.gt(ceNeiXH));
        if (chaoBiaoBZ){
            qb.where(Properties.I_CHAOBIAOBZ.eq(0));
        }

        List<YanChiBiao> list = qb.orderAsc(Properties.I_CENEIXH).list();
        if (list == null || list.size() == 0){
            return null;
        }
        return list.get(0);
    }

    public YanChiBiao getPreviousYanChiCB(int renWuId, String ch, long ceNeiXH, boolean chaoBiaoBZ) {
        QueryBuilder<YanChiBiao> qb = this.queryBuilder();
        qb.where(Properties.I_CENEIXH.lt(ceNeiXH));
        if (chaoBiaoBZ){
            qb.where(Properties.I_CHAOBIAOBZ.eq(0));
        }

        List<YanChiBiao> list = qb.orderDesc(Properties.I_CENEIXH).list();
        if (list == null || list.size() == 0){
            return null;
        }
        return list.get(0);
    }
    /**
     * 修改全部延迟数据
     */
    public boolean updateYanChiSJ(YanChiBiao yanChiBiao) {
        if (yanChiBiao == null){
            return false;
        }
        YanChiBiao newYanchiBiao = yanChiBiao;
        newYanchiBiao.setI_ShangChuanBZ(YanChiBiaoColumns.FINISHSHANGCHUAN);
        newYanchiBiao.setI_CHAOBIAOBZ(YanChiBiaoColumns.FINISHWORK);

        QueryBuilder<YanChiBiao> qb2 = this.queryBuilder();
        DeleteQuery<YanChiBiao> bd = qb2.where(Properties.S_CID.eq(yanChiBiao.getS_CID())).buildDelete();
        bd.executeDeleteWithoutDetachingEntities();

        if (this.insertOrReplace(newYanchiBiao) == 0){
            return true;
        }else {
            return false;
        }
    }

    /**
     * 获取已抄未上传的延迟数据
     */
    public List<YanChiBiao> getWeiShangChuanYanChiBiaoList(String account,
                                                           int type) {
        QueryBuilder qb = this.queryBuilder();
        if (type == -1) { // all data
            qb.where(Properties.S_CHAOBIAOY.eq(account),Properties.I_ShangChuanBZ.eq(0),Properties.I_CHAOBIAOBZ.eq(1));
        } else if (type == 0) { // 0:延迟
            qb.where(Properties.S_CHAOBIAOY.eq(account),Properties.I_ShangChuanBZ.eq(0),Properties.I_CHAOBIAOBZ.eq(1),Properties.I_YANCHILX.eq(0));
        } else if (type == 1) { // 1:延迟外复
            qb.where(Properties.S_CHAOBIAOY.eq(account),Properties.I_ShangChuanBZ.eq(0),Properties.I_CHAOBIAOBZ.eq(1),Properties.I_YANCHILX.eq(1));
        } else {
            return null;
        }
        List<YanChiBiao> list = qb.list();
        return list;
    }

    /**
     * 修改延迟上传标志
     */
    public boolean updateYanChiShangChuanBZ(String S_CID, int shangchuanBZ) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CID.eq(S_CID));
        YanChiBiao oldYanchi = (YanChiBiao) qb.list().get(0);

        QueryBuilder<YanChiBiao> qb2 = this.queryBuilder();
        DeleteQuery<YanChiBiao> bd = qb2.where(Properties.S_CID.eq(S_CID)).buildDelete();
        bd.executeDeleteWithoutDetachingEntities();

        oldYanchi.setI_ShangChuanBZ(shangchuanBZ);

        if (this.insertOrReplace(oldYanchi)==0){
            return true;
        }else {
            return false;
        }
    }

    /**
     * 插入数据
     */
    public boolean insertData(YanChiBiao yanChiBiao) {
        if (this.insertOrReplace(yanChiBiao) == 0){
            return true;
        }else {
            return false;
        }
    }

    public void insertYanChiBiaoList(List<YanChiBiao> yanChiBiaos) {
        if (yanChiBiaos == null || yanChiBiaos.size() == 0){
            return;
        }
        QueryBuilder<YanChiBiao> queryBuilder;
        List<String> cids = new ArrayList<>();
        if (yanChiBiaos.size() < DataProviderImpl.MAX_IN_SIZE){
            for (YanChiBiao yanChiBiao : yanChiBiaos){
                cids.add(yanChiBiao.getS_CID());
            }
            queryBuilder().where(Properties.S_CID.notIn(cids)).buildDelete()
                    .executeDeleteWithoutDetachingEntities();
        }else {
            List<YanChiBiao> all = queryBuilder().list();
            for (YanChiBiao exist : all){
                if (!isExist(exist.getS_CID(), yanChiBiaos)){
                    queryBuilder().where(Properties.S_CID.eq(exist.getS_CID()))
                            .buildDelete().executeDeleteWithoutDetachingEntities();
                }
            }
        }

        List<YanChiBiao> list = new ArrayList<>();
        for (YanChiBiao yanChiBiao : yanChiBiaos){
            queryBuilder = queryBuilder().where(Properties.S_CID.eq(yanChiBiao.getS_CID()));
            if (queryBuilder.count() == 0){
                yanChiBiao.setID(-1L);
                list.add(yanChiBiao);
            }
        }
        if (list.size() > 0){
            insertInTx(list);
        }
    }

    public void updateYanChiBiaoList(List<YanChiBiao> list) {
        if (list == null || list.size() == 0){
            return;
        }

        updateInTx(list);
    }

    /**
     * 根据S_CID获取本地数据对应的单条延迟信息
     *
     * @param S_CID
     *            用户号
     * @return YanChiBiao实体
     */
    public YanChiBiao getYanChiBiaoXX(int taskId, String cH, String S_CID) {
        QueryBuilder<YanChiBiao> qb = this.queryBuilder();
        qb.where(Properties.S_CID.eq(S_CID),
                Properties.I_RENWUBH.eq(taskId));

        List<YanChiBiao> list = qb.list();
        if (list == null || list.size() == 0){
            return null;
        }
        return list.get(0);
    }

    /**
     * 根据抄表员编号查询YanChiBiaoList
     *
     *            SQLiteDatabase实例
     *
     * @return List<YanChiBiao> 集合
     */
    public List<YanChiBiao> getList(String userId, int yanChiLX, int sortType) {
        QueryBuilder qb = this.queryBuilder();
        if (sortType == YanChiBiaoColumns.ALLWORK) {
            qb.where(Properties.S_CHAOBIAOY.eq(userId));
        } else {
            qb.where(Properties.S_CHAOBIAOY.eq(userId),
                    Properties.I_CHAOBIAOBZ.eq(sortType),
                    Properties.I_YANCHILX.eq(yanChiLX));
        }
        qb.orderAsc(Properties.D_DENGJISJ);
        List<YanChiBiao> list = qb.list();
        return list;
    }

    /**
     * 删除本地不需要的延迟编号下所有的延迟信息
     *
     * @param account
     *            抄表员
     * @param AllYanChiBH
     *            所有需要的延迟编号
     */
    public void deleteNotExistYanChiXX(String account, String AllYanChiBH) {
        QueryBuilder<YanChiBiao> qb2 = this.queryBuilder();
        DeleteQuery<YanChiBiao> bd;
        if (AllYanChiBH == null) {
            return;
        }
        else if (AllYanChiBH.equals("")) {
            bd = qb2.where(Properties.S_CHAOBIAOY.eq(account)).buildDelete();
            bd.executeDeleteWithoutDetachingEntities();
            return;
        }
        bd = qb2.where(Properties.I_RENWUBH.notIn(AllYanChiBH),Properties.S_CHAOBIAOY.eq(account)).buildDelete();
        bd.executeDeleteWithoutDetachingEntities();
    }

    public void deleterUploadedYanChiBiao(String account, List<String> renwuIds){
        if (TextUtil.isNullOrEmpty(account) || renwuIds == null){
            return;
        }

        queryBuilder().where(Properties.S_CHAOBIAOY.eq(account), Properties.I_RENWUBH.in(renwuIds))
                .buildDelete().executeDeleteWithoutDetachingEntities();
    }

    /**
     * 根据延迟编号查找yanChiBHAll不存在本地的任务
     *
     * @param accoount
     *            抄表员
     * @return String
     */
    public String selectNonentityYanChiBH(String accoount, String yanChiBHAll) {
        if (yanChiBHAll == null)
            return null;

        QueryBuilder qb = this.queryBuilder();
        String[] yanChiBH = yanChiBHAll.split(",");
        StringBuilder nonentityYanChiBH = new StringBuilder();
        for (int i = 0; i < yanChiBH.length; i++) {
            if (yanChiBH[i] != "") {
                qb.where(Properties.S_CHAOBIAOY.eq(accoount),Properties.I_RENWUBH.eq(yanChiBH[i]));
                if (qb.count() == 0) {
                    nonentityYanChiBH.append(yanChiBH[i] + ",");
                }
            }
        }
        return nonentityYanChiBH.length() == 0 ? nonentityYanChiBH.toString()
                : nonentityYanChiBH
                .substring(0, nonentityYanChiBH.length() - 1)
                .toString();
    }

    /**
     * 获取未抄的延迟数据总条数
     *
     * @param account
     *            操作员
     * @return int
     */
    public int getWeiWanChengYanChiCount(String account, int yanChiLX) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CHAOBIAOY.eq(account), Properties.I_YANCHILX.eq(yanChiLX), Properties.I_CHAOBIAOBZ.eq(0));
        return (int) qb.count();
    }

    public int getWeiWanChengYanChiCount(String account) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CHAOBIAOY.eq(account), Properties.I_CHAOBIAOBZ.notEq(1));
        return (int) qb.count();
    }

    /**
     * 修改备注
     *
     * @param s_cid
     * @param beiZhu
     */
    public void updateYanChiBeiZhu(String s_cid, String beiZhu) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CID.eq(s_cid));
        if (qb.list() == null){
            return;
        }
        YanChiBiao yanChiBiao = (YanChiBiao) qb.list().get(0);

        QueryBuilder<YanChiBiao> qb2 = this.queryBuilder();
        DeleteQuery<YanChiBiao> bd = qb2.where(Properties.S_CID.notIn(s_cid)).buildDelete();
        bd.executeDeleteWithoutDetachingEntities();

        yanChiBiao.setS_CHAOBIAOBZ(beiZhu);

        this.insertOrReplace(yanChiBiao);
    }

    /**
     * 获取已抄未上传的延迟数据总条数
     *
     * @param account
     *            操作员
     * @return int
     */
    public int getWeiShangChuanYanChiCount(String account) {
        QueryBuilder qb = this.queryBuilder();
        qb.where(Properties.S_CHAOBIAOY.eq(account),Properties.I_ShangChuanBZ.eq(0),Properties.I_CHAOBIAOBZ.eq(1));
        return (int) qb.count();
    }

    private boolean isExist(String cid, List<YanChiBiao> yanChiBiaos){
        boolean exist = false;
        for (YanChiBiao yanChiBiao : yanChiBiaos){
            if (yanChiBiao.getS_CID().equals(cid)){
                exist = true;
                break;
            }
        }
        return exist;
    }

}

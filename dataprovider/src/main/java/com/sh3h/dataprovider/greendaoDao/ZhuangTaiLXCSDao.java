package com.sh3h.dataprovider.greendaoDao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.sh3h.dataprovider.greendaoEntity.ZhuangTaiLXCS;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table CB_ZhuangTaiLXCS.
*/
public class ZhuangTaiLXCSDao extends AbstractDao<ZhuangTaiLXCS, Void> {

    public static final String TABLENAME = "CB_ZhuangTaiLXCS";

    /**
     * Properties of entity ZhuangTaiLXCS.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property S_CID = new Property(0, String.class, "S_CID", false, "S_CID");
        public final static Property D_ChaoBiaoRQ = new Property(1, int.class, "D_ChaoBiaoRQ", false, "D_ChaoBiaoRQ");
        public final static Property I_CHAOBIAOZTBM = new Property(2, int.class, "I_CHAOBIAOZTBM", false, "I_CHAOBIAOZTBM");
        public final static Property I_LIANGGAOLDYYBM = new Property(3, int.class, "I_LIANGGAOLDYYBM", false, "I_LIANGGAOLDYYBM");
        public final static Property RANKNUM = new Property(4, int.class, "RANKNUM", false, "RANKNUM");
    };


    public ZhuangTaiLXCSDao(DaoConfig config) {
        super(config);
    }
    
    public ZhuangTaiLXCSDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'CB_ZhuangTaiLXCS' (" + //
                "'S_CID' TEXT NOT NULL ," + // 0: S_CID
                "'D_ChaoBiaoRQ' INTEGER NOT NULL ," + // 1: D_ChaoBiaoRQ
                "'I_CHAOBIAOZTBM' INTEGER NOT NULL ," + // 2: I_CHAOBIAOZTBM
                "'I_LIANGGAOLDYYBM' INTEGER NOT NULL ," + // 3: I_LIANGGAOLDYYBM
                "'RANKNUM' INTEGER NOT NULL );"); // 4: RANKNUM
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'CB_ZhuangTaiLXCS'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, ZhuangTaiLXCS entity) {
        stmt.clearBindings();
        stmt.bindString(1, entity.getS_CID());
        stmt.bindLong(2, entity.getD_ChaoBiaoRQ());
        stmt.bindLong(3, entity.getI_CHAOBIAOZTBM());
        stmt.bindLong(4, entity.getI_LIANGGAOLDYYBM());
        stmt.bindLong(5, entity.getRANKNUM());
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    /** @inheritdoc */
    @Override
    public ZhuangTaiLXCS readEntity(Cursor cursor, int offset) {
        ZhuangTaiLXCS entity = new ZhuangTaiLXCS( //
            cursor.getString(offset + 0), // S_CID
            cursor.getInt(offset + 1), // D_ChaoBiaoRQ
            cursor.getInt(offset + 2), // I_CHAOBIAOZTBM
            cursor.getInt(offset + 3), // I_LIANGGAOLDYYBM
            cursor.getInt(offset + 4) // RANKNUM
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, ZhuangTaiLXCS entity, int offset) {
        entity.setS_CID(cursor.getString(offset + 0));
        entity.setD_ChaoBiaoRQ(cursor.getInt(offset + 1));
        entity.setI_CHAOBIAOZTBM(cursor.getInt(offset + 2));
        entity.setI_LIANGGAOLDYYBM(cursor.getInt(offset + 3));
        entity.setRANKNUM(cursor.getInt(offset + 4));
     }
    
    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(ZhuangTaiLXCS entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    /** @inheritdoc */
    @Override
    public Void getKey(ZhuangTaiLXCS entity) {
        return null;
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
